<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS 常见布局</title>
    <url>/2020/01/11/CSS-%E5%B8%B8%E8%A7%81%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<h2 id="单列布局"><a class="header-anchor" href="#单列布局"></a>单列布局</h2>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/CSS/single-column-demo-1.png" alt="image"></p>
<p>上述图片示例实现代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=&quot;zh&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot;</span><br><span class="line">          content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Single Column Layout - 单列布局&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        header &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">            max-width: 960px;</span><br><span class="line">            background-color: #6c7b95;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        main &#123;</span><br><span class="line">            height: 500px;</span><br><span class="line">            line-height: 500px;</span><br><span class="line">            max-width: 960px;</span><br><span class="line">            background-color: #fcbad3;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        footer &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">            max-width: 960px;</span><br><span class="line">            background-color: #8ac6d1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        header, main, footer &#123;</span><br><span class="line">            color: #ffffff;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        header, main, footer &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;header&gt;</span><br><span class="line">    Header</span><br><span class="line">&lt;/header&gt;</span><br><span class="line">&lt;main&gt;</span><br><span class="line">    Main</span><br><span class="line">&lt;/main&gt;</span><br><span class="line">&lt;footer&gt;</span><br><span class="line">    Footer</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/CSS/single-column-demo-2.png" alt="image"><br>
上述图片示例实现代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=&quot;zh&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot;</span><br><span class="line">          content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Single Column Layout - 单列布局&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            text-align: center;</span><br><span class="line">            color: #ffffff;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        header &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: #464159;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        nav &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">            max-width: 960px;</span><br><span class="line">            background-color: #8ac6d1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        main &#123;</span><br><span class="line">            background-color: #fcbad3;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        footer &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">            background-color: #6c7b95;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        main &#123;</span><br><span class="line">            height: calc(100vh - 200px);</span><br><span class="line">            line-height: calc(100vh - 200px);</span><br><span class="line">            max-width: 960px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        nav &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;header&gt;</span><br><span class="line">    &lt;nav&gt;Nav&lt;/nav&gt;</span><br><span class="line">&lt;/header&gt;</span><br><span class="line">&lt;main&gt;</span><br><span class="line">    Main</span><br><span class="line">&lt;/main&gt;</span><br><span class="line">&lt;footer&gt;</span><br><span class="line">    Footer</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>深入浅出 Python 爬虫相关知识</title>
    <url>/2019/12/27/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-Python-%E7%88%AC%E8%99%AB%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h2 id="爬虫的四个步骤"><a class="header-anchor" href="#爬虫的四个步骤"></a>爬虫的四个步骤</h2>
<ul>
<li>获取数据
<ul>
<li>Requests 库</li>
</ul>
</li>
<li>解析数据
<ul>
<li>BeautifulSoup 库</li>
</ul>
</li>
<li>提取数据</li>
<li>存储数据</li>
</ul>
<h2 id="使用-urllib-request-对-url-parameters-进行转码"><a class="header-anchor" href="#使用-urllib-request-对-url-parameters-进行转码"></a>使用 urllib.request 对 url parameters 进行转码</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">string = input(&apos;Hello World&apos;)</span><br><span class="line">encode_string = string.encode(&apos;gbk&apos;)</span><br><span class="line">url = &apos;https://www.baidu.com?keyword=&apos; + urllib.request.quote(encode_string)</span><br></pre></td></tr></table></figure>
<h2 id="使用-requests-获取数据"><a class="header-anchor" href="#使用-requests-获取数据"></a>使用 requests 获取数据</h2>
<p>安装</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 requests</span></span><br><span class="line">pip3 install requests</span><br></pre></td></tr></table></figure>
<p>示例</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 引入 requests 库</span></span><br><span class="line">res = requests.get(<span class="string">'URL'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加参数访问</span></span><br><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">'hello'</span>: <span class="string">'world'</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.get(<span class="string">'URL'</span>, params=payload)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加请求头</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="comment"># 请求来源，本案例中其实是不需要加这个参数的</span></span><br><span class="line">    <span class="string">'origin'</span>:<span class="string">'https://y.qq.com'</span>,</span><br><span class="line">    <span class="comment"># 请求来源，携带的信息比“origin”更丰富</span></span><br><span class="line">    <span class="string">'referer'</span>:<span class="string">'https://y.qq.com/n/yqq/song/004Z8Ihr0JIu5s.html'</span>,</span><br><span class="line">    <span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span>,</span><br><span class="line">&#125;</span><br><span class="line">res = requests.get(<span class="string">'URL'</span>, params=payload, headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印变量 res 的数据类型：requests.models.Response 类</span></span><br><span class="line">print(type(res))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动处理 JSON</span></span><br><span class="line">res.json()</span><br></pre></td></tr></table></figure>
<h4 id="request-models-response-类"><a class="header-anchor" href="#request-models-response-类"></a>request.models.Response 类</h4>
<p>常用成员属性：</p>
<ul>
<li>response.status_code - 检查请求是否成功</li>
<li>response.content - 把 response 对象转换为二进制数据</li>
<li>response.text - 把 response 对象转换为字符串数据</li>
<li>response.encoding - 定义 response 对象的编码</li>
</ul>
<h4 id="request-session-会话对象"><a class="header-anchor" href="#request-session-会话对象"></a>request.Session - 会话对象</h4>
<p>会话对象让你能够跨请求保持某些参数。它也会在同一个 Session 实例发出的所有请求之间保持 cookie， 期间使用 urllib3 的 connection pooling 功能。所以如果你向同一主机发送多个请求，底层的 TCP 连接将会被重用，从而带来显著的性能提升。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">session = requests.Session()</span><br><span class="line">session.get(<span class="string">'url'</span>)</span><br></pre></td></tr></table></figure>
<h4 id="requests-cookies-转换存储方法"><a class="header-anchor" href="#requests-cookies-转换存储方法"></a>requests.cookies - 转换存储方法</h4>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-cookies-%E8%BD%AC%E6%8D%A2%E5%AD%98%E5%82%A8.png" alt="image"></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 cookies 转化成字典</span></span><br><span class="line">cookies_dict = requests.utils.dict_from_cookiejar(session.cookies)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 cookies 字典转化成字符串</span></span><br><span class="line">cookies_str = json.dumps(cookies_dict)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 cookies 字符串存储起来</span></span><br><span class="line">file = open(<span class="string">'cookies.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">file.write(cookies_str)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-cookie-%E8%BD%AC%E6%8D%A2.png" alt="image"></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">cookies_txt = open(<span class="string">'cookies.txt'</span>, <span class="string">'r'</span>)</span><br><span class="line">cookies_dict = json.loads(cookies_txt.read())</span><br><span class="line">cookies = requests.utils.cookiejar_from_dict(cookies_dict)</span><br><span class="line">session.cookies = cookies</span><br></pre></td></tr></table></figure>
<h2 id="使用-beautifulsoup-解析数据"><a class="header-anchor" href="#使用-beautifulsoup-解析数据"></a>使用 BeautifulSoup 解析数据</h2>
<p>安装</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 BeautifulSoup</span></span><br><span class="line">pip3 install BeautifulSoup4</span><br></pre></td></tr></table></figure>
<p>示例</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">res = requests.get(<span class="string">'https://localprod.pandateacher.com/python-manuscript/crawler-html/spider-men5.0.html'</span>) </span><br><span class="line">html = res.text</span><br><span class="line"></span><br><span class="line"><span class="comment">#把网页解析为BeautifulSoup对象</span></span><br><span class="line">soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br></pre></td></tr></table></figure>
<h4 id="beautifulsoup-对象常用方法与属性"><a class="header-anchor" href="#beautifulsoup-对象常用方法与属性"></a>BeautifulSoup 对象常用方法与属性</h4>
<ul>
<li>方法
<ul>
<li>find(tag, attributes, recursive, text, keywords)
<ul>
<li>作用：提取满足要求的首个数据</li>
<li>用法：BeautifulSoup 对象.find(‘标签’, ‘属性’)</li>
<li>示例：<code>soup.find('div', class_='books')</code></li>
<li>返回：Tag 类对象</li>
</ul>
</li>
<li>find_all(tag, attributes, recursive, text, limit, keywords)
<ul>
<li>作用：提取满足要求的所有数据</li>
<li>用法：BeautifulSoup 对象.find(‘标签’, ‘属性’)</li>
<li>示例：<code>soup.find_all('div', style_='books')</code></li>
<li>返回：ResultSet 类对象，本质是 Tag 类对象的列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>示例</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">res = requests.get(<span class="string">'https://localprod.pandateacher.com/python-manuscript/crawler-html/spider-men5.0.html'</span>)</span><br><span class="line">html= res.text</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup( html,<span class="string">'html.parser'</span>)</span><br><span class="line">items = soup.find_all(class_=<span class="string">'books'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">    print(<span class="string">'想找的数据都包含在这里了：\n'</span>,item)</span><br></pre></td></tr></table></figure>
<h4 id="tag-对象常用方法与属性"><a class="header-anchor" href="#tag-对象常用方法与属性"></a>Tag 对象常用方法与属性</h4>
<ul>
<li>Tag.find()、Tag.find_all()：提取 Tag 中的 Tag。</li>
<li>Tag.text：提取 Tag 中的文字。</li>
<li>Tag[‘属性名’]：输入参数属性名，可以提取 Tag 这个属性的值。</li>
</ul>
<h4 id="编写爬虫通用业务流程"><a class="header-anchor" href="#编写爬虫通用业务流程"></a>编写爬虫通用业务流程</h4>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-%E7%88%AC%E8%99%AB%E9%80%9A%E7%94%A8%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B.png" alt="image"></p>
<h2 id="使用-selenium-操控浏览器"><a class="header-anchor" href="#使用-selenium-操控浏览器"></a>使用 Selenium 操控浏览器</h2>
<p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install selenium</span><br></pre></td></tr></table></figure>
<p>本地 Google Chrome 设置方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"># 设置 Chrome 驱动</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line"># 打开网址</span><br><span class="line">driver.get(&apos;https://localprod.pandateacher.com/python-manuscript/hello-spiderman/&apos;)</span><br><span class="line"></span><br><span class="line"># 等待页面加载</span><br><span class="line">time.sleep(2)</span><br><span class="line"></span><br><span class="line"># 获取页面源码</span><br><span class="line">html = driver.page_source</span><br><span class="line"></span><br><span class="line"># 关闭页面</span><br><span class="line">driver.close()</span><br></pre></td></tr></table></figure>
<h4 id="selenium-提取-html-元素"><a class="header-anchor" href="#selenium-提取-html-元素"></a>Selenium 提取 HTML 元素</h4>
<table>
<thead>
<tr>
<th>方法</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>find_element_by_tag_name、find_elements_by_tag_name</td>
<td>通过元素的标签名称选择</td>
</tr>
<tr>
<td>find_element_by_class_name、find_elements_by_class_name</td>
<td>通过元素的 class 属性选择</td>
</tr>
<tr>
<td>find_element_by_id、find_elements_by_id</td>
<td>通过元素的 id 选择</td>
</tr>
<tr>
<td>find_element_by_name、find_elements_by_name</td>
<td>通过元素的 name 属性选择</td>
</tr>
<tr>
<td>find_element_by_link_text、find_elements_by_link_text</td>
<td>通过链接文本获取超链接</td>
</tr>
<tr>
<td>find_element_by_partial_link_text、find_elements_by_partial_link_text</td>
<td>通过链接的部分文本获取超链接</td>
</tr>
</tbody>
</table>
<h4 id="selenium-操作浏览器"><a class="header-anchor" href="#selenium-操作浏览器"></a>Selenium 操作浏览器</h4>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 模拟按键输入，自动填写表单</span></span><br><span class="line">WebElement.send_keys(<span class="string">'123456'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击元素</span></span><br><span class="line">WebElement.click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除元素内容</span></span><br><span class="line">WebElement.clear()</span><br></pre></td></tr></table></figure>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以下方法都可以从网页中提取出'你好，蜘蛛侠！'这段文字</span></span><br><span class="line"></span><br><span class="line">find_element_by_tag_name：通过元素的名称选择</span><br><span class="line"><span class="comment"># 如&lt;h1&gt;你好，蜘蛛侠！&lt;/h1&gt; </span></span><br><span class="line"><span class="comment"># 可以使用find_element_by_tag_name('h1')</span></span><br><span class="line"></span><br><span class="line">find_element_by_class_name：通过元素的<span class="class"><span class="keyword">class</span>属性选择</span></span><br><span class="line"># 如&lt;h1 class="title"&gt;你好，蜘蛛侠！&lt;/h1&gt;</span><br><span class="line"><span class="comment"># 可以使用find_element_by_class_name('title')</span></span><br><span class="line"></span><br><span class="line">find_element_by_id：通过元素的id选择</span><br><span class="line"><span class="comment"># 如&lt;h1 id="title"&gt;你好，蜘蛛侠！&lt;/h1&gt; </span></span><br><span class="line"><span class="comment"># 可以使用find_element_by_id('title')</span></span><br><span class="line"></span><br><span class="line">find_element_by_name：通过元素的name属性选择</span><br><span class="line"><span class="comment"># 如&lt;h1 name="hello"&gt;你好，蜘蛛侠！&lt;/h1&gt; </span></span><br><span class="line"><span class="comment"># 可以使用find_element_by_name('hello')</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#以下两个方法可以提取出超链接</span></span><br><span class="line"></span><br><span class="line">find_element_by_link_text：通过链接文本获取超链接</span><br><span class="line"><span class="comment"># 如&lt;a href="spidermen.html"&gt;你好，蜘蛛侠！&lt;/a&gt;</span></span><br><span class="line"><span class="comment"># 可以使用find_element_by_link_text('你好，蜘蛛侠！')</span></span><br><span class="line"></span><br><span class="line">find_element_by_partial_link_text：通过链接的部分文本获取超链接</span><br><span class="line"><span class="comment"># 如&lt;a href="https://localprod.pandateacher.com/python-manuscript/hello-spiderman/"&gt;你好，蜘蛛侠！&lt;/a&gt;</span></span><br><span class="line"><span class="comment"># 可以使用find_element_by_partial_link_text('你好')</span></span><br></pre></td></tr></table></figure>
<h4 id="webelement-对象常用方法与属性"><a class="header-anchor" href="#webelement-对象常用方法与属性"></a>WebElement 对象常用方法与属性</h4>
<ul>
<li>WebElement.text - 提取文字</li>
<li>WebElement.get_attribute() - 输入参数</li>
</ul>
<h2 id="使用-schedule-实现定时"><a class="header-anchor" href="#使用-schedule-实现定时"></a>使用 Schedule 实现定时</h2>
<p>安装</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">pip3 install schedule</span><br></pre></td></tr></table></figure>
<p>示例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import schedule</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">#定义函数</span><br><span class="line">def job():</span><br><span class="line">    print(&quot;I&apos;m working...&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 部署每10分钟执行一次job()函数的任务</span><br><span class="line">schedule.every(10).minutes.do(job)     </span><br><span class="line"></span><br><span class="line"># 部署每×小时执行一次job()函数的任务</span><br><span class="line">schedule.every().hour.do(job)        </span><br><span class="line"></span><br><span class="line"># 部署在每天的10:30执行job()函数的任务</span><br><span class="line">schedule.every().day.at(&quot;10:30&quot;).do(job)</span><br><span class="line"></span><br><span class="line"># 部署每个星期一执行job()函数的任务</span><br><span class="line">schedule.every().monday.do(job)       </span><br><span class="line"></span><br><span class="line"># 部署每周三的13：15执行函数</span><br><span class="line">schedule.every().wednesday.at(&quot;13:15&quot;).do(job)的任务</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    # 检查并执行任务</span><br><span class="line">    schedule.run_pending()</span><br><span class="line">    time.sleep(1)</span><br></pre></td></tr></table></figure>
<h2 id="使用-gevent-实现多协程"><a class="header-anchor" href="#使用-gevent-实现多协程"></a>使用 gevent 实现多协程</h2>
<p>安装</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">pip3 install gevent</span><br></pre></td></tr></table></figure>
<p>示例</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从 gevent 库里导入 monkey 模块</span></span><br><span class="line"><span class="keyword">from</span> gevent <span class="keyword">import</span> monkey</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把程序变成协作式运行</span></span><br><span class="line">monkey.patch_all()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录网站爬取所需时间</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现多协程</span></span><br><span class="line"><span class="keyword">import</span> gevent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现网站爬取</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录程序开始时间</span></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站列表</span></span><br><span class="line">url_list = [<span class="string">'https://www.baidu.com/'</span>,</span><br><span class="line">            <span class="string">'https://www.sina.com.cn/'</span>,</span><br><span class="line">            <span class="string">'http://www.sohu.com/'</span>,</span><br><span class="line">            <span class="string">'https://www.qq.com/'</span>,</span><br><span class="line">            <span class="string">'https://www.163.com/'</span>,</span><br><span class="line">            <span class="string">'http://www.iqiyi.com/'</span>,</span><br><span class="line">            <span class="string">'https://www.tmall.com/'</span>,</span><br><span class="line">            <span class="string">'http://www.ifeng.com/'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个 crawler() 函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawler</span><span class="params">(url)</span>:</span></span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    print(url, time.time() - start, response.status_code)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建空的任务列表</span></span><br><span class="line">tasks_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">    <span class="comment"># 用 gevent.spawn() 函数创建任务</span></span><br><span class="line">    task = gevent.spawn(crawler, url)</span><br><span class="line">    <span class="comment"># 往任务列表添加任务</span></span><br><span class="line">    tasks_list.append(task)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行所有任务</span></span><br><span class="line">gevent.joinall(tasks_list)</span><br><span class="line">print(time.time() - start)</span><br></pre></td></tr></table></figure>
<h2 id="使用-queue-模块实现队列"><a class="header-anchor" href="#使用-queue-模块实现队列"></a>使用 queue 模块实现队列</h2>
<p>示例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from gevent.queue import Queue</span><br></pre></td></tr></table></figure>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-queue.png" alt="image"></p>
<h2 id="使用-scrapy-框架"><a class="header-anchor" href="#使用-scrapy-框架"></a>使用 Scrapy 框架</h2>
<h4 id="scrapy-框架结构"><a class="header-anchor" href="#scrapy-框架结构"></a>Scrapy 框架结构</h4>
<ul>
<li>Scrapy Engine
<ul>
<li>Scheduler
<ul>
<li>处理引擎发送过来的requests对象（即网页请求的相关信息集合，包括params，data，cookies，request headers…等），会把请求的url以有序的方式排列成队，并等待引擎来提取（功能上类似于gevent库的queue模块）。</li>
</ul>
</li>
<li>Downloader
<ul>
<li>负责处理引擎发送过来的requests，进行网页爬取，并将返回的response（爬取到的内容）交给引擎。它对应的是爬虫流程【获取数据】这一步。</li>
</ul>
</li>
<li>Spiders
<ul>
<li>主要任务是创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。它对应的是爬虫流程【解析数据】和【提取数据】这两步。</li>
</ul>
</li>
<li>Item Pipeline
<ul>
<li>负责存储和处理Spiders部门提取到的有用数据。这个对应的是爬虫流程【存储数据】这一步。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-scrapy-%E7%BB%93%E6%9E%84.png" alt="image"></p>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-scrapy-%E6%B5%81%E7%A8%8B.png" alt="image"></p>
<p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install scrapy</span><br></pre></td></tr></table></figure>
<h2 id="反爬策略"><a class="header-anchor" href="#反爬策略"></a>反爬策略</h2>
<ul>
<li>豆瓣电影 Top250 使用 HTTP 头部进行验证
<ul>
<li>模拟正常行为头部，添加至每次请求当中</li>
</ul>
</li>
<li>QQ 音乐、搜索「周杰伦」使用 Ajax 进行反爬
<ul>
<li>查看所有 XHR，优先查看传输时间长，传输体积大的请求</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 的基础使用</title>
    <url>/2019/12/21/Python-%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="python-字符串"><a class="header-anchor" href="#python-字符串"></a>Python 字符串</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 三引号 - 直接换行</span><br><span class="line">print(&quot;&quot;&quot;\</span><br><span class="line">千寻你好，人们叫我&apos;无脸男&apos;</span><br><span class="line">这个世界的人都选择无视我</span><br><span class="line">只有你看到了我并和我打招呼</span><br><span class="line">我感到很孤单，很孤单</span><br><span class="line">你愿意和我成为朋友吗？&quot;&quot;&quot;)</span><br><span class="line"></span><br><span class="line"># 双引号 - 转义换行</span><br><span class="line">print(&quot;\n千寻你好，人们叫我&apos;无脸男&apos;\n这个世界的人都选择无视我\n只有你看到了我并和我打招呼\n我感到很孤单，很孤单\n你愿意和我成为朋友吗？&quot;)</span><br><span class="line"></span><br><span class="line"># 单引号 - 转义换行，转义单引号</span><br><span class="line">print(&apos;\n千寻你好，人们叫我\&apos;无脸男\&apos;\n这个世界的人都选择无视我\n只有你看到了我并和我打招呼\n我感到很孤单，很孤单\n你愿意和我成为朋友吗？&apos;)</span><br><span class="line"></span><br><span class="line"># %s - 字符串</span><br><span class="line">print(&apos;%s&apos; % str)</span><br><span class="line"></span><br><span class="line"># %f - 浮点数</span><br><span class="line">print(&apos;%f&apos; % float)</span><br><span class="line"></span><br><span class="line"># %d - 整数型</span><br><span class="line">print(&apos;%d&apos; % int)</span><br><span class="line"></span><br><span class="line"># 示例</span><br><span class="line">print(&apos;%s%d&apos;%(&apos;数字：&apos;,0))</span><br></pre></td></tr></table></figure>
<h2 id="python-列表"><a class="header-anchor" href="#python-列表"></a>Python 列表</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">students = [&apos;小明&apos;, &apos;小红&apos;, &apos;小刚&apos;]</span><br><span class="line"></span><br><span class="line"># 从列表中提取单个元素：&quot;小刚&quot;</span><br><span class="line">students[2]</span><br><span class="line"></span><br><span class="line"># 从列表中提取多个元素：[&apos;小明&apos;, &apos;小红&apos;]</span><br><span class="line">students[:2]</span><br><span class="line"></span><br><span class="line"># 给列表增加/删除元素：</span><br><span class="line">students.append(&apos;小美&apos;)</span><br><span class="line">del students[1]</span><br><span class="line"></span><br><span class="line"># 用于移除列表中一个元素，默认取最后一个元素</span><br><span class="line">students.pop()</span><br><span class="line">students.pop(0)</span><br></pre></td></tr></table></figure>
<h2 id="python-字典"><a class="header-anchor" href="#python-字典"></a>Python 字典</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 字典</span><br><span class="line">scores = &#123;&apos;小明&apos;: 95, &apos;小红&apos;: 90, &apos;小刚&apos;: 90&#125;</span><br><span class="line"></span><br><span class="line"># 从字典中提取元素</span><br><span class="line">scores[&apos;小明&apos;]</span><br><span class="line"></span><br><span class="line"># 从字典中增加/删除</span><br><span class="line">scores[&apos;小美&apos;] = 85</span><br><span class="line">del scores[&apos;小明&apos;]</span><br></pre></td></tr></table></figure>
<h2 id="python-面向对象"><a class="header-anchor" href="#python-面向对象"></a>Python 面向对象</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 类的继承</span><br><span class="line">class Chinese:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Cantonese(Chinese):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chinese = Chinese()</span><br><span class="line">cantonese = Cantonese()</span><br><span class="line"></span><br><span class="line">print(&apos;\n验证1：子类创建的实例同时也属于父类&apos;)</span><br><span class="line">print(isinstance(chinese, Chinese))</span><br><span class="line">print(isinstance(cantonese, Chinese))</span><br><span class="line"></span><br><span class="line">print(&apos;\n验证2：父类创建的实例不属于子类。&apos;)</span><br><span class="line">print(isinstance(chinese, Cantonese))</span><br><span class="line"></span><br><span class="line">print(&apos;\n验证3：类创建的实例都属于根类。&apos;)</span><br><span class="line">print(isinstance(chinese, object))</span><br><span class="line">print(isinstance(cantonese, object))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 多层继承</span><br><span class="line">class EarthMan:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 中国人继承了地球人</span><br><span class="line">class Chinese(EarthMan):</span><br><span class="line">    def __init__(self, name):</span><br><span class="line">        self.name = &apos;中国人&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 广东人继承了中国人，同时也继承了地球人。</span><br><span class="line">class Cantonese(Chinese):</span><br><span class="line">     def __init__(self, name, type = &apos;foo&apos;):</span><br><span class="line">        Chinese.__init__(self, name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 多重继承：多重继承中，若某父类还有父类的话，会先继续往上找到顶</span><br><span class="line">class Su:</span><br><span class="line">    born_city = &apos;JiangSu&apos;</span><br><span class="line">    wearing = &apos;thick&apos;</span><br><span class="line"></span><br><span class="line">    def diet(self):</span><br><span class="line">        print(&apos;我们爱吃甜。&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Yue:</span><br><span class="line">    settle_city = &apos;GuangDong&apos;</span><br><span class="line">    wearing = &apos;thin&apos;</span><br><span class="line"></span><br><span class="line">    def diet(self):</span><br><span class="line">        print(&apos;我们吃得清淡。&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Yuesu(Yue, Su):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xiaoming = Yuesu()</span><br><span class="line"># 先在 Yue类找，找到了，打印出来。</span><br><span class="line"></span><br><span class="line">print(xiaoming.wearing)</span><br><span class="line"># Yue类没有born_city，才去Su类找。</span><br><span class="line"></span><br><span class="line">print(xiaoming.born_city)</span><br><span class="line"># 方法调用，和属性调用一样，也符合就近原则。</span><br><span class="line"></span><br><span class="line">xiaoming.diet()</span><br></pre></td></tr></table></figure>
<h2 id="python-文件操作"><a class="header-anchor" href="#python-文件操作"></a>Python 文件操作</h2>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读文件：开 - 读 - 关</span></span><br><span class="line">file1 = open(<span class="string">'/test.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">fileContent = file1.read()</span><br><span class="line">file1.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写文件：开 - 写 - 关</span></span><br><span class="line">file1 = open(<span class="string">'/test.txt'</span>, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">fileContent = file1.read()</span><br><span class="line">file1.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取信息</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'test.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 这时，lines 的数据存放在内存里。</span></span><br><span class="line">    lines = f.readlines()  </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 将读取到的内容打印出来，发现实际上读到的是带换行符的字符串。</span></span><br><span class="line">print(lines)  </span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'test.txt'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> new:</span><br><span class="line">    <span class="comment"># 在内存中，对数据进行处理，然后再写到文档里，覆盖之前的内容。</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:  </span><br><span class="line">        <span class="comment"># 注意：这里的条件要根据上面打印出的数据写。</span></span><br><span class="line">        <span class="keyword">if</span> line <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">'0\n'</span>,<span class="string">'1\n'</span>]:  </span><br><span class="line">            new.write(line)</span><br></pre></td></tr></table></figure>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6.png" alt="image"></p>
<h2 id="python-csv-读写"><a class="header-anchor" href="#python-csv-读写"></a>Python CSV 读写</h2>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="comment">#引用csv模块。</span></span><br><span class="line"></span><br><span class="line">csv_file = open(<span class="string">'demo.csv'</span>,<span class="string">'w'</span>,newline=<span class="string">''</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment">#调用open()函数打开csv文件，传入参数：文件名“demo.csv”、写入模式“w”、newline=''、encoding='utf-8'。</span></span><br><span class="line"></span><br><span class="line">writer = csv.writer(csv_file)</span><br><span class="line"><span class="comment"># 用csv.writer()函数创建一个writer对象。</span></span><br><span class="line"></span><br><span class="line">writer.writerow([<span class="string">'电影'</span>,<span class="string">'豆瓣评分'</span>])</span><br><span class="line"><span class="comment">#调用writer对象的writerow()方法，可以在csv文件里写入一行文字 “电影”和“豆瓣评分”。</span></span><br><span class="line"></span><br><span class="line">writer.writerow([<span class="string">'银河护卫队'</span>,<span class="string">'8.0'</span>])</span><br><span class="line"><span class="comment">#在csv文件里写入一行文字 “银河护卫队”和“8.0”。</span></span><br><span class="line"></span><br><span class="line">writer.writerow([<span class="string">'复仇者联盟'</span>,<span class="string">'8.1'</span>])</span><br><span class="line"><span class="comment">#在csv文件里写入一行文字 “复仇者联盟”和“8.1”。</span></span><br><span class="line"></span><br><span class="line">csv_file.close()</span><br><span class="line"><span class="comment">#写入完成后，关闭文件就大功告成啦！</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">csv_file = open(<span class="string">'demo.csv'</span>,<span class="string">'r'</span>,newline=<span class="string">''</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">reader = csv.reader(csv_file)</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    print(row)</span><br></pre></td></tr></table></figure>
<h2 id="python-excel-读写"><a class="header-anchor" href="#python-excel-读写"></a>Python Excel 读写</h2>
<h4 id="excel-相关概念"><a class="header-anchor" href="#excel-相关概念"></a>Excel 相关概念</h4>
<p>一个Excel文档也称为一个工作薄（workbook），每个工作薄里可以有多个工作表（worksheet），当前打开的工作表又叫活动表。每个工作表里有行和列，特定的行与列相交的方格称为单元格（cell）。比如上图第A列和第1行相交的方格我们可以直接表示为A1单元格。</p>
<h4 id="使用-openpyxl-库读写-excel"><a class="header-anchor" href="#使用-openpyxl-库读写-excel"></a>使用 openpyxl 库读写 Excel</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install openpyxl</span><br></pre></td></tr></table></figure>
<p>使用 <code>openpyxl</code> 库写 Excel 示例</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 引用openpyxl</span></span><br><span class="line"><span class="keyword">import</span> openpyxl </span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用openpyxl.Workbook()函数创建新的workbook（工作薄）对象，就是创建新的空的Excel文件</span></span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line"></span><br><span class="line"><span class="comment"># wb.active就是获取这个工作薄的活动表，通常就是第一个工作表</span></span><br><span class="line">sheet = wb.active</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以用.title给工作表重命名。现在第一个工作表的名称就会由原来默认的“sheet1”改为"new title"</span></span><br><span class="line">sheet.title = <span class="string">'new title'</span></span><br><span class="line">sheet[<span class="string">'A1'</span>] = <span class="string">'漫威宇宙'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先把要写入的多行内容写成列表，再放进大列表里，赋值给rows</span></span><br><span class="line">rows = [[<span class="string">'美国队长'</span>,<span class="string">'钢铁侠'</span>,<span class="string">'蜘蛛侠'</span>],[<span class="string">'是'</span>,<span class="string">'漫威'</span>,<span class="string">'宇宙'</span>, <span class="string">'经典'</span>,<span class="string">'人物'</span>]]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> rows:</span><br><span class="line">    sheet.append(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存新建的Excel文件，并命名为“Marvel.xlsx”</span></span><br><span class="line">wb.save(<span class="string">'Marvel.xlsx'</span>)</span><br></pre></td></tr></table></figure>
<p>使用 <code>openpyxl</code> 库读 Excel 示例</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#读取的代码：</span></span><br><span class="line">wb = openpyxl.load_workbook(<span class="string">'Marvel.xlsx'</span>)</span><br><span class="line">sheet = wb[<span class="string">'new title'</span>]</span><br><span class="line">sheetname = wb.sheetnames</span><br><span class="line">print(sheetname)</span><br><span class="line">A1_cell = sheet[<span class="string">'A1'</span>]</span><br><span class="line">A1_value = A1_cell.value</span><br><span class="line">print(A1_value)</span><br></pre></td></tr></table></figure>
<h2 id="python-运算符"><a class="header-anchor" href="#python-运算符"></a>Python 运算符</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(2+1) # 加法</span><br><span class="line"># 3</span><br><span class="line"></span><br><span class="line">print(1-2) # 减法</span><br><span class="line"># -1</span><br><span class="line"></span><br><span class="line">print(1*2) # 乘法</span><br><span class="line"># 2</span><br><span class="line"></span><br><span class="line">print(1/2) # 除法</span><br><span class="line"># 0.5</span><br><span class="line"></span><br><span class="line">print(2**3) # 幂（2 的 3 次方）</span><br><span class="line"># 8</span><br><span class="line"></span><br><span class="line">print(10%3) # 取模（做除法返回余数）</span><br><span class="line"># 1</span><br><span class="line"></span><br><span class="line">print(10//3) # 取整数（做除法返回商的整数部分）</span><br><span class="line"># 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 布尔运算符</span><br><span class="line"># and 要求条件都满足才为 True</span><br><span class="line"># or 要求其中一个条件满足就为 True</span><br><span class="line">a = 1</span><br><span class="line">b = -1</span><br><span class="line">print(a == 1 and b == 1)</span><br><span class="line">print(a == 1 or b== 1)</span><br><span class="line"></span><br><span class="line"># not 反转真假</span><br><span class="line">a = True</span><br><span class="line">print(not a) # 判断为假</span><br></pre></td></tr></table></figure>
<h2 id="python-异常捕获"><a class="header-anchor" href="#python-异常捕获"></a>Python 异常捕获</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">num = [1,2,0,3,1.5,&apos;6&apos;]</span><br><span class="line">for x in num:</span><br><span class="line">    try:  # 尝试执行下列代码</span><br><span class="line">        print (6/x)</span><br><span class="line">    except ZeroDivisionError:</span><br><span class="line">        print(&apos;0是不能做除数的！&apos;)</span><br><span class="line">    except TypeError:  # 当报错信息为TypeError，执行下面的语句。</span><br><span class="line">        print(&apos;被除数必须是整值或浮点数！&apos;)</span><br><span class="line">        </span><br><span class="line">    try: </span><br><span class="line">        print(6/x)</span><br><span class="line">    except (ZeroDivisionError, TypeError):</span><br><span class="line">        print(&apos;Something Wrong.&apos;)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    try:</span><br><span class="line">        print(6/x)</span><br><span class="line">    except Exception:</span><br><span class="line">        print(&apos;Something Wrong.&apos;)</span><br></pre></td></tr></table></figure>
<h2 id="python-常用函数"><a class="header-anchor" href="#python-常用函数"></a>Python 常用函数</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 自定义函数</span><br><span class="line">def $name($params):</span><br><span class="line">    $body</span><br><span class="line">    return $result</span><br><span class="line"></span><br><span class="line">range(a, b, c)</span><br><span class="line"></span><br><span class="line"># 计数从 a 开始，不填时，默认从 0 开始</span><br><span class="line">range(a, 5)</span><br><span class="line"></span><br><span class="line"># 计数到 b 结束，但不包括 b</span><br><span class="line">range(b)</span><br><span class="line"></span><br><span class="line"># 计数的间隔，默认为 1 </span><br><span class="line">range(0, 30, 5)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str.format()</span><br><span class="line"></span><br><span class="line"># 优势1：不用担心用错类型码。</span><br><span class="line">print(&apos;\n&#123;&#125;&#123;&#125;&apos;.format(&apos;数字：&apos;,0))  </span><br><span class="line"></span><br><span class="line"># 不设置指定位置时，默认按顺序对应。</span><br><span class="line">print(&apos;&#123;&#125;，&#123;&#125;&apos;.format(0,1))  </span><br><span class="line"></span><br><span class="line"># 优势2：当设置指定位置时，按指定的对应。</span><br><span class="line">print(&apos;&#123;1&#125;，&#123;0&#125;&apos;.format(0,1))  </span><br><span class="line"></span><br><span class="line"># 优势3：可多次调用format后的数据。</span><br><span class="line">print(&apos;&#123;0&#125;，&#123;1&#125;，&#123;0&#125;&apos;.format(0,1))  </span><br><span class="line"></span><br><span class="line">numberList.index()</span><br><span class="line"></span><br><span class="line">num = [0,1,0,1,2]</span><br><span class="line"># 数字1首先出现的索引位置是list[1]（索引位置从0开始）。</span><br><span class="line">print(num.index(1))  </span><br><span class="line"></span><br><span class="line"># 数字2首先出现的索引位置是list[4]。</span><br><span class="line">print(num.index(2))</span><br></pre></td></tr></table></figure>
<h2 id="python-模块"><a class="header-anchor" href="#python-模块"></a>Python 模块</h2>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-%E6%A8%A1%E5%9D%97-1.png" alt="image"></p>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/python/python-%E6%A8%A1%E5%9D%97-1.png" alt="image"></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Python 发送邮件</title>
    <url>/2019/11/14/%E4%BD%BF%E7%94%A8-Python-%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="内置模块"><a class="header-anchor" href="#内置模块"></a>内置模块</h2>
<ul>
<li>email：构建邮件内容</li>
<li>smtplib：发送邮件</li>
</ul>
<h2 id="stmplib-模块使用示例"><a class="header-anchor" href="#stmplib-模块使用示例"></a>stmplib 模块使用示例</h2>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line"><span class="comment"># SMTP Simple Mail Transfer Protocol</span></span><br><span class="line">server = smtplib.SMTP(host, port)</span><br><span class="line"><span class="comment"># SSL 加密</span></span><br><span class="line">server = smtplib.SMTP_SSL(host, port) </span><br><span class="line"><span class="comment"># Python 3.7 以后使用</span></span><br><span class="line">server = smtplib.SMTP_SSL(host, port) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接一个服务器</span></span><br><span class="line">server.connect(host, port)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 邮箱账号与授权码</span></span><br><span class="line">server.login(username, password)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送地址，收件人，内容</span></span><br><span class="line">server.sendmail(from_addr, to_addr, msg.as_string())</span><br><span class="line">server.quit()</span><br></pre></td></tr></table></figure>
<h2 id="email-模块使用示例"><a class="header-anchor" href="#email-模块使用示例"></a>email 模块使用示例</h2>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.mime.image <span class="keyword">import</span> MIMEImage</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本内容，文本类型，charset</span></span><br><span class="line">msg = MIMEText.(msg, type, charset)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 HTML 文档</span></span><br><span class="line">msg = MIMEText.(msg, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure>
<h2 id="email-模块配置邮件头部"><a class="header-anchor" href="#email-模块配置邮件头部"></a>email 模块配置邮件头部</h2>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"></span><br><span class="line"><span class="comment"># 邮件标题</span></span><br><span class="line">message[<span class="string">'Subject'</span>] = Header(Subject)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发件人</span></span><br><span class="line">message[<span class="string">'From'</span>] = Header(from_addr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 收件人</span></span><br><span class="line">message[<span class="string">'To'</span>] = Header(to_addr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 抄送谁</span></span><br><span class="line">message[<span class="string">'Cc'</span>] = Header(<span class="string">','</span>.join(receivers))</span><br></pre></td></tr></table></figure>
<h2 id="email-实现群发"><a class="header-anchor" href="#email-实现群发"></a>email 实现群发</h2>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">receivers = [<span class="string">'email@baidu.com'</span>, <span class="string">'email@google.com'</span>]</span><br><span class="line">server.sendmail(config.from_addr, receivers, content.as_string())</span><br><span class="line">server.quit()</span><br></pre></td></tr></table></figure>
<h2 id="email-发送代码简单示例"><a class="header-anchor" href="#email-发送代码简单示例"></a>email 发送代码简单示例</h2>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> config</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接服务器</span></span><br><span class="line">server = smtplib.SMTP_SSL(config.host, config.port)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录服务器</span></span><br><span class="line">server.login(config.username, config.password)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写邮件内容</span></span><br><span class="line">content = <span class="string">'Hello World'</span></span><br><span class="line">content_type = <span class="string">'plain'</span></span><br><span class="line">charset = <span class="string">'utf-8'</span></span><br><span class="line">content = MIMEText(content, content_type, charset)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写邮件头部</span></span><br><span class="line">content[<span class="string">'From'</span>] = config.from_addr</span><br><span class="line">content[<span class="string">'To'</span>] = config.to_addr</span><br><span class="line">content[<span class="string">'Subject'</span>] = Header(config.subject, charset)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送邮件</span></span><br><span class="line">server.sendmail(config.from_addr, config.to_addr, content.as_string())</span><br><span class="line">server.quit()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>深入浅出计算机编码</title>
    <url>/2019/11/12/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A0%81/</url>
    <content><![CDATA[<h2 id="什么是编码"><a class="header-anchor" href="#什么是编码"></a>什么是编码</h2>
<p>编码的本质就是让只认识 0 和 1 的计算机，能够理解我们人类使用的语言符号，并且将数据转换为二进制进行存储和传输。</p>
<h2 id="为什么计算机只认识-0-和-1"><a class="header-anchor" href="#为什么计算机只认识-0-和-1"></a>为什么计算机只认识 0 和 1</h2>
<p>电子计算机主要是采用数字集成电路搭建的，数字集成电路的基本单元是逻辑门，通过控制高电平和低电平（相当于 1 和 0），从而实现逻辑运算。</p>
<h2 id="什么是二进制"><a class="header-anchor" href="#什么是二进制"></a>什么是二进制</h2>
<p>二进制是计算技术中广泛采用的一种数制。二进制数据是用 0 和 1 两个数码来表示的数。</p>
<h2 id="为什么将数据转换为二进制进行存储和传输"><a class="header-anchor" href="#为什么将数据转换为二进制进行存储和传输"></a>为什么将数据转换为二进制进行存储和传输</h2>
<p>因为数字计算机是由逻辑门组成，而逻辑电路最基础的状态就是两个「开」和「关」。所以，数字电路是以二进制逻辑代数为数学基础。二进制的基本运算规则简单，运算操作方便，这样一来有利于简化计算机内部结构，提高运算速度。而且在逻辑代数方面，二进制只有 0 和 1 两个数码，正好与逻辑代数中的「真」和「假」相吻合。</p>
<h2 id="什么是编码表"><a class="header-anchor" href="#什么是编码表"></a>什么是编码表</h2>
<p>人类语言到计算机语言转换的形式，就叫做编码表，它让人类语言和计算机语言能够一一对应起来。<br>
常用的编码表如下所示：</p>
<table>
<thead>
<tr>
<th>编码表</th>
<th>适用性</th>
<th>特点</th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII 码</td>
<td>英文大小写，字符，不支持中文</td>
<td>最早的编码，占用空间小</td>
</tr>
<tr>
<td>GB2312 码、GBK 码</td>
<td>支持了中文</td>
<td>GBK 是 GB2312 的升级</td>
</tr>
<tr>
<td>Unicode 码</td>
<td>支持国际语言</td>
<td>占用空间大，适用性强</td>
</tr>
<tr>
<td>UTF-8 码</td>
<td>支持国际语言</td>
<td>Unicode 码升级版，两者之间容易转换。ASCII 码被 UTF-8 码包含</td>
</tr>
</tbody>
</table>
<h2 id="什么是位"><a class="header-anchor" href="#什么是位"></a>什么是位</h2>
<p>位的英文名是 bit，是电子计算机中最小的数据单位，每一个位（bit）的状态只能是 0 或 1。</p>
<h2 id="位-二进制-十六进制的关系"><a class="header-anchor" href="#位-二进制-十六进制的关系"></a>位、二进制、十六进制的关系</h2>
<p>位与二进制：</p>
<ul>
<li>1 位（bit）= 1 个二进制位</li>
<li>1 字节（Byte） = 8 位（bit）</li>
<li>1 字节（Byte） = 8 个二进制位</li>
<li>8 个二进制位 = 00000000 - 11111111 = 十进制位 0 ~ 255</li>
</ul>
<p>位、二进制与十六进制</p>
<ul>
<li>1 个十六进制位 = 0 ~ F  = 0 ~ 15</li>
<li>4 个二进制位 = 0000 ~ 1111 = 0 ~ 15</li>
<li>4 个二进制位 = 1 个十六进制位</li>
<li>1 个字节（Byte）= 8 位（bit）= 8 个二进制位 = 2 个十六进制位 = 0 ~ 255</li>
</ul>
<h1 id="二进制位与十进制位相互转换"><a class="header-anchor" href="#二进制位与十进制位相互转换"></a>二进制位与十进制位相互转换</h1>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 二进制位转换成为十进制位</span><br><span class="line">00000001 = (0 x 128) + (0 x 64) + (0 x 32) + (0 x 16) + (0 x 8) + (0 x 4) + (0 x 2) + (1 x 1) = 1</span><br><span class="line">10000111 = (1 x 128) + (0 x 64) + (0 x 32) + (0 x 16) + (0 x 8) + (1 x 4) + (1 x 2) + (1 x 1) = 135</span><br><span class="line"></span><br><span class="line"># 十进制位与二进制位相互转换</span><br><span class="line">135 / 2 = 67（余数为 1）</span><br><span class="line">67  / 2 = 33（余数为 1）</span><br><span class="line">33  / 2 = 16（余数为 1）</span><br><span class="line">16  / 2 = 8 （余数为 0）</span><br><span class="line">8   / 2 = 4 （余数为 0）</span><br><span class="line">4   / 2 = 2 （余数为 0）</span><br><span class="line">2   / 2 = 1 （余数为 0）</span><br><span class="line">1   / 2 = 0 （余数为 1）</span><br><span class="line"></span><br><span class="line">10000111</span><br></pre></td></tr></table></figure>
<h2 id="十六进制与十进制互相转换"><a class="header-anchor" href="#十六进制与十进制互相转换"></a>十六进制与十进制互相转换</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 十六进制转换成十进制：2AF5</span><br><span class="line">5 * 16^0 = 5</span><br><span class="line">F * 16^1 = 240</span><br><span class="line">A * 16^2 = 2560</span><br><span class="line">2 * 16^3 = 8192</span><br><span class="line">5 * 16^0 + F * 16^1 + A * 16^2 + 2 * 16^3 = 10997</span><br></pre></td></tr></table></figure>
<h2 id="二进制与编码表"><a class="header-anchor" href="#二进制与编码表"></a>二进制与编码表</h2>
<p>世界上存在多种编码方式，同一个二进制数字可以被解释成不同的符号。因此，要想打开一个文本文件，就必须知道它的编码方式，否则用错误的编码方式解读，就会出现乱码。ASCII 编码表只规定了 128 个字符，仅仅表示中文就不够用了。伴随互联网的普及，强烈要求出现一种统一的编码方式。UTF-8 就是在互联网上使用最广的一种 Unicode 的实现方式。</p>
<h2 id="utf-8-编码规则"><a class="header-anchor" href="#utf-8-编码规则"></a>UTF-8 编码规则</h2>
<p>Unicode 是一个符号集，它只规定了符号的二进制代码，却没有规定这个二进制代码如何存储。UTF-8 是 Unicode 的实现方式之一。是一种可变的编码方式，可以使用 1 ~ 4 个字节表示一个字符。</p>
<ul>
<li>对于单字节的符号，字节的第一位设为0，后面7位为这个符号的 Unicode 码。因此对于英语字母，UTF-8 编码和 ASCII 码是相同的。</li>
<li>对于 n 字节的符号（n &gt; 1），第一个字节的前 n 位都设为 1，第 n + 1 位设为 0，后面字节的前两位一律设为 10。剩下的没有提及的二进制位，全部为这个符号的 Unicode 码。</li>
</ul>
<table>
<thead>
<tr>
<th>Unicode 符号范围</th>
<th>UTF-8 编码方式</th>
</tr>
</thead>
<tbody>
<tr>
<td>十六进制</td>
<td>二进制</td>
</tr>
<tr>
<td>0000 0000-0000 007F</td>
<td>0xxxxxxx</td>
</tr>
<tr>
<td>0000 0080-0000 07FF</td>
<td>110xxxxx 10xxxxxx</td>
</tr>
<tr>
<td>0000 0800-0000 FFFF</td>
<td>1110xxxx 10xxxxxx 10xxxxxx</td>
</tr>
<tr>
<td>0001 0000-0010 FFFF</td>
<td>11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</td>
</tr>
</tbody>
</table>
<p>以<code>卢</code>字为例，<code>卢</code>的 Unicode 是 <code>5362</code>，转换成为二进制是 <code>101 0011 0110 0010</code>，根据上表，<code>5362</code> 处于第三行范围内（<code>0000 0800-0000 FFFF</code>），然后，从<code>卢</code>的最后一个二进制位开始，依次从后向前填入格式中的 <code>x</code>，多出的位补 <code>0</code>。这样就得到了，<code>卢</code>的 UTF-8 编码是<code>11100101 10001101 10100010</code>，转换成十六进制就是 <code>E58DA2</code>。运算过程如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># UTF-8 编码出现的二进制位</span><br><span class="line">1110xxxx 10xxxxxx 10xxxxxx</span><br><span class="line">     101   001101   100010</span><br><span class="line">11100101 10001101 10100010</span><br><span class="line"></span><br><span class="line"># 二进制位转十六进制位</span><br><span class="line">11100101 10001101 10100010 =  E58DA2 </span><br><span class="line"></span><br><span class="line"># 存储单位</span><br><span class="line">11100101 10001101 10100010 = 24 个二进制位 = 3 个字节</span><br><span class="line">E58DA2 = 6 个十六进制位 = 3 个字节</span><br></pre></td></tr></table></figure>
<p>新建一个文件，然后往里写入汉字<code>卢</code>，保存之后退出查看文件大小，执行命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建文件</span><br><span class="line">touch test</span><br><span class="line"></span><br><span class="line"># 用 vscode 打开并写入汉字「卢」</span><br><span class="line">code test</span><br><span class="line"></span><br><span class="line"># 查看文件大小</span><br><span class="line">ls -lht</span><br><span class="line"></span><br><span class="line"># 显示文件 3B，三个字节</span><br><span class="line">-rw-r--r--   1 sebastian  staff     3B 12  6 14:14 test</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>学习 PHP 之入门概述</title>
    <url>/2019/11/03/%E5%AD%A6%E4%B9%A0-PHP-%E4%B9%8B%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0%EF%BC%88Introduction%EF%BC%89/</url>
    <content><![CDATA[<p><a name="05828867"></a></p>
<h2 id="version-iteration-版本迭代"><a class="header-anchor" href="#version-iteration-版本迭代"></a>Version Iteration（版本迭代）</h2>
<p>PHP 是一种被广泛应用的开放源代码的多用途脚本语言，它可嵌入到 HTML 中，尤其适合 Web 开发。当前最新稳定版本是 PHP 7.X，相比 PHP 5.X 版本增加了不少新特性。PHP 引擎也大部分被重写，PHP 的运行速度也提到了极大的提升。PHP 5.X 现已停止维护更新，建议使用 PHP 7.X 作为开发和生产的环境。<br>
<br><br>
各个版本新特性：</p>
<ul>
<li><a href="http://php.net/manual/zh/migration72.new-features.php" target="_blank" rel="noopener">7.2</a></li>
<li><a href="http://php.net/manual/zh/migration71.new-features.php" target="_blank" rel="noopener">7.1</a></li>
<li><a href="http://php.net/manual/zh/migration70.new-features.php" target="_blank" rel="noopener">7.0</a></li>
</ul>
<p><a name="3b6a9b27"></a></p>
<h2 id="comments-split-注释与代码分离"><a class="header-anchor" href="#comments-split-注释与代码分离"></a>Comments &amp; Split（注释与代码分离）</h2>
<p>注释的代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注释方式一</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 注释方式二 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注释方式三</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string name</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<p>代码分离的代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>(<span class="string">"../path/file.php"</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">"../path/file.php"</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../path/file.php"</span>);</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"../path/file.php"</span>);</span><br></pre></td></tr></table></figure>
<p><code>require()</code>、<code>require_once()</code>、<code>include()</code>、<code>include_once()</code> 的异同：</p>
<ul>
<li>运行时
<ul>
<li><code>require()</code> 和 <code>require_once()</code>、<code>include()</code> 和 <code>include_once()</code> 的区别是带 <code>once</code> 后缀的会判断在这个文件之前是否已经加载过了文件，避免重复加载。</li>
<li><code>require()</code> 和 <code>require_once()</code> 加载文件时，如果出错，将会产生一个 <code>E_COMPILE_ERROR</code> 级别的错误，脚本将会终止运行。</li>
<li><code>include()</code> 和 <code>include_once()</code> 加载文件时，如果出错，只会产生一个 <code>E_WARNING</code> 级别的警告，脚本将会继续运行。</li>
</ul>
</li>
<li>性能上
<ul>
<li><code>include()</code>、<code>include_once()</code> 执行时，文件每次都要进行读取和评估。</li>
<li><code>require()</code>、<code>require_once()</code> 执行时，文件只处理一次。</li>
<li><code>include_once()</code>、<code>require_once()</code> 是在 <code>include()</code> 和 <code>require()</code> 的基础上进步一步封装。</li>
</ul>
</li>
<li>返回值
<ul>
<li>如果加载文件内使用 <code>return</code> 返回，那么 <code>require()</code>、<code>require_once()</code> 加载文件成功会有该文件 <code>return</code> 值的返回，失败会产生致命错误。</li>
<li>如果加载文件内使用 <code>return</code> 返回，那么 <code>include()</code>、<code>include_once()</code> 加载文件成功会有该文件 <code>return</code> 值的返回，失败会抛出一个警告并返回 <code>boolean(false)</code> 。</li>
<li>如果加载文件内没有使用 <code>return</code> 返回，那么 <code>require()</code>、<code>require_once()</code>、<code>include()</code>、<code>include_once()</code> 加载文件成功会返回 <code>int(1)</code> ，失败分别会产生致命错误和抛出警告并返回 <code>boolean(false)</code>。</li>
</ul>
</li>
</ul>
<br>
代码分离相关函数如下：
<p>SPL 是 Standard PHP Library (标准 PHP 库)的缩写。它是 PHP5 引入的一个扩展库，其主要功能包括 autoload 机制的实现及包括各种 Iterator 接口或类。SPL Autoload 具体有几个函数：</p>
<ul>
<li>spl_autoload：__autoload 默认实现</li>
<li>spl_autoload_call：尝试所有已注册的函数来加载类</li>
<li>spl_autoload_register：注册 __autoload() 函数</li>
<li>spl_autoload_unregister：注销已注册的函数</li>
<li>spl_autoload_functions：返回所有已注册的函数</li>
<li>spl_autoload_extensions：注册并返回 spl_autoload 函数使用的默认文件扩展名</li>
</ul>
<p>PHP 代码分离相关函数就上述这些，但是实现起来已经是非常灵活了的。既可以简单地实现自动加载，也可以注册多个自定义的自动加载函数去满足不同场景下的代码分离需求。但是过于灵活也不好，会导致不同的框架有不同的方式实现代码分离和自动加载。代码分离和自动加载关键就是类名和文件的映射，为了统一代码分离和自动加载的方式，PHP 配合命名空间推出了 PSR-0 和 <a href="https://learnku.com/laravel/t/2081/psr-specification-psr-4-automatic-loading-specification" target="_blank" rel="noopener">PSR-4 自动加载规范</a>，由于 PSR-4 比 PSR-0 能够带来更加简洁的文件结构和更加灵活，目前 PSR-0 已经废弃。</p>
<p><a name="679b0402"></a></p>
<h2 id="builder-dependence-manager-构建与依赖管理"><a class="header-anchor" href="#builder-dependence-manager-构建与依赖管理"></a>Builder &amp; Dependence Manager（构建与依赖管理）</h2>
<p><a name="PEAR"></a></p>
<h3 id="pear"><a class="header-anchor" href="#pear"></a>PEAR</h3>
<p>PEAR 是一个常用的依赖包管理器。PEAR 需要扩展包有专属的结构, 开发者在开发扩展包的时候要提前考虑为 PEAR 定制, 否则后面将无法使用 PEAR。</p>
<p>PEAR 安装扩展包的时候, 是全局安装的, 意味着一旦安装了某个扩展包, 同一台服务器上的所有项目都能用上, 当然, 好处是当多个项目共同使用同一个扩展包的同一个版本, 坏处是如果你需要使用不同版本的话, 就会产生冲突。</p>
<ul>
<li><a href="https://pear.php.net/" target="_blank" rel="noopener">PHP 官方 PEAR</a></li>
<li><a href="http://laravel-china.github.io/php-the-right-way/#pear" target="_blank" rel="noopener">PHP 之道 PEAR</a></li>
</ul>
<p><a name="ceccc17c"></a></p>
<h3 id="composer-与-packagist"><a class="header-anchor" href="#composer-与-packagist"></a>Composer 与 Packagist</h3>
<p>Composer 是另一个常用的依赖包管理器。在 <code>composer.json</code>  文件中列出你项目所需的依赖包，加上一点简单的命令，Composer 将会自动帮你下载并设置你的项目依赖。Composer 有点类似于 Node.js 里的 NPM，或者 Ruby 世界里的 Bundler。</p>
<p>Packagist 是一个 Composer 官方的依赖包仓库，可以在 Packagist 上寻找想要的 PHP 依赖包。</p>
<ul>
<li><a href="https://getcomposer.org/" target="_blank" rel="noopener">Composer 官方网站</a></li>
<li><a href="http://laravel-china.github.io/php-the-right-way/#composer_and_packagist" target="_blank" rel="noopener">PHP 之道 Composer</a></li>
<li><a href="http://httpshttps://packagist.org/" target="_blank" rel="noopener">Packagist 官方网站    </a></li>
</ul>
<p><a name="7cfda144"></a></p>
<h2 id="composer-基本用法"><a class="header-anchor" href="#composer-基本用法"></a>Composer 基本用法</h2>
<ul>
<li>扩展包名称
<ul>
<li>扩展包名称由供应商和项目成名组成，例如：
<ul>
<li>monolog/monolog</li>
<li>laravel/laravel</li>
</ul>
</li>
</ul>
</li>
<li>扩展包版本
<ul>
<li>确切的版本号</li>
<li>范围
<ul>
<li>比较操作符 <code>&gt;、&gt;=、&lt;、&lt;=、!=</code>
<ul>
<li>
<blockquote>
<p>1.0</p>
</blockquote>
</li>
<li>
<blockquote>
<p>=1.0 &lt;=2.0</p>
</blockquote>
</li>
</ul>
</li>
<li>连字符 -
<ul>
<li>1.0 - 2.0</li>
</ul>
</li>
</ul>
</li>
<li>通配符 <code>*</code>
<ul>
<li>1.0.*</li>
</ul>
</li>
<li>赋值运算符
<ul>
<li>波浪号 ~
<ul>
<li>~1.2 相当于 &gt;=1.2 &lt;2.0.0</li>
<li>~1.2.3 相当于 &gt;=1.2.3 &lt;1.3.0</li>
</ul>
</li>
<li>折音号 ^
<ul>
<li>^1.2.3 相当于 &gt;=1.2.3 &lt;2.0.0</li>
<li>^0.3.0 相当于 &gt;=0.3.0 &lt;0.4.0</li>
</ul>
</li>
</ul>
</li>
<li>版本稳定性
<ul>
<li>如果没有显式的指定版本的稳定性，Composer 会根据使用的操作符，默认在内部指定为 -dev 或者 -stable。</li>
<li>可用的稳定性标识
<ul>
<li>dev</li>
<li>alpha</li>
<li>beta</li>
<li>RC</li>
<li>stable</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>扩展包定义
<ul>
<li>只要有一个 composer.json 文件在目录中，那么整个目录就是一个包。当添加一个扩展包被 require 到项目时，就是创建了一个依赖于其他扩展包、没有名字的包。</li>
<li>Composer 将那些已经安装在系统上，但并不是由 Composer 安装的包视为一个虚拟的平台软件包。这包括 PHP 本身、PHP 扩展和一些系统库。</li>
</ul>
</li>
<li>扩展包常见命令
<ul>
<li>composer create-project - 创建项目
<ul>
<li><code>composer create-project --prefer-dist vendor/package demo</code></li>
</ul>
</li>
<li>composer install - 安装项目所有扩展包</li>
<li>composer require - 安装一个新的扩展包
<ul>
<li><code>composer require vendor/package</code></li>
<li><code>composer require vendor/package:2.*</code></li>
<li><code>composer require vendor/package:dev-master -vvv</code></li>
<li><code>composer require vendeor/package:^2.0.0-alpha2</code></li>
</ul>
</li>
<li>composer update - 更新扩展包
<ul>
<li><code>composer update</code></li>
<li><code>composer update vendor/package</code></li>
<li><code>composer update vendor/*</code> - 支持通配符</li>
<li>需要注意的是，能升级的版本收到版本约束的影响，扩展包不会升级到超出版本约束的范围。</li>
</ul>
</li>
<li>composer remove - 移除扩展包
<ul>
<li><code>composer remove vendor/package</code></li>
</ul>
</li>
<li>composer dump - 打印自动加载索引</li>
<li>composer search - 搜索扩展包信息
<ul>
<li><code>composer search monolog</code></li>
</ul>
</li>
<li>composer show - 展示扩展包信息
<ul>
<li><code>composer serach monolog</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a name="388c5d85"></a></p>
<h2 id="composer-文件"><a class="header-anchor" href="#composer-文件"></a>Composer 文件</h2>
<p><a name="2e4006c4"></a></p>
<h3 id="composer-json-文件"><a class="header-anchor" href="#composer-json-文件"></a>composer.json 文件</h3>
<p>根据实际项目的 <code>composer.json</code> 文件解释其中字段，下面以 Laravel 项目的 <code>composer.json</code> 文件为例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"laravel/laravel"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"The Laravel Framework."</span>,</span><br><span class="line">    <span class="attr">"keywords"</span>: [<span class="string">"framework"</span>, <span class="string">"laravel"</span>],</span><br><span class="line">    <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"project"</span>,</span><br><span class="line">    <span class="attr">"require"</span>: &#123;</span><br><span class="line">        <span class="attr">"php"</span>: <span class="string">"^7.1.3"</span>,</span><br><span class="line">        <span class="attr">"fideloper/proxy"</span>: <span class="string">"^4.0"</span>,</span><br><span class="line">        <span class="attr">"guzzlehttp/guzzle"</span>: <span class="string">"~6.0"</span>,</span><br><span class="line">        <span class="attr">"laravel/framework"</span>: <span class="string">"5.7.*"</span>,</span><br><span class="line">        <span class="attr">"laravel/horizon"</span>: <span class="string">"^2.0"</span>,</span><br><span class="line">        <span class="attr">"laravel/tinker"</span>: <span class="string">"^1.0"</span>,</span><br><span class="line">        <span class="attr">"predis/predis"</span>: <span class="string">"^1.1"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"require-dev"</span>: &#123;</span><br><span class="line">        <span class="attr">"beyondcode/laravel-dump-server"</span>: <span class="string">"^1.0"</span>,</span><br><span class="line">        <span class="attr">"filp/whoops"</span>: <span class="string">"^2.0"</span>,</span><br><span class="line">        <span class="attr">"fzaninotto/faker"</span>: <span class="string">"^1.4"</span>,</span><br><span class="line">        <span class="attr">"mockery/mockery"</span>: <span class="string">"^1.0"</span>,</span><br><span class="line">        <span class="attr">"nunomaduro/collision"</span>: <span class="string">"^2.0"</span>,</span><br><span class="line">        <span class="attr">"orangehill/iseed"</span>: <span class="string">"^2.6"</span>,</span><br><span class="line">        <span class="attr">"phpunit/phpunit"</span>: <span class="string">"^7.0"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"autoload"</span>: &#123;</span><br><span class="line">        <span class="attr">"classmap"</span>: [</span><br><span class="line">            <span class="string">"database/seeds"</span>,</span><br><span class="line">            <span class="string">"database/factories"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"psr-4"</span>: &#123;</span><br><span class="line">            <span class="attr">"App\\"</span>: <span class="string">"app/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"autoload-dev"</span>: &#123;</span><br><span class="line">        <span class="attr">"psr-4"</span>: &#123;</span><br><span class="line">            <span class="attr">"Tests\\"</span>: <span class="string">"tests/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"extra"</span>: &#123;</span><br><span class="line">        <span class="attr">"laravel"</span>: &#123;</span><br><span class="line">            <span class="attr">"dont-discover"</span>: [</span><br><span class="line">              <span class="string">"beyondcode/laravel-dump-server"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"post-root-package-install"</span>: [</span><br><span class="line">            <span class="string">"@php -r \"file_exists('.env') || copy('.env.example', '.env');\""</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"post-create-project-cmd"</span>: [</span><br><span class="line">            <span class="string">"@php artisan key:generate"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"post-autoload-dump"</span>: [</span><br><span class="line">            <span class="string">"Illuminate\\Foundation\\ComposerScripts::postAutoloadDump"</span>,</span><br><span class="line">            <span class="string">"@php artisan package:discover"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"config"</span>: &#123;</span><br><span class="line">        <span class="attr">"preferred-install"</span>: <span class="string">"dist"</span>,</span><br><span class="line">        <span class="attr">"sort-packages"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"optimize-autoloader"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"minimum-stability"</span>: <span class="string">"dev"</span>,</span><br><span class="line">    <span class="attr">"prefer-stable"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>name - 包名</li>
<li>description - 简介</li>
<li>keywords - 关键词</li>
<li>license - 许可协议</li>
<li>type - 安装类型
<ul>
<li>library</li>
<li>project</li>
<li>metapackage</li>
<li>composer-plugin</li>
</ul>
</li>
<li>require - 必须的软件包列表，除非这些依赖被满足，否则不会完成安装</li>
<li>require-dev - 开发或测试等目的，额外列出的依赖</li>
<li>autoload - 用于生产或部署的 PHP 自动加载映射
<ul>
<li>psr-4</li>
<li>psr-0</li>
<li>classmap</li>
<li>files</li>
</ul>
</li>
<li>autoload-dev - 用于开发或测试的 PHP 自动加载映射
<ul>
<li>psr-4</li>
<li>psr-0</li>
<li>classmap</li>
<li>files</li>
</ul>
</li>
<li>extra - 供 scripts 使用的、任意的额外数据</li>
<li>scripts - Composer 可以在安装过程中的各个阶段挂接脚本
<ul>
<li>post-root-package-install - 在 create-project 命令期间，根包安装完成后触发</li>
<li>post-create-project-cmd - 在 create-project 命令执行后触发</li>
<li>post-autoload-dump - 在自动加载器被转储后触发，<code>install</code>、<code>update</code>、<code>dump</code> 命令后触发</li>
</ul>
</li>
</ul>
<p><a href="https://docs.phpcomposer.com/articles/scripts.html" target="_blank" rel="noopener">点击查看更多 </a><a href="https://docs.phpcomposer.com/articles/scripts.html" target="_blank" rel="noopener"><code>composer.json</code></a><a href="https://docs.phpcomposer.com/articles/scripts.html" target="_blank" rel="noopener"> 文件字段说明。</a></p>
<p><a name="3bff2fa7"></a></p>
<h3 id="composer-lock-文件"><a class="header-anchor" href="#composer-lock-文件"></a>composer.lock 文件</h3>
<p>在项目中安装扩展包后，Composer 会把安装时确切的版本号列表写入 <code>composer.lock</code> 文件。</p>
<blockquote>
<p>请提交项目中的 composer.lock、composer.json 文件到版本库中</p>
</blockquote>
<p>这是非常重要，因为 <code>install</code> 命令将会检查锁文件是否存在，如果存在，它将忽略 composer.json 文件中的定义，直接下载指定的版本。这意味着，任何人简历项目都将下载与指定版本完全相同的依赖。持续集成服务器、生产环境、团队中的其他开发人员、每件事、每个人都使用相同的依赖，从而减轻潜在的错误对部署造成影响。</p>
<p><a name="15b0c584"></a></p>
<h2 id="composer-自动加载机制"><a class="header-anchor" href="#composer-自动加载机制"></a>Composer 自动加载机制</h2>
<p>Composer 将解决如下问题：</p>
<ul>
<li>有一个项目依赖于若干个扩展包</li>
<li>其中一些库依赖于若干个扩展包</li>
<li>声明项目所依赖的东西（文件，扩展包）</li>
<li>找出项目所依赖的扩展包，并安装合适的版本</li>
</ul>
<p>Composer 准备了一个自动加载文件，它可以加载 Composer 下载的所有的类文件。使用它，只需要将下面这行代码添加到项目的引导文件中即可：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'vendor/autoload.php'</span>;</span><br></pre></td></tr></table></figure>
<p>以 Laravel 框架为例，在查看文件 <code>public/index.php</code> 时，可以看到代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Laravel - A PHP Framework For Web Artisans</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span>  Laravel</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>   Taylor Otwell &lt;taylor<span class="doctag">@laravel</span>.com&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">define(<span class="string">'LARAVEL_START'</span>, microtime(<span class="keyword">true</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Register The Auto Loader</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| Composer provides a convenient, automatically generated class loader for</span></span><br><span class="line"><span class="comment">| our application. We just need to utilize it! We'll simply require it</span></span><br><span class="line"><span class="comment">| into the script here so that we don't have to worry about manual</span></span><br><span class="line"><span class="comment">| loading any of our classes later on. It feels great to relax.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span>.<span class="string">'/../vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>代码 <code>require __DIR__.'/../vendor/autoload.php';</code> 注册 Composer 自动加载机制，查看文件 <code>autoload.php</code> 代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// autoload.php @generated by Composer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">'/composer/autoload_real.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ComposerAutoloaderInit814a92544ccdda06795b3f7f5a08b060::getLoader();</span><br></pre></td></tr></table></figure>
<p><code>autoload.php</code> 文件是一个入口文件，关于 Composer 自动加载机制，需要查看 <code>autoload_real.php</code> 文件，打开文件代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// autoload_real.php @generated by Composer</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ComposerAutoloaderInit814a92544ccdda06795b3f7f5a08b060</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $loader;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">loadClassLoader</span><span class="params">($class)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'Composer\Autoload\ClassLoader'</span> === $class) &#123;</span><br><span class="line">            <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/ClassLoader.php'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getLoader</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> !== <span class="keyword">self</span>::$loader) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$loader;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        spl_autoload_register(<span class="keyword">array</span>(<span class="string">'ComposerAutoloaderInit814a92544ccdda06795b3f7f5a08b060'</span>, <span class="string">'loadClassLoader'</span>), <span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">self</span>::$loader = $loader = <span class="keyword">new</span> \Composer\Autoload\ClassLoader();</span><br><span class="line">        spl_autoload_unregister(<span class="keyword">array</span>(<span class="string">'ComposerAutoloaderInit814a92544ccdda06795b3f7f5a08b060'</span>, <span class="string">'loadClassLoader'</span>));</span><br><span class="line"></span><br><span class="line">        $useStaticLoader = PHP_VERSION_ID &gt;= <span class="number">50600</span> &amp;&amp; !defined(<span class="string">'HHVM_VERSION'</span>) &amp;&amp; (!function_exists(<span class="string">'zend_loader_file_encoded'</span>) || !zend_loader_file_encoded());</span><br><span class="line">        <span class="keyword">if</span> ($useStaticLoader) &#123;</span><br><span class="line">            <span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_static.php'</span>;</span><br><span class="line"></span><br><span class="line">            call_user_func(\Composer\Autoload\ComposerStaticInit814a92544ccdda06795b3f7f5a08b060::getInitializer($loader));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $map = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_namespaces.php'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($map <span class="keyword">as</span> $namespace =&gt; $path) &#123;</span><br><span class="line">                $loader-&gt;set($namespace, $path);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $map = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_psr4.php'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($map <span class="keyword">as</span> $namespace =&gt; $path) &#123;</span><br><span class="line">                $loader-&gt;setPsr4($namespace, $path);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $classMap = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_classmap.php'</span>;</span><br><span class="line">            <span class="keyword">if</span> ($classMap) &#123;</span><br><span class="line">                $loader-&gt;addClassMap($classMap);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $loader-&gt;register(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($useStaticLoader) &#123;</span><br><span class="line">            $includeFiles = Composer\Autoload\ComposerStaticInit814a92544ccdda06795b3f7f5a08b060::$files;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $includeFiles = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_files.php'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span> ($includeFiles <span class="keyword">as</span> $fileIdentifier =&gt; $file) &#123;</span><br><span class="line">            composerRequire814a92544ccdda06795b3f7f5a08b060($fileIdentifier, $file);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $loader;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">composerRequire814a92544ccdda06795b3f7f5a08b060</span><span class="params">($fileIdentifier, $file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($GLOBALS[<span class="string">'__composer_autoload_files'</span>][$fileIdentifier])) &#123;</span><br><span class="line">        <span class="keyword">require</span> $file;</span><br><span class="line"></span><br><span class="line">        $GLOBALS[<span class="string">'__composer_autoload_files'</span>][$fileIdentifier] = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述代码中的 <code>$loader</code> 是 composer/ClassLoader.php 的 ClassLoader 类的实例。ClassLoader 类和 spl_autoload_register、spl_autoload_unregister 都是实现自动加载机制的。我们先重点关注代码中的几处 required 语句：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$map = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_namespaces.php'</span>;</span><br><span class="line">$map = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_psr4.php'</span>;</span><br><span class="line">$classMap = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_classmap.php'</span>;</span><br><span class="line">$includeFiles = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_files.php'</span>;</span><br></pre></td></tr></table></figure>
<p>每个 require 语句都加载了 vendor/composer 下的一个 PHP 文件，它们分别对应不同的加载方式，在 <code>composer.json</code> 文件中它们分别被命名为：</p>
<ul>
<li>psr-4 - autoload_psr4.php
<ul>
<li><a href="https://learnku.com/laravel/t/2081/psr-specification-psr-4-automatic-loading-specification" target="_blank" rel="noopener">自动加载规范</a></li>
</ul>
</li>
<li>psr-0 - autolod_namespaces.php
<ul>
<li>自动加载规范（已废弃）</li>
</ul>
</li>
<li>classmap - autoload_classmap.php
<ul>
<li>通过配置指定的目录或文件，在 Composer 安装或更新时生成新的映射</li>
</ul>
</li>
<li>files - autoload_files.php
<ul>
<li>手动指定直接加载的文件</li>
</ul>
</li>
</ul>
<p>以 Laravel 的 <code>composer.json</code> 文件为例：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">  "autoload": &#123;</span><br><span class="line">    "psr-4": &#123;</span><br><span class="line">      "App\\": "app/"</span><br><span class="line">    &#125;,</span><br><span class="line">    "classmap": [</span><br><span class="line">      "database/seeds",</span><br><span class="line">      <span class="string">"database/factories"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接着再重点分析 <code>autoload_real.php</code> 代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// autoload_real.php @generated by Composer</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ComposerAutoloaderInit87df794bebfc20f9e9133106778dd77b</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $loader;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">loadClassLoader</span><span class="params">($class)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'Composer\Autoload\ClassLoader'</span> === $class) &#123;</span><br><span class="line">            <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/ClassLoader.php'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getLoader</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      	<span class="comment">// 单例模式，判断 loader 是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> !== <span class="keyword">self</span>::$loader) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$loader;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      	<span class="comment">// 使用 spl_autoload_register 注册自动加载函数</span></span><br><span class="line">        spl_autoload_register(<span class="keyword">array</span>(<span class="string">'ComposerAutoloaderInit87df794bebfc20f9e9133106778dd77b'</span>, <span class="string">'loadClassLoader'</span>), <span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">      </span><br><span class="line">      	<span class="comment">// 执行 new \Composer\Autoload\ClassLoader(); 时，会调用当前类的 loadClassLoader 类方法，返回 ClassLoader 类的实例</span></span><br><span class="line">        <span class="keyword">self</span>::$loader = $loader = <span class="keyword">new</span> \Composer\Autoload\ClassLoader();</span><br><span class="line">      </span><br><span class="line">      	<span class="comment">// 注销刚才注册的自动加载函数</span></span><br><span class="line">        spl_autoload_unregister(<span class="keyword">array</span>(<span class="string">'ComposerAutoloaderInit87df794bebfc20f9e9133106778dd77b'</span>, <span class="string">'loadClassLoader'</span>));</span><br><span class="line"></span><br><span class="line">      	<span class="comment">// 当 PHP 版本大于 5.6、没有使用 HHVM_VERSION、没有使用 Zend Guard 编码，则执行下面代码</span></span><br><span class="line">        $useStaticLoader = PHP_VERSION_ID &gt;= <span class="number">50600</span> &amp;&amp; !defined(<span class="string">'HHVM_VERSION'</span>) &amp;&amp; (!function_exists(<span class="string">'zend_loader_file_encoded'</span>) || !zend_loader_file_encoded());</span><br><span class="line">        <span class="keyword">if</span> ($useStaticLoader) &#123;</span><br><span class="line">            <span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_static.php'</span>;</span><br><span class="line">          </span><br><span class="line">						<span class="comment">// 使用静态映射的方式去获取所有 PSR-4、PSR-0、ClassMap、files 等加载方式的类名和文件</span></span><br><span class="line">            call_user_func(\Composer\Autoload\ComposerStaticInit87df794bebfc20f9e9133106778dd77b::getInitializer($loader));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 获取 PSR-0 加载方式的类和路径</span></span><br><span class="line">            $map = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_namespaces.php'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($map <span class="keyword">as</span> $namespace =&gt; $path) &#123;</span><br><span class="line">                $loader-&gt;set($namespace, $path);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">          	<span class="comment">// 获取 PSR-4 加载方式的类和路径</span></span><br><span class="line">            $map = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_psr4.php'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($map <span class="keyword">as</span> $namespace =&gt; $path) &#123;</span><br><span class="line">                $loader-&gt;setPsr4($namespace, $path);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">	          <span class="comment">// 获取 classmap 加载方式的类和路径</span></span><br><span class="line">            $classMap = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_classmap.php'</span>;</span><br><span class="line">            <span class="keyword">if</span> ($classMap) &#123;</span><br><span class="line">                $loader-&gt;addClassMap($classMap);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">				</span><br><span class="line">        <span class="comment">// ClassLoader 注册自动加载函数</span></span><br><span class="line">        $loader-&gt;register(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 直接 require 所有 files 加载方式的文件</span></span><br><span class="line">        <span class="keyword">if</span> ($useStaticLoader) &#123;</span><br><span class="line">            $includeFiles = Composer\Autoload\ComposerStaticInit87df794bebfc20f9e9133106778dd77b::$files;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $includeFiles = <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/autoload_files.php'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span> ($includeFiles <span class="keyword">as</span> $fileIdentifier =&gt; $file) &#123;</span><br><span class="line">            composerRequire87df794bebfc20f9e9133106778dd77b($fileIdentifier, $file);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $loader;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">composerRequire87df794bebfc20f9e9133106778dd77b</span><span class="params">($fileIdentifier, $file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($GLOBALS[<span class="string">'__composer_autoload_files'</span>][$fileIdentifier])) &#123;</span><br><span class="line">        <span class="keyword">require</span> $file;</span><br><span class="line"></span><br><span class="line">        $GLOBALS[<span class="string">'__composer_autoload_files'</span>][$fileIdentifier] = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>至此，Composer 自动加载机制已经基本了解，如果想知道 $loader 是如何实现加载对应文件的，可以了解 ClassLoader 类的 loadClass 类方法的实现，在此就不在赘述了。</p>
]]></content>
      <tags>
        <tag>PHP Composer</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Elasticsearch + Kibana + Logstash 搭建简单日志分析平台</title>
    <url>/2019/10/29/%E4%BD%BF%E7%94%A8-Elasticsearch-Kibana-Logstash-%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<h2 id="elk-架构图"><a class="header-anchor" href="#elk-架构图"></a>ELK 架构图</h2>
<h2 id="elk-流程图"><a class="header-anchor" href="#elk-流程图"></a>ELK 流程图</h2>
<h2 id="安装-elasticsearch"><a class="header-anchor" href="#安装-elasticsearch"></a>安装 Elasticsearch</h2>
<p>导入公钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</span><br></pre></td></tr></table></figure>
<p>安装 Elasticsearch</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https</span><br><span class="line"></span><br><span class="line">echo &quot;deb http://mirrors.tencentyun.com/elasticstack/apt/7.x/ stable main&quot; | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install elasticsearch</span><br></pre></td></tr></table></figure>
<p>配置 Elasticsearch 开机启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo /bin/systemctl daemon-reload</span><br><span class="line">sudo /bin/systemctl enable elasticsearch.service</span><br></pre></td></tr></table></figure>
<p>操作 Elasticsearch 常用命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl start elasticsearch.service</span><br><span class="line">sudo systemctl stop elasticsearch.service</span><br><span class="line">sudo systemctl restart elasticsearch.service</span><br></pre></td></tr></table></figure>
<h2 id="安装-kibana"><a class="header-anchor" href="#安装-kibana"></a>安装 Kibana</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install kibana</span><br></pre></td></tr></table></figure>
<h2 id="安装-logstash"><a class="header-anchor" href="#安装-logstash"></a>安装 Logstash</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="安装-redis"><a class="header-anchor" href="#安装-redis"></a>安装 Redis</h2>
]]></content>
      <tags>
        <tag>ELK Elasticsearch Kibana Logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>学习 PHP 之前言</title>
    <url>/2019/10/28/%E5%AD%A6%E4%B9%A0-PHP-%E4%B9%8B%E5%BA%8F/</url>
    <content><![CDATA[<p>  时光荏苒，现在已是 2019 年了，离我大学毕业已经足有五周年。回望这五年的编程职业生涯，由于自身并非科班出身，加上工作始于三线城市，所以这一路走来也是磕磕碰碰，碰壁不少。其中曾跟风过方向转型，后因项目破产而转型失败，也曾跌入盲目追求高并发、高性能的知识陷阱，殊不知非立足于项目的知识经验，皆是空中阁楼，转眼间就忘得一干二净。也存在过没有自己主见，不断被媒体灌输知识焦虑而不断购买课程的一段时间。回顾这些经历，虽然让我时常感觉到懊悔，但毕竟也是吃一堑，长一智，这会让我不断调整方向，最终选择正确的学习成长道路。</p>
<br>
<p>  这个系列的文章源于我看到一张编程学习体系图片，这张图片引起了我的注意与反思。我突然之间发现，我未曾系统地去学习过一门编程语言。我的专业是电子商务，编程完全是自学出来，大学毕业到目前为止，所有的知识来源皆是项目驱动、工资驱动和道听途说。例如项目需要这门技术，我便学习这门技术；招聘要求必须掌握哪门技术，我便学习哪门技术；社区大牛说学什么框架，我便跟风学习什么框架。对于编程到底是什么，编程是否存在通用的学习模型，编程的体系如何划分，我未曾深入思考。我知道有数据结构、算法、面向对象、网络编程、编码规范等等，等等；但是它们属于编程系统的哪一块，它们之间的关系是什么，如何将它们这些独立的知识节点关联起来，每门编程语言细分下去又有何不同，有何相同，它们之间特性是什么。这些问题，我都没有答案。</p>
<br>
<p><img src="https://sebastian-1256190695.cos.ap-guangzhou.myqcloud.com/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%9A%E7%94%A8%E5%AD%A6%E4%B9%A0%E4%BD%93%E7%B3%BB.jpg" alt="编程语言通用学习框架"></p>
<p>  为了得到答案，我决定根据图片内容去重新学习一遍 PHP，然后从 PHP 扩展到其他编程语言，最终达到不再局限于某门编程语言的能力界限。</p>
]]></content>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World!</title>
    <url>/2019/10/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="quick-start"><a class="header-anchor" href="#quick-start"></a>Quick Start</h2>
<h3 id="create-a-new-post"><a class="header-anchor" href="#create-a-new-post"></a>Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="run-server"><a class="header-anchor" href="#run-server"></a>Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="generate-static-files"><a class="header-anchor" href="#generate-static-files"></a>Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="header-anchor" href="#deploy-to-remote-sites"></a>Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>学习 Javascript 之类型</title>
    <url>/2017/03/23/%E5%AD%A6%E4%B9%A0-Javascript-%E4%B9%8B%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>学习 Javascript 之变量</title>
    <url>/2017/03/23/%E5%AD%A6%E4%B9%A0-Javascript-%E4%B9%8B%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h2 id="变量的声明"><a class="header-anchor" href="#变量的声明"></a>变量的声明</h2>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 声明变量 */</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">3.14</span>;</span><br><span class="line"><span class="keyword">var</span> y;</span><br><span class="line"><span class="keyword">var</span> z = x + y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> foo = <span class="string">"Hello"</span> + <span class="string">"World"</span>;</span><br><span class="line"><span class="keyword">var</span> bar = <span class="number">2</span> &gt; <span class="number">1</span> ? <span class="number">2</span> != <span class="number">1</span> : <span class="number">1</span> &gt; <span class="number">2</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 声明常量 */</span></span><br><span class="line"><span class="keyword">const</span> PI = <span class="number">3.1415</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ES6 - 声明变量 */</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">let</span> [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br></pre></td></tr></table></figure>
<h2 id="变量的声明作用域"><a class="header-anchor" href="#变量的声明作用域"></a>变量的声明作用域</h2>
<ul>
<li>var
<ul>
<li>在全局作用域内有效</li>
</ul>
</li>
<li>let
<ul>
<li>只在声明所在的块级作用域内有效</li>
</ul>
</li>
<li>const
<ul>
<li>只在声明所在的块级作用域内有效</li>
</ul>
</li>
</ul>
<h2 id="变量的声明陷阱"><a class="header-anchor" href="#变量的声明陷阱"></a>变量的声明陷阱</h2>
<ul>
<li>变量提升
<ul>
<li>变量无法在 let 命令声明之前使用，否则报错</li>
<li>变量可以在 var 命令声明之前使用，值为 undefined</li>
</ul>
</li>
<li>暂时性死区
<ul>
<li>在代码块内，使用 let 命令声明变量之前，该变量都是不可用的</li>
</ul>
</li>
<li>重复声明
<ul>
<li>var 命令允许在相同作用域内，重复声明一个变量</li>
<li>let 命令不允许在相同作用域内，重复声明一个变量</li>
</ul>
</li>
</ul>
<h2 id="解构赋值"><a class="header-anchor" href="#解构赋值"></a>解构赋值</h2>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 数组的解构赋值 */</span></span><br><span class="line"><span class="keyword">let</span> [foo, [[bar], baz]] = [<span class="number">1</span>, [[<span class="number">2</span>], <span class="number">3</span>]];</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 对象的解构赋值 */</span></span><br><span class="line"><span class="keyword">let</span> &#123; foo, bar &#125; = &#123; <span class="attr">foo</span>: <span class="string">"aaa"</span>, <span class="attr">bar</span>: <span class="string">"bbb"</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 字符串的解构赋值 */</span></span><br><span class="line"><span class="keyword">const</span> [a, b, c, d, e] = <span class="string">'hello'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数的解构赋值 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">[x, y]</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line">add([<span class="number">1</span>, <span class="number">2</span>]); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>
<p>变量的解构赋值用途如下：</p>
<ul>
<li>交换变量的值</li>
<li>从函数返回多个值</li>
<li>函数参数的定义</li>
<li>提取 JSON 数据</li>
<li>函数参数的默认值</li>
<li>遍历 Map 结构</li>
<li>输入模块的指定方法</li>
</ul>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Head First Design Patterns</title>
    <url>/2017/03/20/Head-First-Design-Patterns/</url>
    <content><![CDATA[<p>如何定义模式</p>
<p>模式是某种情景下，针对某问题的某种解决方案。</p>
<ul>
<li>情景
<ul>
<li>应用某个模式的情况，应该是会不断出现的情况</li>
</ul>
</li>
<li>问题
<ul>
<li>想在某个情景下达到的目标，但也可以是某情景下的约束</li>
</ul>
</li>
<li>解决方案
<ul>
<li>一个通用的设计，用来解决约束、达到目标</li>
</ul>
</li>
</ul>
<p>帮助记忆上述概念的方法</p>
<p>如果你发现自己处于某个情境下，面对着所欲达到的目标被一群约束影响着的问题，然而，你能够应用某个设计，克服这些约束并达到该目标，将你领向某个解决方案。</p>
<p>比如</p>
<ul>
<li>问题：我要如何准时上班</li>
<li>情景：我的钥匙锁在车里了 | 搭地铁肯定要迟早了</li>
<li>解决方案：打破窗户、进入车内、启动引擎，开车上班 | 打开手机、呼叫滴滴、上出租车，打车上班。</li>
</ul>
<p>更多定义的细节：</p>
<ul>
<li>意图</li>
<li>动机</li>
<li>对比</li>
<li>适用性</li>
<li>举一反三</li>
</ul>
<p>如何更加详细去定义和学习一个设计模式</p>
<ul>
<li>名称：用于学习与分享时共享词汇，概括性描述一个设计模式的作用</li>
<li>分类：用于归纳设计模式的用途</li>
<li>动机：给出了问题以及如何解决这个问题的具体场景</li>
<li>结构：提供了图示，显示出参与此模式的类之间的关系</li>
<li>参与者：描述在此设计中所涉及到的类和对象在模式中的责任和角色</li>
<li>结果：描述采用此模式之后产生的效果：好与不好</li>
<li>协作：告诉我们参与者如何在此模式中合作</li>
<li>实现：提供了你在实现该模式时需要使用的技巧，以及应该小心面对的问题</li>
<li>代码：提供实现的代码，对如何实现有所帮助</li>
<li>已知应用：用来描述已经在真实系统中发现的模式例子</li>
<li>相关模式：描述了此模式和其他模式之间的关系</li>
</ul>
]]></content>
      <categories>
        <category>Design Patterns</category>
      </categories>
      <tags>
        <tag>Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>「Tips」Yii2 前端请求的参数字段映射数据模型的属性</title>
    <url>/2017/03/15/%E3%80%8CTips%E3%80%8DYii2-%E5%89%8D%E7%AB%AF%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8F%82%E6%95%B0%E5%AD%97%E6%AE%B5%E6%98%A0%E5%B0%84%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%B1%9E%E6%80%A7/</url>
    <content><![CDATA[<p>使用 Yii 2 构建 RESTFul API 项目时，需要实现一个功能。这个功能可以将 HTTP 请求的参数和后端数据模型相映射，让前端的请求参数命名和后端数据的模型属性不需要保持一致，并在指定场景中实现数据验证。实现代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 前端传递 JSON 数据进来，格式是&#123;"name":"admin","pwd":"123456"&#125;</span></span><br><span class="line"><span class="comment"> * 需要对数据在指定场景下验证，并对应到模型的 username 属性和 password_hash 属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 模型代码</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SignInForm</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $name;</span><br><span class="line">	<span class="keyword">public</span> $pwd;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $rules = [</span><br><span class="line">            [</span><br><span class="line">                [</span><br><span class="line">                    <span class="string">'name'</span>,</span><br><span class="line">                    <span class="string">'pwd'</span>,</span><br><span class="line">                ],</span><br><span class="line">                <span class="string">'required'</span>,</span><br><span class="line">                <span class="string">'on'</span> =&gt; <span class="string">'signIn'</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                [<span class="string">'name'</span>],</span><br><span class="line">                <span class="string">'default'</span>,</span><br><span class="line">                <span class="string">'value'</span> =&gt; <span class="keyword">$this</span>-&gt;username,</span><br><span class="line">                <span class="string">'on'</span> =&gt; <span class="string">'signIn'</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                [<span class="string">'pwd'</span>],</span><br><span class="line">                <span class="string">'default'</span>,</span><br><span class="line">                <span class="string">'value'</span> =&gt; <span class="keyword">$this</span>-&gt;password_hash,</span><br><span class="line">                <span class="string">'on'</span> =&gt; <span class="string">'signIn'</span>,</span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $rules;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 控制器代码</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">workerbee</span>\<span class="title">api</span>\<span class="title">controllers</span>\<span class="title">BaseController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserController</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionSignIn</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $data[<span class="string">'SignInForm'</span>] = Yii::$app-&gt;request-&gt;post();</span><br><span class="line">        $signInModel = <span class="keyword">new</span> SignInForm([<span class="string">'scenario'</span> =&gt; <span class="string">'signIn'</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($signInModel-&gt;load($data) &amp;&amp; $signInModel-&gt;validate()) &#123;</span><br><span class="line">            $user = SignInForm::findByUsername($signInModel-&gt;username);</span><br><span class="line">            $validator = Yii::$app-&gt;getSecurity()-&gt;validatePassword($signInModel-&gt;pwd, $user-&gt;password_hash);</span><br><span class="line">            <span class="keyword">if</span> ($user !== <span class="keyword">null</span> &amp;&amp; $validator) &#123;</span><br><span class="line">                $user-&gt;access_token = $signInModel-&gt;getNewAccessToken();</span><br><span class="line">                <span class="keyword">if</span> ($user-&gt;save()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> $user;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ServerErrorHttpException(<span class="string">'登陆失败.'</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BadRequestHttpException(<span class="string">'账号名或密码错误.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnprocessableEntityHttpException(<span class="string">'数据验证失败.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>「Tips」.htaccess 配置 HTTP Header</title>
    <url>/2017/03/15/%E3%80%8CTips%E3%80%8D-htaccess-%E9%85%8D%E7%BD%AE-HTTP-Header/</url>
    <content><![CDATA[<p>使用 Yii 2 做 RESTFul API 项目时，发现在前端发起一个请求时，会出现以下错误：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">Request header field access-token is not allowed by Access-Control-Allow-Headers in preflight response.</span><br></pre></td></tr></table></figure>
<p>排查问题进行了很久，最后才发现在 Yii 2 的 <code>web</code> 目录下，有个文件 <code>.htaccess</code>，是可以配置 <code>Apache</code> 服务器接受 HTTP 请求的头部信息的，在特定选项加入 <code>access-token</code> 即刻不再报错，因为本次项目使用 <code>HTTP Header</code> 传递 <code>access-token</code> 的，没有加入 <code>access-token</code> 就意味 <code>Apache</code> 服务器不接受头部带有 <code>access-token</code> 的 HTTP 请求 。文件配置代码如下：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute"><span class="nomarkup">Header</span></span> always set Access-Control-Allow-Origin <span class="string">"*"</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">Header</span></span> always set Access-Control-Allow-Methods <span class="string">"POST, GET, OPTIONS, DELETE, PUT"</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">Header</span></span> always set Access-Control-Max-Age <span class="string">"1000"</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">Header</span></span> always set Access-Control-Allow-Headers <span class="string">"x-requested-with, Content-Type, origin, authorization, accept, client-security-token, access-token"</span></span><br><span class="line"></span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteEngine</span></span> <span class="literal">on</span></span><br><span class="line"></span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_METHOD&#125;</span> OPTIONS</span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteRule</span></span> ^(.*)$ <span class="number">$1</span><span class="meta"> [R=200,L]</span></span><br><span class="line"></span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteRule</span></span> . index.php</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>「Tips」PHP 7.1 命名空间的新特性和使用方法</title>
    <url>/2017/03/15/%E3%80%8CTips%E3%80%8DPHP-7-1-%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7%E5%92%8C%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>新特性和使用方法如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Pre PHP 7 code</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">ClassA</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">ClassB</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">ClassC</span> <span class="title">as</span> <span class="title">C</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">function</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">fn_a</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">function</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">fn_b</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">function</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">fn_c</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">const</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">ConstA</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">const</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">ConstB</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">const</span> <span class="title">some</span>\<span class="title">namespace</span>\<span class="title">ConstC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PHP 7+ code</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">some</span>\<span class="title">namespace</span>\&#123;<span class="title">ClassA</span>, <span class="title">ClassB</span>, <span class="title">ClassC</span> <span class="title">as</span> <span class="title">C</span>&#125;;</span><br><span class="line"><span class="keyword">use</span> <span class="title">function</span> <span class="title">some</span>\<span class="title">namespace</span>\&#123;<span class="title">fn_a</span>, <span class="title">fn_b</span>, <span class="title">fn_c</span>&#125;;</span><br><span class="line"><span class="keyword">use</span> <span class="title">const</span> <span class="title">some</span>\<span class="title">namespace</span>\&#123;<span class="title">ConstA</span>, <span class="title">ConstB</span>, <span class="title">ConstC</span>&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>Swagger-PHP 基础使用</title>
    <url>/2017/03/02/Swagger-PHP-%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="swagger-php-的基本语法"><a class="header-anchor" href="#swagger-php-的基本语法"></a>Swagger-PHP 的基本语法</h2>
<h4 id="参考文档"><a class="header-anchor" href="#参考文档"></a>参考文档</h4>
<ul>
<li><a href="http://zircote.com/swagger-php/1.x/index.html" target="_blank" rel="noopener">Swagger-Annotations</a></li>
<li><a href="http://bfanger.nl/swagger-explained/" target="_blank" rel="noopener">Swagger-Explained</a></li>
</ul>
<h4 id="常用属性"><a class="header-anchor" href="#常用属性"></a>常用属性</h4>
<p>红色为必写的字段，蓝色为封装的字段。</p>
<ul>
<li><font color="blue">@SWG\Swagger</font>
<ul>
<li>swagger</li>
<li><font color="red">info</font>: <font color="blue">@SWG\Info</font></li>
<li>host - 接口域名</li>
<li>basePath - 接口前缀路径</li>
<li>schemes: [“http”, “https”, “ws”, “wss”]</li>
<li>consumes - 请求 Mime Types</li>
<li>produces - 响应 Mime Types</li>
<li>paths: <font color="blue">@SWG\Path</font></li>
</ul>
</li>
<li><font color="blue">@SWG\Info</font>
<ul>
<li>title - 文档标题</li>
<li>description - 文档描述</li>
<li>termsOfService - 所属团队</li>
<li>contact: <font color="blue">@SWG\Contact</font> - 联系方式</li>
</ul>
</li>
<li><font color="blue">@SWG\Contact</font>
<ul>
<li>url - 联系链接</li>
<li>name - 联系名称</li>
<li>email - 联系邮箱</li>
</ul>
</li>
<li><font color="blue">@SWG\License</font>
<ul>
<li><font color="red">name</font> - 开源许可证</li>
<li>url - 许可证地址</li>
</ul>
</li>
<li><font color="blue">@SWG\Path</font>
<ul>
<li>get: <font color="blue">@SWG\Get</font> - HTTP Get 请求</li>
<li>put: <font color="blue">@SWG\Put</font> - HTTP Put 请求</li>
<li>post: <font color="blue">@SWG\Post</font> - HTTP Post 请求</li>
<li>delete: <font color="blue">@SWG\Delete</font> - HTTP Delete 请求</li>
<li>options: <font color="blue">@SWG\Options</font> - HTTP Options 请求</li>
</ul>
</li>
<li><font color="blue">@SWG\GET</font>
<ul>
<li>tags - 请求分类</li>
<li>summary - 请求简介</li>
<li>description - 请求描述</li>
<li>operationId - 请求编号，要求唯一</li>
<li>consumes - 请求 Mime Types</li>
<li>produces - 响应 Mime Types</li>
<li>parameters: <font color="blue">@SWG\Parameter</font> - 请求参数</li>
<li><font color="red">responses</font>: <font color="blue">@SWG\Response</font> - 请求响应</li>
<li>schemes: [“http”,“https”,“ws”,“wss”] - 请求协议</li>
<li>deprecated - 是否弃用</li>
</ul>
</li>
<li><font color="blue">@SWG\Parameter</font>
<ul>
<li><font color="red">name</font> - 请求参数名称</li>
<li><font color="red">in</font>: [“query”,“header”,“path”,“formData”,“body”] - 请求参数存放方式</li>
<li>description - 请求参数描述</li>
<li>required - 是否要求</li>
<li><font color="red">schema</font> - 当 <code>in</code> 为 <code>body</code> 时可以使用，用于描述参数</li>
<li><font color="red">type</font>: [“string”, “number”, “integer”, “boolean”, “array”, “file”] - 请求参数类型</li>
<li>format: [“int32”, “int64”, “float”, “double”, “byte”, “date”, “date-time”] - 请求参数格式</li>
<li>allowEmptyValue - 是否允许空值</li>
<li>items - 当 <code>type</code> 为 <code>array</code>,<code>items</code> 为 <code>required</code>，描述参数数组</li>
<li>collectionFormat</li>
<li>default - 请求参数默认值</li>
</ul>
</li>
<li><font color="blue">@SWG\Response</font>
<ul>
<li><font color="red">default</font>
<ul>
<li>response object<br>
- <font color="red">description</font> - 响应描述<br>
- schema: <font color="blue">@SWG\Schema</font><br>
- headers: <font color="blue">@SWG\Header</font> - 响应头部<br>
- example: <font color="blue">@SWG\Example</font> - 响应数据例子</li>
<li>reference object
<ul>
<li><font color="red">$ref</font></li>
</ul>
</li>
</ul>
</li>
<li>HTTP Status Code
<ul>
<li>response object<br>
- <font color="red">description</font><br>
- schema: <font color="blue">@SWG\Schema</font><br>
- headers: <font color="blue">@SWG\Header</font><br>
- example: <font color="blue">@SWG\Example</font></li>
<li>reference object
<ul>
<li><font color="red">$ref</font></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><font color="blue">@SWG\Definition</font>
<ul>
<li>definition</li>
<li>required</li>
<li><font color="blue">@SWG\Property</font></li>
</ul>
</li>
<li><font color="blue">@SWG\Property</font>
<ul>
<li>property - 模型成员属性</li>
<li>type: [“string”, “number”, “integer”, “boolean”, “array”, “file”] - 模型参数类型</li>
<li>format: [“int32”, “int64”, “float”, “double”, “byte”, “date”, “date-time”] - 模型参数格式</li>
</ul>
</li>
<li><font color="blue">@SWG\Header</font>
<ul>
<li>header - 头部名称</li>
<li>type - 头部数值类型</li>
<li>description - 头部简介</li>
</ul>
</li>
</ul>
<h2 id="模块文件上使用"><a class="header-anchor" href="#模块文件上使用"></a>模块文件上使用</h2>
<p>打开文件 <code>api/modules/v1/module.php</code>，添加代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * v1 module definition class</span><br><span class="line"> *</span><br><span class="line"> * @SWG\Swagger(</span><br><span class="line"> *   swagger=&quot;2.0&quot;,</span><br><span class="line"> *   @SWG\Info(</span><br><span class="line"> *      title=&quot;安乐窝商品库 API(标题)&quot;,</span><br><span class="line"> *      description=&quot;安乐窝商品库 API(描述)&quot;,</span><br><span class="line"> *      termsOfService=&quot;安乐窝开发团队&quot;,</span><br><span class="line"> *      version=&quot;1.0.0(版本号)&quot;,</span><br><span class="line"> *      @SWG\Contact(</span><br><span class="line"> *          email=&quot;2794408425@qq.com(邮件)&quot;,</span><br><span class="line"> *          name=&quot;安乐窝(联系称呼)&quot;,</span><br><span class="line"> *          url=&quot;http://api.app/v1/swagger-ui/dist/index.html&quot;</span><br><span class="line"> *      ),</span><br><span class="line"> *      @SWG\License(</span><br><span class="line"> *          name=&quot;MIT&quot;,</span><br><span class="line"> *          url=&quot;http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT&quot;</span><br><span class="line"> *      ),</span><br><span class="line"> *  ),</span><br><span class="line"> *  host=&quot;api.app/&quot;,</span><br><span class="line"> *  basePath=&quot;v1/&quot;,</span><br><span class="line"> *  schemes=&#123;&quot;http&quot;&#125;,</span><br><span class="line"> *  produces=&#123;&quot;application/json&quot;&#125;,</span><br><span class="line"> *  consumes=&#123;&quot;application/json&quot;&#125;,</span><br><span class="line"> *      @SWG\Definition(</span><br><span class="line"> *          definition=&quot;ErrorModel&quot;,</span><br><span class="line"> *          required=&#123;&quot;code&quot;, &quot;message&quot;&#125;,</span><br><span class="line"> *          @SWG\Property(</span><br><span class="line"> *              property=&quot;code&quot;,</span><br><span class="line"> *              type=&quot;integer&quot;,</span><br><span class="line"> *              format=&quot;int32&quot;</span><br><span class="line"> *          ),</span><br><span class="line"> *          @SWG\Property(</span><br><span class="line"> *              property=&quot;message&quot;,</span><br><span class="line"> *              type=&quot;string&quot;</span><br><span class="line"> *          )</span><br><span class="line"> *      ),</span><br><span class="line"> * )</span><br><span class="line"> */</span><br></pre></td></tr></table></figure>
<p>上述代码生成文档时的效果如下图：</p>
<p><img src="http://o93kt6djh.bkt.clouddn.com/swagger-php-module.png" alt></p>
<h2 id="控制器文件上使用"><a class="header-anchor" href="#控制器文件上使用"></a>控制器文件上使用</h2>
<p>打开文件 <code>api/modules/v1/controllers/MenuController.php</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @SWG\Get(</span><br><span class="line"> *     path=&quot;/menu&quot;,</span><br><span class="line"> *     tags=&#123;&quot;菜单接口&quot;&#125;,</span><br><span class="line"> *     description=&quot;获取菜单列表&quot;,</span><br><span class="line"> *     operationId=&quot;menu/index&quot;,</span><br><span class="line"> *     @SWG\Parameter(</span><br><span class="line"> *         name=&quot;access-token&quot;,</span><br><span class="line"> *         in=&quot;query&quot;,</span><br><span class="line"> *         description=&quot;Access Token&quot;,</span><br><span class="line"> *         required=true,</span><br><span class="line"> *         type=&quot;string&quot;,</span><br><span class="line"> *         default=&quot;HelloWorld&quot;</span><br><span class="line"> *     ),</span><br><span class="line"> *     @SWG\Response(</span><br><span class="line"> *          response=200,</span><br><span class="line"> *          description=&quot;Success Response&quot;,</span><br><span class="line"> *          @SWG\Header(header=&quot;x-pagination-per-page&quot;, type=&quot;string&quot;, description=&quot;Per Page&quot;),</span><br><span class="line"> *          @SWG\Header(header=&quot;x-pagination-page-count&quot;, type=&quot;string&quot;, description=&quot;Page Count&quot;),</span><br><span class="line"> *          @SWG\Header(header=&quot;x-pagination-total-count&quot;, type=&quot;string&quot;, description=&quot;Total Count&quot;),</span><br><span class="line"> *          @SWG\Header(header=&quot;x-pagination-current-page&quot;, type=&quot;string&quot;, description=&quot;Current Page&quot;),</span><br><span class="line"> *          @SWG\Schema(</span><br><span class="line"> *              @SWG\Property(</span><br><span class="line"> *                  property=&quot;items&quot;,</span><br><span class="line"> *                  type=&quot;array&quot;,</span><br><span class="line"> *                  @SWG\Items(</span><br><span class="line"> *                      type=&quot;object&quot;,</span><br><span class="line"> *                      @SWG\Property(property=&quot;id&quot;, type=&quot;integer&quot;, example=1),</span><br><span class="line"> *                      @SWG\Property(property=&quot;name&quot;, type=&quot;string&quot;, example=&quot;权限管理&quot;),</span><br><span class="line"> *                      @SWG\Property(property=&quot;route&quot;, type=&quot;string&quot;, example=&quot;/admin/permission/index&quot;)</span><br><span class="line"> *                  )</span><br><span class="line"> *              ),</span><br><span class="line"> *              @SWG\Property(</span><br><span class="line"> *                  property=&quot;_links&quot;,</span><br><span class="line"> *                  type=&quot;object&quot;,</span><br><span class="line"> *                  @SWG\Property(</span><br><span class="line"> *                      property=&quot;self&quot;,</span><br><span class="line"> *                      type=&quot;object&quot;,</span><br><span class="line"> *                      @SWG\Property(</span><br><span class="line"> *                          property=&quot;href&quot;, type=&quot;string&quot;, example=&quot;http://api.app/v1/menu?access-token=HelloWorld&amp;page=1&quot;</span><br><span class="line"> *                      )</span><br><span class="line"> *                  ),</span><br><span class="line"> *              ),</span><br><span class="line"> *              @SWG\Property(</span><br><span class="line"> *                  property=&quot;_meta&quot;,</span><br><span class="line"> *                  type=&quot;object&quot;,</span><br><span class="line"> *                  @SWG\Property(property=&quot;totalCount&quot;, type=&quot;integer&quot;, example=20),</span><br><span class="line"> *                  @SWG\Property(property=&quot;pageCount&quot;, type=&quot;integer&quot;, example=1),</span><br><span class="line"> *                  @SWG\Property(property=&quot;currentPage&quot;, type=&quot;integer&quot;, example=1),</span><br><span class="line"> *                  @SWG\Property(property=&quot;perPage&quot;, type=&quot;integer&quot;, example=20),</span><br><span class="line"> *              )</span><br><span class="line"> *          )</span><br><span class="line"> *      ),</span><br><span class="line"> *      @SWG\Response(</span><br><span class="line"> *         response=&quot;404&quot;,</span><br><span class="line"> *         description=&quot;HTTP 404 Error&quot;,</span><br><span class="line"> *         @SWG\Schema(ref=&quot;#/definitions/ErrorModel&quot;)</span><br><span class="line"> *      ),</span><br><span class="line"> *     @SWG\Response(</span><br><span class="line"> *         response=&quot;500&quot;,</span><br><span class="line"> *         description=&quot;HTTP 500 Error&quot;,</span><br><span class="line"> *         @SWG\Schema(ref=&quot;#/definitions/ErrorModel&quot;)</span><br><span class="line"> *     )</span><br><span class="line"> * )</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @SWG\Post(</span><br><span class="line"> *     path=&quot;/menu&quot;,</span><br><span class="line"> *     tags=&#123;&quot;菜单接口&quot;&#125;,</span><br><span class="line"> *     operationId=&quot;menu/create&quot;,</span><br><span class="line"> *     description=&quot;新增菜单&quot;,</span><br><span class="line"> *     @SWG\Parameter(</span><br><span class="line"> *         name=&quot;body&quot;,</span><br><span class="line"> *         in=&quot;body&quot;,</span><br><span class="line"> *         description=&quot;新增菜单所需的参数&quot;,</span><br><span class="line"> *         required=true,</span><br><span class="line"> *         @SWG\Schema(ref=&quot;#/definitions/MenuModel&quot;)</span><br><span class="line"> *     ),</span><br><span class="line"> *     @SWG\Parameter(</span><br><span class="line"> *         in=&quot;query&quot;,</span><br><span class="line"> *         name=&quot;access-token&quot;,</span><br><span class="line"> *         default=&quot;HelloWorld&quot;,</span><br><span class="line"> *         description=&quot;Access-Token&quot;,</span><br><span class="line"> *         required=true,</span><br><span class="line"> *         type=&quot;string&quot;,</span><br><span class="line"> *         format=&quot;string&quot;</span><br><span class="line"> *     ),</span><br><span class="line"> *     @SWG\Response(</span><br><span class="line"> *          response=201,</span><br><span class="line"> *          description=&quot;pet response&quot;,</span><br><span class="line"> *          @SWG\Schema(</span><br><span class="line"> *              type=&quot;object&quot;,</span><br><span class="line"> *              @SWG\Property(property=&quot;id&quot;, type=&quot;integer&quot;, example=1),</span><br><span class="line"> *              @SWG\Property(property=&quot;name&quot;, type=&quot;string&quot;, example=&quot;歪理兔&quot;),</span><br><span class="line"> *              @SWG\Property(property=&quot;route&quot;, type=&quot;string&quot;, example=&quot;/admin/very/too&quot;),</span><br><span class="line"> *          )</span><br><span class="line"> *     ),</span><br><span class="line"> *     @SWG\Response(</span><br><span class="line"> *         response=&quot;default&quot;,</span><br><span class="line"> *         description=&quot;unexpected error&quot;,</span><br><span class="line"> *         @SWG\Schema(ref=&quot;#/definitions/ErrorModel&quot;)</span><br><span class="line"> *     )</span><br><span class="line"> * )</span><br><span class="line"> */</span><br></pre></td></tr></table></figure>
<p>上述代码生成文档时的效果如下图：</p>
<p><img src="http://o93kt6djh.bkt.clouddn.com/swagger-php-controller1.png" alt></p>
<h2 id="模型文件上使用"><a class="header-anchor" href="#模型文件上使用"></a>模型文件上使用</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @SWG\Definition(</span><br><span class="line"> *      definition=&quot;MenuModel&quot;,</span><br><span class="line"> *      required=&#123;&quot;id&quot;, &quot;name&quot;, &quot;route&quot;&#125;,</span><br><span class="line"> *      @SWG\Property(</span><br><span class="line"> *          property=&quot;id&quot;,</span><br><span class="line"> *          type=&quot;integer&quot;,</span><br><span class="line"> *          format=&quot;int32&quot;</span><br><span class="line"> *      ),</span><br><span class="line"> *      @SWG\Property(</span><br><span class="line"> *          property=&quot;name&quot;,</span><br><span class="line"> *          type=&quot;string&quot;</span><br><span class="line"> *      ),</span><br><span class="line"> *      @SWG\Property(</span><br><span class="line"> *          property=&quot;route&quot;,</span><br><span class="line"> *          type=&quot;string&quot;</span><br><span class="line"> *      ),</span><br><span class="line"> *      @SWG\Property(</span><br><span class="line"> *          property=&quot;parent&quot;,</span><br><span class="line"> *          type=&quot;integer&quot;</span><br><span class="line"> *      ),</span><br><span class="line"> *      @SWG\Property(</span><br><span class="line"> *          property=&quot;order&quot;,</span><br><span class="line"> *          type=&quot;integer&quot;</span><br><span class="line"> *      ),</span><br><span class="line"> *      @SWG\Property(</span><br><span class="line"> *          property=&quot;data&quot;,</span><br><span class="line"> *          type=&quot;string&quot;</span><br><span class="line"> *      )</span><br><span class="line"> * )</span><br><span class="line"> */</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Swagger</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Yii2 构建 RESTFul API</title>
    <url>/2017/02/28/%E4%BD%BF%E7%94%A8-Yii2-%E6%9E%84%E5%BB%BA-RESTFul-API/</url>
    <content><![CDATA[<h2 id="安装-yii2-高级模板"><a class="header-anchor" href="#安装-yii2-高级模板"></a>安装 Yii2 高级模板</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer global require &quot;fxp/composer-asset-plugin:^1.2.0&quot;</span><br><span class="line">composer create-project --prefer-dist yiisoft/yii2-app-advanced Api</span><br></pre></td></tr></table></figure>
<p>初始化项目</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd Api</span><br><span class="line">sudo php init</span><br></pre></td></tr></table></figure>
<p>打开文件 <code>common/config/main-local.php</code>，配置数据库信息</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">'components'</span> =&gt; [</span><br><span class="line">        <span class="string">'db'</span> =&gt; [</span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'yii\db\Connection'</span>,</span><br><span class="line">            <span class="string">'dsn'</span> =&gt; <span class="string">'mysql:host=localhost;dbname=api'</span>,</span><br><span class="line">            <span class="string">'username'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line">            <span class="string">'password'</span> =&gt; <span class="string">'123456'</span>,</span><br><span class="line">            <span class="string">'charset'</span> =&gt; <span class="string">'utf8'</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'mailer'</span> =&gt; [</span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'yii\swiftmailer\Mailer'</span>,</span><br><span class="line">            <span class="string">'viewPath'</span> =&gt; <span class="string">'@common/mail'</span>,</span><br><span class="line">            <span class="comment">// send all mails to a file by default. You have to set</span></span><br><span class="line">            <span class="comment">// 'useFileTransport' to false and configure a transport</span></span><br><span class="line">            <span class="comment">// for the mailer to send real emails.</span></span><br><span class="line">            <span class="string">'useFileTransport'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<p>执行迁移文件，生成数据表</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php yii migrate</span><br></pre></td></tr></table></figure>
<p>新建模板 <code>api</code>,执行操作如下：</p>
<ul>
<li>复制目录 <code>frontend</code> 为 <code>api</code></li>
<li>复制目录 <code>environments/dev/frontend</code> 为 <code>environments/dev/api</code></li>
<li>复制目录 <code>environments/prod/frontend</code> 为 <code>environments/prod/api</code></li>
<li>修改目录 <code>api</code> 里面文件的命名空间 <code>namespace</code></li>
<li>打开文件 <code>common/config/bootstrap.php</code> 并加入代码 <code>Yii::setAlias('api', dirname(dirname(__DIR__)) . '/api');</code></li>
</ul>
<p>清理模板 <code>api</code>，删除文件如下：</p>
<ul>
<li>api/assets</li>
<li>api/views</li>
<li>api/controllers</li>
<li>api/web/assets</li>
<li>api/web/css</li>
</ul>
<p>配置 Apache 虚拟主机</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> api.frontend.app</span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/Users/LuisEdware/Code/Api/frontend/web/"</span></span><br><span class="line"></span><br><span class="line">   <span class="section">&lt;Directory "/Users/LuisEdware/Code/Api/frontend/web/"&gt;</span></span><br><span class="line">       <span class="comment"># use mod_rewrite for pretty URL support</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteEngine</span></span> <span class="literal">on</span></span><br><span class="line">       <span class="comment"># If a directory or a file exists, use the request directly</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</span><br><span class="line">       <span class="comment"># Otherwise forward the request to index.php</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteRule</span></span> . index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># use index.php as index file</span></span><br><span class="line">       <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># ...other settings...</span></span><br><span class="line">       <span class="comment"># Apache 2.4</span></span><br><span class="line">       <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line"></span><br><span class="line">       <span class="comment">## Apache 2.2</span></span><br><span class="line">       <span class="comment"># Order allow,deny</span></span><br><span class="line">       <span class="comment"># Allow from all</span></span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> api.backend.app</span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/Users/LuisEdware/Code/Api/backend/web/"</span></span><br><span class="line"></span><br><span class="line">   <span class="section">&lt;Directory "/Users/LuisEdware/Code/Api/backend/web/"&gt;</span></span><br><span class="line">       <span class="comment"># use mod_rewrite for pretty URL support</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteEngine</span></span> <span class="literal">on</span></span><br><span class="line">       <span class="comment"># If a directory or a file exists, use the request directly</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</span><br><span class="line">       <span class="comment"># Otherwise forward the request to index.php</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteRule</span></span> . index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># use index.php as index file</span></span><br><span class="line">       <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># ...other settings...</span></span><br><span class="line">       <span class="comment"># Apache 2.4</span></span><br><span class="line">       <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line"></span><br><span class="line">       <span class="comment">## Apache 2.2</span></span><br><span class="line">       <span class="comment"># Order allow,deny</span></span><br><span class="line">       <span class="comment"># Allow from all</span></span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> api.app</span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/Users/LuisEdware/Code/Api/api/web/"</span></span><br><span class="line"></span><br><span class="line">   <span class="section">&lt;Directory "/Users/LuisEdware/Code/Api/api/web/"&gt;</span></span><br><span class="line">       <span class="comment"># use mod_rewrite for pretty URL support</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteEngine</span></span> <span class="literal">on</span></span><br><span class="line">       <span class="comment"># If a directory or a file exists, use the request directly</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</span><br><span class="line">       <span class="comment"># Otherwise forward the request to index.php</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteRule</span></span> . index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># use index.php as index file</span></span><br><span class="line">       <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># ...other settings...</span></span><br><span class="line">       <span class="comment"># Apache 2.4</span></span><br><span class="line">       <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line"></span><br><span class="line">       <span class="comment">## Apache 2.2</span></span><br><span class="line">       <span class="comment"># Order allow,deny</span></span><br><span class="line">       <span class="comment"># Allow from all</span></span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="搭建基本的-restful-架构"><a class="header-anchor" href="#搭建基本的-restful-架构"></a>搭建基本的 RESTFul 架构</h2>
<h4 id="创建控制器"><a class="header-anchor" href="#创建控制器"></a>创建控制器</h4>
<p>在目录 <code>api/controllers</code> 下创建控制器 <code>UserController</code>，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">modules</span>\<span class="title">v1</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">ActiveController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> <span class="keyword">extends</span> <span class="title">ActiveController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 声明控制器所采用的数据模型</span></span><br><span class="line">    <span class="keyword">public</span> $modelClass = <span class="string">'api\modules\v1\models\Order'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 序列化输出</span></span><br><span class="line">    <span class="keyword">public</span> $serializer = [</span><br><span class="line">        <span class="string">'class'</span> =&gt; <span class="string">'yii\rest\Serializer'</span>,</span><br><span class="line">        <span class="string">'collectionEnvelope'</span> =&gt; <span class="string">'items'</span>,</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="配置路由规则"><a class="header-anchor" href="#配置路由规则"></a>配置路由规则</h4>
<p>打开文件 <code>api/config/main-local.php</code>，在数组 <code>$config['components']</code> 中新增代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="string">'components'</span> =&gt; [</span><br><span class="line">        <span class="comment">// 接受 JSON 格式的数据</span></span><br><span class="line">        <span class="string">'request'</span> =&gt; [</span><br><span class="line">            <span class="string">'cookieValidationKey'</span> =&gt; <span class="string">'sTGCwRd3spEa33BW2HMjuuwZnsJO6RMM'</span>,</span><br><span class="line">            <span class="string">'parsers'</span> =&gt; [</span><br><span class="line">                <span class="string">'application/json'</span> =&gt; <span class="string">'yii\web\JsonParser'</span>,</span><br><span class="line">            ],</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// 配置路由规则</span></span><br><span class="line">        <span class="string">'urlManager'</span> =&gt; [</span><br><span class="line">            <span class="string">'enablePrettyUrl'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">            <span class="string">'enableStrictParsing'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">            <span class="string">'showScriptName'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">            <span class="string">'rules'</span> =&gt; [</span><br><span class="line">                [</span><br><span class="line">                    <span class="string">'class'</span> =&gt; <span class="string">'yii\rest\UrlRule'</span>,</span><br><span class="line">                    <span class="string">'controller'</span> =&gt; <span class="string">'user'</span>,</span><br><span class="line">                    <span class="string">'pluralize'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">                ],</span><br><span class="line">            ],</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure>
<h4 id="创建数据模型"><a class="header-anchor" href="#创建数据模型"></a>创建数据模型</h4>
<p>在目录 <code>api\models</code> 新增数据模型，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"user"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fields</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 删除敏感字段</span></span><br><span class="line">        $fields = <span class="keyword">parent</span>::fields();</span><br><span class="line">        <span class="keyword">unset</span>($fields[<span class="string">'auth_key'</span>], $fields[<span class="string">'password_hash'</span>], $fields[<span class="string">'password_reset_token'</span>]);</span><br><span class="line">        <span class="keyword">return</span> $fields;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="测试接口地址"><a class="header-anchor" href="#测试接口地址"></a>测试接口地址</h4>
<p>使用 <code>HTTP GET</code> 的方式去访问 <code>http://api.app/user</code>,得到 JSON 数据如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"items"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"username"</span>: <span class="string">"okirlin"</span>,</span><br><span class="line">      <span class="attr">"email"</span>: <span class="string">"brady.renner@rutherford.com"</span>,</span><br><span class="line">      <span class="attr">"role"</span>: <span class="number">10</span>,</span><br><span class="line">      <span class="attr">"status"</span>: <span class="number">10</span>,</span><br><span class="line">      <span class="attr">"created_at"</span>: <span class="number">1391885313</span>,</span><br><span class="line">      <span class="attr">"updated_at"</span>: <span class="number">1391885313</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"username"</span>: <span class="string">"troy.becker"</span>,</span><br><span class="line">      <span class="attr">"email"</span>: <span class="string">"nicolas.dianna@hotmail.com"</span>,</span><br><span class="line">      <span class="attr">"role"</span>: <span class="number">10</span>,</span><br><span class="line">      <span class="attr">"status"</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"created_at"</span>: <span class="number">1391885313</span>,</span><br><span class="line">      <span class="attr">"updated_at"</span>: <span class="number">1391885313</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">"username"</span>: <span class="string">"miles"</span>,</span><br><span class="line">      <span class="attr">"email"</span>: <span class="string">"506510463@qq.com"</span>,</span><br><span class="line">      <span class="attr">"role"</span>: <span class="number">10</span>,</span><br><span class="line">      <span class="attr">"status"</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"created_at"</span>: <span class="number">1231231233</span>,</span><br><span class="line">      <span class="attr">"updated_at"</span>: <span class="number">1231231233</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"_links"</span>: &#123;</span><br><span class="line">    <span class="attr">"self"</span>: &#123;</span><br><span class="line">      <span class="attr">"href"</span>: <span class="string">"http://api.app/user?page=1"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"_meta"</span>: &#123;</span><br><span class="line">    <span class="attr">"totalCount"</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="attr">"pageCount"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"currentPage"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"perPage"</span>: <span class="number">20</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="版本控制"><a class="header-anchor" href="#版本控制"></a>版本控制</h2>
<h4 id="实现方式"><a class="header-anchor" href="#实现方式"></a>实现方式</h4>
<p>有两种方案可以实现 API 版本控制：</p>
<ul>
<li>在 URL 中带上请求的版本号，比如：<code>http://example.com/v1/users</code></li>
<li>把版本号放在HTTP请求头中，通常通过 Accept 头，像这样：<code>Accept: application/json; version=v1</code></li>
</ul>
<p>Yii2 两种方案都支持，官方推荐，使用模块来实现版本化，简化代码维护和管理，在 URL 上带上一个大版本号（比如： v1, v2），在每个大版本中，使用 <code>Accept HTTP</code> 请求头来判定小版本号并编写针对各小版本的条件语句。</p>
<h4 id="创建模块"><a class="header-anchor" href="#创建模块"></a>创建模块</h4>
<p>新建目录 <code>api/modules/v1</code>，目录下新建文件 <code>Module.php</code>，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">modules</span>\<span class="title">v1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * v1 module definition class</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Module</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">base</span>\<span class="title">Module</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@inheritdoc</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $controllerNamespace = <span class="string">'api\modules\v1\controllers'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@inheritdoc</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="创建控制器"><a class="header-anchor" href="#创建控制器"></a>创建控制器</h4>
<p>新建目录 <code>api/modules/v1/controllers</code>，在该目录下新增控制器 <code>OrderController.php</code>，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">modules</span>\<span class="title">v1</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">ActiveController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> <span class="keyword">extends</span> <span class="title">ActiveController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 声明控制器所采用的数据模型</span></span><br><span class="line">    <span class="keyword">public</span> $modelClass = <span class="string">'api\modules\v1\models\Order'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 序列化输出</span></span><br><span class="line">    <span class="keyword">public</span> $serializer = [</span><br><span class="line">        <span class="string">'class'</span> =&gt; <span class="string">'yii\rest\Serializer'</span>,</span><br><span class="line">        <span class="string">'collectionEnvelope'</span> =&gt; <span class="string">'items'</span>,</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="创建模型"><a class="header-anchor" href="#创建模型"></a>创建模型</h4>
<p>新建目录 <code>api/modules/v1/models</code>，在该目录下新增数据模型 <code>Order.php</code>，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">modules</span>\<span class="title">v1</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"z_order"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回指定的字段</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fields</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'id'</span>,</span><br><span class="line">            <span class="comment">// 重命名字段</span></span><br><span class="line">            <span class="string">'orderNumber'</span> =&gt; <span class="string">'orderno'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="配置路由与模块"><a class="header-anchor" href="#配置路由与模块"></a>配置路由与模块</h4>
<p>打开文件 <code>api/config/main-local.php</code>，在数组 <code>$config[]</code> 新增模块版本，在数组 <code>$config['components']['urlManager']['rules']</code> 新增路由规则，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config = [</span><br><span class="line">    <span class="string">'modules'</span> =&gt; [</span><br><span class="line">        <span class="string">'v1'</span> =&gt; [</span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'api\modules\v1\Module'</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">'components'</span> =&gt; [</span><br><span class="line">        <span class="string">'request'</span> =&gt; [</span><br><span class="line">            <span class="comment">// !!! insert a secret key in the following (if it is empty) - this is required by cookie validation</span></span><br><span class="line">            <span class="string">'cookieValidationKey'</span> =&gt; <span class="string">'sTGCwRd3spEa33BW2HMjuuwZnsJO6RMM'</span>,</span><br><span class="line">            <span class="string">'parsers'</span> =&gt; [</span><br><span class="line">                <span class="string">'application/json'</span> =&gt; <span class="string">'yii\web\JsonParser'</span>,</span><br><span class="line">            ],</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'urlManager'</span> =&gt; [</span><br><span class="line">            <span class="string">'enablePrettyUrl'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">            <span class="string">'enableStrictParsing'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">            <span class="string">'showScriptName'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">            <span class="string">'rules'</span> =&gt; [</span><br><span class="line">                [</span><br><span class="line">                    <span class="string">'class'</span> =&gt; <span class="string">'yii\rest\UrlRule'</span>,</span><br><span class="line">                    <span class="string">'controller'</span> =&gt; <span class="string">'user'</span>,</span><br><span class="line">                    <span class="string">'pluralize'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">                ],</span><br><span class="line">                [</span><br><span class="line">                    <span class="string">'class'</span> =&gt; <span class="string">'yii\rest\UrlRule'</span>,</span><br><span class="line">                    <span class="string">'controller'</span> =&gt; <span class="string">'v1/order'</span>,</span><br><span class="line">                    <span class="string">'pluralize'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">                ],</span><br><span class="line">            ],</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<h4 id="测试接口地址"><a class="header-anchor" href="#测试接口地址"></a>测试接口地址</h4>
<p>使用 <code>HTTP GET</code> 的方式去访问 <code>http://api.app/v1/order</code>,得到 JSON 数据如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"orders"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">57</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310140001"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">68</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310150001"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">69</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310150002"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">70</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310150003"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">71</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310170001"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">72</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310170002"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">73</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310170003"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">74</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310170004"</span></span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="api-认证"><a class="header-anchor" href="#api-认证"></a>API 认证</h2>
<p>Yii 2 有三种认证用户的验证方式</p>
<ul>
<li><code>HttpBasicAuth::className()</code>：是通过弹窗填用户名密码，默认只需要在用户名栏填入 <code>Access-Token</code> 返回接口数据。</li>
<li><code>HttpBearerAuth::className()</code>：是通过请求 <code>Headers</code> 带上 <code>Authorization: Bearer Access-Token</code> 参数返回接口数据。</li>
<li><code>QueryParamAuth::className()</code>：是通过 <code>URL</code> 带上 <code>?access-token=Access-Token</code> 参数返回接口数据。</li>
</ul>
<p>采用 <code>QueryParamAuth</code> 方式进行验证，因为 <code>RESTFul API</code> 是无状态的，不能通过 <code>session</code> 或 <code>cookie</code> 来保持状态，在模块文件 <code>Module.php</code> 中修改代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">modules</span>\<span class="title">v1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * v1 module definition class</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Module</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">base</span>\<span class="title">Module</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@inheritdoc</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $controllerNamespace = <span class="string">'api\modules\v1\controllers'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@inheritdoc</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::init();</span><br><span class="line">        <span class="comment">// 禁止使用 Session</span></span><br><span class="line">        Yii::$app-&gt;user-&gt;enableSession = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// v1 模块的请求都需要认证</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">behaviors</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $behaviors = <span class="keyword">parent</span>::behaviors();</span><br><span class="line">        $behaviors[<span class="string">'authenticator'</span>] = [</span><br><span class="line">            <span class="string">'class'</span> =&gt; QueryParamAuth::className(),</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">return</span> $behaviors;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用 <code>HTTP GET</code> 的方式去访问 <code>http://api.app/v1/order?access-token=HelloWorld</code>,得到 JSON 数据如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"orders"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">57</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310140001"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">68</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310150001"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">69</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310150002"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">70</span>,</span><br><span class="line">      <span class="attr">"orderNumber"</span>: <span class="string">"201310150003"</span></span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用-swagger-生成-api-可调试文档"><a class="header-anchor" href="#使用-swagger-生成-api-可调试文档"></a>使用 Swagger 生成 API 可调试文档</h2>
<h4 id="配置-swagger-ui"><a class="header-anchor" href="#配置-swagger-ui"></a>配置 Swagger-UI</h4>
<p>执行以下命令，将 <code>Swagger-UI</code> 克隆到 <code>api/web/v1/</code> 文件夹下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd api/web</span><br><span class="line">mkdir v1</span><br><span class="line">cd v1</span><br><span class="line">git clone https://github.com/swagger-api/swagger-ui.git</span><br></pre></td></tr></table></figure>
<p>执行以下命令，在目录 <code>api/web/v1</code> 下生成 <code>Swagger</code> 文档配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p swagger-document/</span><br><span class="line">vim swagger-document/swagger.json</span><br></pre></td></tr></table></figure>
<p>打开文件 <code>api/web/v1/swagger-ui/dist/index.html</code>，修改生成文档的配置文件地址：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (url &amp;&amp; url.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">  url = <span class="built_in">decodeURIComponent</span>(url[<span class="number">1</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  url = <span class="string">"http://api.app/v1/swagger-document/swagger.json"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="swagger-php-的基本语法"><a class="header-anchor" href="#swagger-php-的基本语法"></a>Swagger-PHP 的基本语法</h4>
<p>参考文档</p>
<ul>
<li><a href="http://zircote.com/swagger-php/1.x/index.html" target="_blank" rel="noopener">Swagger-Annotations</a></li>
<li><a href="http://bfanger.nl/swagger-explained/" target="_blank" rel="noopener">Swagger-Explained</a></li>
</ul>
<p>红色为必写的字段，蓝色为封装的字段。</p>
<ul>
<li><font color="blue">@SWG\Swagger</font>
<ul>
<li>swagger</li>
<li><font color="red">info</font>: <font color="blue">@SWG\Info</font></li>
<li>host - 接口域名</li>
<li>basePath - 接口前缀路径</li>
<li>schemes: [“http”, “https”, “ws”, “wss”]</li>
<li>consumes - 请求 Mime Types</li>
<li>produces - 响应 Mime Types</li>
<li>paths: <font color="blue">@SWG\Path</font></li>
</ul>
</li>
<li><font color="blue">@SWG\Info</font>
<ul>
<li>title - 文档标题</li>
<li>description - 文档描述</li>
<li>termsOfService - 所属团队</li>
<li>contact: <font color="blue">@SWG\Contact</font> - 联系方式</li>
</ul>
</li>
<li><font color="blue">@SWG\Contact</font>
<ul>
<li>url - 联系链接</li>
<li>name - 联系名称</li>
<li>email - 联系邮箱</li>
</ul>
</li>
<li><font color="blue">@SWG\License</font>
<ul>
<li><font color="red">name</font> - 开源许可证</li>
<li>url - 许可证地址</li>
</ul>
</li>
<li><font color="blue">@SWG\Path</font>
<ul>
<li>get: <font color="blue">@SWG\Get</font> - HTTP Get 请求</li>
<li>put: <font color="blue">@SWG\Put</font> - HTTP Put 请求</li>
<li>post: <font color="blue">@SWG\Post</font> - HTTP Post 请求</li>
<li>delete: <font color="blue">@SWG\Delete</font> - HTTP Delete 请求</li>
<li>options: <font color="blue">@SWG\Options</font> - HTTP Options 请求</li>
</ul>
</li>
<li><font color="blue">@SWG\GET</font>
<ul>
<li>tags - 请求分类</li>
<li>summary - 请求简介</li>
<li>description - 请求描述</li>
<li>operationId - 请求编号，要求唯一</li>
<li>consumes - 请求 Mime Types</li>
<li>produces - 响应 Mime Types</li>
<li>parameters: <font color="blue">@SWG\Parameter</font> - 请求参数</li>
<li><font color="red">responses</font>: <font color="blue">@SWG\Response</font> - 请求响应</li>
<li>schemes: [“http”,“https”,“ws”,“wss”] - 请求协议</li>
<li>deprecated - 是否弃用</li>
</ul>
</li>
<li><font color="blue">@SWG\Parameter</font>
<ul>
<li><font color="red">name</font> - 请求参数名称</li>
<li><font color="red">in</font>: [“query”,“header”,“path”,“formData”,“body”] - 请求参数存放方式</li>
<li>description - 请求参数描述</li>
<li>required - 是否要求</li>
<li><font color="red">schema</font> - 当 <code>in</code> 为 <code>body</code> 时可以使用，用于描述参数</li>
<li><font color="red">type</font>: [“string”, “number”, “integer”, “boolean”, “array”, “file”] - 请求参数类型</li>
<li>format: [“int32”, “int64”, “float”, “double”, “byte”, “date”, “date-time”] - 请求参数格式</li>
<li>allowEmptyValue - 是否允许空值</li>
<li>items - 当 <code>type</code> 为 <code>array</code>,<code>items</code> 为 <code>required</code>，描述参数数组</li>
<li>collectionFormat</li>
<li>default - 请求参数默认值</li>
</ul>
</li>
<li><font color="blue">@SWG\Response</font>
<ul>
<li><font color="red">default</font>
<ul>
<li>response object
<ul>
<li><font color="red">description</font> - 响应描述</li>
<li>schema: <font color="blue">@SWG\Schema</font></li>
<li>headers: <font color="blue">@SWG\Header</font> - 响应头部</li>
<li>example: <font color="blue">@SWG\Example</font> - 响应数据例子</li>
</ul>
</li>
<li>reference object
<ul>
<li><font color="red">$ref</font></li>
</ul>
</li>
</ul>
</li>
<li>HTTP Status Code
<ul>
<li>response object<br>
- <font color="red">description</font>
<ul>
<li>schema: <font color="blue">@SWG\Schema</font></li>
<li>headers: <font color="blue">@SWG\Header</font></li>
<li>example: <font color="blue">@SWG\Example</font></li>
</ul>
</li>
<li>reference object
<ul>
<li><font color="red">$ref</font></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><font color="blue">@SWG\Definition</font>
<ul>
<li>definition</li>
<li>required</li>
<li><font color="blue">@SWG\Property</font></li>
</ul>
</li>
<li><font color="blue">@SWG\Property</font>
<ul>
<li>property - 模型成员属性</li>
<li>type: [“string”, “number”, “integer”, “boolean”, “array”, “file”] - 模型参数类型</li>
<li>format: [“int32”, “int64”, “float”, “double”, “byte”, “date”, “date-time”] - 模型参数格式</li>
</ul>
</li>
<li><font color="blue">@SWG\Header</font>
<ul>
<li>header - 头部名称</li>
<li>type - 头部数值类型</li>
<li>description - 头部简介</li>
</ul>
</li>
</ul>
<h4 id="配置-swagger-php"><a class="header-anchor" href="#配置-swagger-php"></a>配置 Swagger-PHP</h4>
<p>使用 <code>Composer</code> 安装 <code>Swagger-PHP</code>，在项目根目录中执行命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer require zircote/swagger-php</span><br></pre></td></tr></table></figure>
<p>在 <code>api\controllers</code> 新增文档控制器 <code>DocumentController.php</code>，因为要生成不同版本的文档，控制器必须放在公用的目录，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Swagger</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Exception</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DocumentController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 根据版本号生成不同版本的 API 文档</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionBuild</span><span class="params">($version)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $apiDir = Yii::getAlias(<span class="string">'@api'</span>);</span><br><span class="line">        $swagger = Swagger\scan($apiDir);</span><br><span class="line">        $jsonFile = $apiDir . <span class="string">"/web/&#123;$version&#125;/swagger-document/swagger.json"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!file_exists($jsonFile)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"Swagger.json 文件不存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $isWrite = file_put_contents($jsonFile, $swagger);</span><br><span class="line">        <span class="keyword">if</span> ($isWrite == <span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect(<span class="string">"/&#123;$version&#125;/swagger-ui/dist/index.html"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"Swagger.json 文件写入失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>新增路由如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">[</span><br><span class="line">  <span class="string">'class'</span> =&gt; <span class="string">'yii\web\UrlRule'</span>,</span><br><span class="line">  <span class="string">'pattern'</span> =&gt; <span class="string">'document/build/&lt;version:\w+&gt;'</span>,</span><br><span class="line">  <span class="string">'route'</span> =&gt; <span class="string">'document/build'</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure>
<p>模块文件 <code>app/modules/Module.php</code> 新增注释如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * v1 module definition class</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@SWG</span>\Swagger(</span></span><br><span class="line"><span class="comment"> *   swagger="2.0",</span></span><br><span class="line"><span class="comment"> *   <span class="doctag">@SWG</span>\Info(</span></span><br><span class="line"><span class="comment"> *      title="安乐窝商品库 API(标题)",</span></span><br><span class="line"><span class="comment"> *      description="安乐窝商品库 API(描述)",</span></span><br><span class="line"><span class="comment"> *      termsOfService="安乐窝开发团队",</span></span><br><span class="line"><span class="comment"> *      version="1.0.0(版本号)",</span></span><br><span class="line"><span class="comment"> *      <span class="doctag">@SWG</span>\Contact(</span></span><br><span class="line"><span class="comment"> *          email="2794408425<span class="doctag">@qq</span>.com(邮件)",</span></span><br><span class="line"><span class="comment"> *          name="安乐窝(联系称呼)",</span></span><br><span class="line"><span class="comment"> *          url="http://api.app/v1/swagger-ui/dist/index.html"</span></span><br><span class="line"><span class="comment"> *      ),</span></span><br><span class="line"><span class="comment"> *      <span class="doctag">@SWG</span>\License(</span></span><br><span class="line"><span class="comment"> *          name="MIT",</span></span><br><span class="line"><span class="comment"> *          url="http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"</span></span><br><span class="line"><span class="comment"> *      ),</span></span><br><span class="line"><span class="comment"> *  ),</span></span><br><span class="line"><span class="comment"> *  host="api.app/",</span></span><br><span class="line"><span class="comment"> *  basePath="v1/",</span></span><br><span class="line"><span class="comment"> *  schemes=&#123;"http"&#125;,</span></span><br><span class="line"><span class="comment"> *  produces=&#123;"application/json"&#125;,</span></span><br><span class="line"><span class="comment"> *  consumes=&#123;"application/json"&#125;,</span></span><br><span class="line"><span class="comment"> *      <span class="doctag">@SWG</span>\Definition(</span></span><br><span class="line"><span class="comment"> *          definition="ErrorModel",</span></span><br><span class="line"><span class="comment"> *          required=&#123;"code", "message"&#125;,</span></span><br><span class="line"><span class="comment"> *          <span class="doctag">@SWG</span>\Property(</span></span><br><span class="line"><span class="comment"> *              property="code",</span></span><br><span class="line"><span class="comment"> *              type="integer",</span></span><br><span class="line"><span class="comment"> *              format="int32"</span></span><br><span class="line"><span class="comment"> *          ),</span></span><br><span class="line"><span class="comment"> *          <span class="doctag">@SWG</span>\Property(</span></span><br><span class="line"><span class="comment"> *              property="message",</span></span><br><span class="line"><span class="comment"> *              type="string"</span></span><br><span class="line"><span class="comment"> *          )</span></span><br><span class="line"><span class="comment"> *      ),</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<p>Yii 2 的 RESTFul APT 会自动为控制器提供六个动作如：<code>index</code>、<code>view</code>、<code>create</code>、<code>update</code>、<code>delete</code>、<code>options</code>，给控制器 <code>app/v1/controlelr/OrderController.php</code> 新增以下注释，为其生成接口文档。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@SWG</span>\Get(</span></span><br><span class="line"><span class="comment"> *     tags=&#123;"order"&#125;,</span></span><br><span class="line"><span class="comment"> *     path="/order",</span></span><br><span class="line"><span class="comment"> *     summary="列出所有的订单",</span></span><br><span class="line"><span class="comment"> *     operationId="index",</span></span><br><span class="line"><span class="comment"> *     description="列出所有的订单",</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *         name="access-token",</span></span><br><span class="line"><span class="comment"> *         in="query",</span></span><br><span class="line"><span class="comment"> *         description="Access Token for RESTFul API",</span></span><br><span class="line"><span class="comment"> *         required=true,</span></span><br><span class="line"><span class="comment"> *         type="string",</span></span><br><span class="line"><span class="comment"> *         format="string"</span></span><br><span class="line"><span class="comment"> *     ),</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@SWG</span>\Response(</span></span><br><span class="line"><span class="comment"> *         response=200,</span></span><br><span class="line"><span class="comment"> *         description="Successful Operation",</span></span><br><span class="line"><span class="comment"> *     ),</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@SWG</span>\Response(</span></span><br><span class="line"><span class="comment"> *         response="404",</span></span><br><span class="line"><span class="comment"> *         description="Not Found Operation",</span></span><br><span class="line"><span class="comment"> *         <span class="doctag">@SWG</span>\Schema(</span></span><br><span class="line"><span class="comment"> *             ref="#/definitions/Error"</span></span><br><span class="line"><span class="comment"> *         )</span></span><br><span class="line"><span class="comment"> *     )</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<p>打开控制器 <code>app/modules/v1/controller/UserController.php</code>，继承 actions() 方法，修改 <code>user/create</code> 的场景，并添加 <code>user/create</code> 文档生成注释代码，如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">modules</span>\<span class="title">v1</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">ActiveController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserController</span> <span class="keyword">extends</span> <span class="title">ActiveController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 声明控制器所采用的数据模型</span></span><br><span class="line">    <span class="keyword">public</span> $modelClass = <span class="string">'api\models\User'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 序列化输出</span></span><br><span class="line">    <span class="keyword">public</span> $serializer = [</span><br><span class="line">        <span class="string">'class'</span> =&gt; <span class="string">'yii\rest\Serializer'</span>,</span><br><span class="line">        <span class="string">'collectionEnvelope'</span> =&gt; <span class="string">'items'</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改 user/create 的 rules 场景</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actions</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $actions = <span class="keyword">parent</span>::actions();</span><br><span class="line">        $actions[<span class="string">'create'</span>][<span class="string">'scenario'</span>] = <span class="string">'createScenario'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $actions;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@SWG</span>\Post(</span></span><br><span class="line"><span class="comment"> *   path="/user",</span></span><br><span class="line"><span class="comment"> *   tags=&#123;"user"&#125;,</span></span><br><span class="line"><span class="comment"> *   summary="创建一名用户",</span></span><br><span class="line"><span class="comment"> *   description="This can only be done by the logged in user.",</span></span><br><span class="line"><span class="comment"> *   operationId="create",</span></span><br><span class="line"><span class="comment"> *   <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="username",</span></span><br><span class="line"><span class="comment"> *     default="LuisEdware",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="string",</span></span><br><span class="line"><span class="comment"> *     format="string"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *   <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="auth_key",</span></span><br><span class="line"><span class="comment"> *     default="iwTNae9t34OmnK6l4vT4IeaTk-YWI2Rv",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="string",</span></span><br><span class="line"><span class="comment"> *     format="string"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *   <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="password_hash",</span></span><br><span class="line"><span class="comment"> *     default="$2y$13$CXT0Rkle1EMJ/c1l5bylL.EylfmQ39O5JlHJVFpNn618OUS1HwaIi",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="string",</span></span><br><span class="line"><span class="comment"> *     format="string"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="password_reset_token",</span></span><br><span class="line"><span class="comment"> *     default="t5GU9NwpuGYSfb7FEZMAxqtuz2PkEvv_1487320567",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="string",</span></span><br><span class="line"><span class="comment"> *     format="string"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="email",</span></span><br><span class="line"><span class="comment"> *     default="2794408425<span class="doctag">@qq</span>.com",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="string",</span></span><br><span class="line"><span class="comment"> *     format="string"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="role",</span></span><br><span class="line"><span class="comment"> *     default="1",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="integer",</span></span><br><span class="line"><span class="comment"> *     format="integer"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="status",</span></span><br><span class="line"><span class="comment"> *     default="1",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="integer",</span></span><br><span class="line"><span class="comment"> *     format="integer"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="created_at",</span></span><br><span class="line"><span class="comment"> *     default="1391885313",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="integer",</span></span><br><span class="line"><span class="comment"> *     format="integer"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *   <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="updated_at",</span></span><br><span class="line"><span class="comment"> *     default="1391885313",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="integer",</span></span><br><span class="line"><span class="comment"> *     format="integer"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *   <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="path",</span></span><br><span class="line"><span class="comment"> *     name="access_token",</span></span><br><span class="line"><span class="comment"> *     default="HelloWorld",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="string",</span></span><br><span class="line"><span class="comment"> *     format="string"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *   <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *     in="query",</span></span><br><span class="line"><span class="comment"> *     name="access-token",</span></span><br><span class="line"><span class="comment"> *     default="HelloWorld",</span></span><br><span class="line"><span class="comment"> *     description="Created user object",</span></span><br><span class="line"><span class="comment"> *     required=true,</span></span><br><span class="line"><span class="comment"> *     type="string",</span></span><br><span class="line"><span class="comment"> *     format="string"</span></span><br><span class="line"><span class="comment"> *   ),</span></span><br><span class="line"><span class="comment"> *   <span class="doctag">@SWG</span>\Response(response="default", description="successful operation")</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<p>打开文件 <code>app/modules/v1/models/User.php</code>，新增代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">       [</span><br><span class="line">           [</span><br><span class="line">               <span class="string">'username'</span>,</span><br><span class="line">               <span class="string">'auth_key'</span>,</span><br><span class="line">               <span class="string">'password_hash'</span>,</span><br><span class="line">               <span class="string">'password_reset_token'</span>,</span><br><span class="line">               <span class="string">'email'</span>,</span><br><span class="line">               <span class="string">'role'</span>,</span><br><span class="line">               <span class="string">'status'</span>,</span><br><span class="line">               <span class="string">'created_at'</span>,</span><br><span class="line">               <span class="string">'updated_at'</span>,</span><br><span class="line">               <span class="string">'access_token'</span>,</span><br><span class="line">           ],</span><br><span class="line">           <span class="string">'required'</span>,</span><br><span class="line">           <span class="string">'on'</span> =&gt; [<span class="string">'createScenario'</span>],</span><br><span class="line">       ]</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 <code>ap1/modules/v1</code> 下新增控制器 <code>MenuController.php</code>，新增模型 <code>Menu.php</code>，配置好路由，控制器和模型代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">modules</span>\<span class="title">v1</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">ActiveController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MenuController</span> <span class="keyword">extends</span> <span class="title">ActiveController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 声明控制器所采用的数据模型</span></span><br><span class="line">    <span class="keyword">public</span> $modelClass = <span class="string">'api\modules\v1\models\Menu'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 序列化输出</span></span><br><span class="line">    <span class="keyword">public</span> $serializer = [</span><br><span class="line">        <span class="string">'class'</span> =&gt; <span class="string">'yii\rest\Serializer'</span>,</span><br><span class="line">        <span class="string">'collectionEnvelope'</span> =&gt; <span class="string">'items'</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actions</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $actions = <span class="keyword">parent</span>::actions();</span><br><span class="line">        $actions[<span class="string">'create'</span>][<span class="string">'scenario'</span>] = <span class="string">'createScenario'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $actions;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@SWG</span>\Post(</span></span><br><span class="line"><span class="comment"> *     path="/menu",</span></span><br><span class="line"><span class="comment"> *     tags=&#123;"menu"&#125;,</span></span><br><span class="line"><span class="comment"> *     operationId="createMenu",</span></span><br><span class="line"><span class="comment"> *     description="创建菜单",</span></span><br><span class="line"><span class="comment"> *     consumes=&#123;"application/json"&#125;,</span></span><br><span class="line"><span class="comment"> *     produces=&#123;"application/json"&#125;,</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *         name="body",</span></span><br><span class="line"><span class="comment"> *         in="body",</span></span><br><span class="line"><span class="comment"> *         description="menu to add to the store",</span></span><br><span class="line"><span class="comment"> *         required=true,</span></span><br><span class="line"><span class="comment"> *         <span class="doctag">@SWG</span>\Schema(ref="#/definitions/menu"),</span></span><br><span class="line"><span class="comment"> *     ),</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@SWG</span>\Parameter(</span></span><br><span class="line"><span class="comment"> *         in="query",</span></span><br><span class="line"><span class="comment"> *         name="access-token",</span></span><br><span class="line"><span class="comment"> *         default="HelloWorld",</span></span><br><span class="line"><span class="comment"> *         description="Created user object",</span></span><br><span class="line"><span class="comment"> *         required=true,</span></span><br><span class="line"><span class="comment"> *         type="string",</span></span><br><span class="line"><span class="comment"> *         format="string"</span></span><br><span class="line"><span class="comment"> *     ),</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@SWG</span>\Response(</span></span><br><span class="line"><span class="comment"> *         response=200,</span></span><br><span class="line"><span class="comment"> *         description="pet response",</span></span><br><span class="line"><span class="comment"> *         <span class="doctag">@SWG</span>\Schema(ref="#/definitions/menu")</span></span><br><span class="line"><span class="comment"> *     ),</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@SWG</span>\Response(</span></span><br><span class="line"><span class="comment"> *         response="default",</span></span><br><span class="line"><span class="comment"> *         description="unexpected error",</span></span><br><span class="line"><span class="comment"> *         <span class="doctag">@SWG</span>\Schema(ref="#/definitions/ErrorModel")</span></span><br><span class="line"><span class="comment"> *     )</span></span><br><span class="line"><span class="comment"> * )</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<p>模型</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">api</span>\<span class="title">modules</span>\<span class="title">v1</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Menu</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"menu"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回指定的字段</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fields</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'id'</span>,</span><br><span class="line">            <span class="string">'name'</span>,</span><br><span class="line">            <span class="string">'route'</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [</span><br><span class="line">                [</span><br><span class="line">                    <span class="string">'name'</span>,</span><br><span class="line">                    <span class="string">'parent'</span>,</span><br><span class="line">                    <span class="string">'route'</span>,</span><br><span class="line">                    <span class="string">'order'</span>,</span><br><span class="line">                    <span class="string">'data'</span>,</span><br><span class="line">                ],</span><br><span class="line">                <span class="string">'required'</span>,</span><br><span class="line">                <span class="string">'on'</span> =&gt; [<span class="string">'createScenario'</span>],</span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在浏览器中打开 URL: <code>http://api.app/document/build/v1</code> 生成文档。</p>
<h2 id="api-授权"><a class="header-anchor" href="#api-授权"></a>API 授权</h2>
<p>现在已经解决了 RESTFUL API 的脚手架、版本化、API 验证和 API 文档生成的问题，接下来我们来完成 API 授权功能。</p>
<p>首先我们需要建立授权数据，而所有授权数据相关的任务如下：</p>
<ul>
<li>定义角色和权限；</li>
<li>建立角色和权限的关系；</li>
<li>定义规则；</li>
<li>将规则与角色和权限作关联；</li>
<li>指派角色给用户。</li>
</ul>
<p>我们先配置所需的组件，我们使用 Yii2 自带 RBAC 组件进行权限控制，打开配置文件 <code>api/config/main.php</code>，在数组 <code>components</code> 新增代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">'authManager'</span> =&gt; [</span><br><span class="line">  <span class="string">'class'</span> =&gt; <span class="string">'yii\rbac\DbManager'</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure>
<p>然后在根目录执行命令，在数据库创建好相关的数据表，执行命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php yii migrate --migrationPath=@yii/rbac/migrations</span><br></pre></td></tr></table></figure>
<p>在项目根目录 <code>console/controllers</code> 文件夹新建控制器 <code>RbacController.php</code>，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">console</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">console</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RbacController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionInit</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $authManager = Yii::$app-&gt;authManager;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加 "createMenu" 权限</span></span><br><span class="line">        $createMenu = $authManager-&gt;createPermission(<span class="string">'menu/create'</span>);</span><br><span class="line">        $createMenu-&gt;description = <span class="string">'Create a Menu'</span>;</span><br><span class="line">        $authManager-&gt;add($createPost);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加 "updateMenu" 权限</span></span><br><span class="line">        $updateMenu = $authManager-&gt;createPermission(<span class="string">'menu/update'</span>);</span><br><span class="line">        $updateMenu-&gt;description = <span class="string">'Update Menu'</span>;</span><br><span class="line">        $authManager-&gt;add($updateMenu);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加 "author" 角色并赋予 "menu/create" 权限</span></span><br><span class="line">        $author = $authManager-&gt;createRole(<span class="string">'author'</span>);</span><br><span class="line">        $authManager-&gt;add($author);</span><br><span class="line">        $authManager-&gt;addChild($author, $createPost);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加 "admin" 角色并赋予 "menu/update" 和 "author" 权限</span></span><br><span class="line">        $admin = $authManager-&gt;createRole(<span class="string">'admin'</span>);</span><br><span class="line">        $authManager-&gt;add($admin);</span><br><span class="line">        $authManager-&gt;addChild($admin, $updatePost);</span><br><span class="line">        $authManager-&gt;addChild($admin, $author);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为用户指派角色。其中 1 和 2 是由 IdentityInterface::getId() 返回的id （译者注：user表的id）</span></span><br><span class="line">        $authManager-&gt;assign($admin, <span class="number">1</span>);</span><br><span class="line">        $authManager-&gt;assign($author, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在根目录中执行命令 <code>php yii rbac/init</code>，填充 RBAC 的测试数据，并在文件 <code>v1/Module.php</code> 中更改代码如下:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// v1 模块的请求都需要认证</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">behaviors</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $behaviors = <span class="keyword">parent</span>::behaviors();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// API 认证</span></span><br><span class="line">    $behaviors[<span class="string">'authenticator'</span>] = [</span><br><span class="line">        <span class="string">'class'</span> =&gt; QueryParamAuth::className(),</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// API 授权</span></span><br><span class="line">    Yii::$app-&gt;user-&gt;setIdentity(User::findIdentityByAccessToken(Yii::$app-&gt;request-&gt;get(<span class="string">'access-token'</span>)));</span><br><span class="line">    $operation = Yii::$app-&gt;controller-&gt;id . <span class="string">'/'</span> . Yii::$app-&gt;controller-&gt;action-&gt;id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!Yii::$app-&gt;user-&gt;can($operation)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'没有'</span> . $operation . <span class="string">'的操作权限'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编写测试"><a class="header-anchor" href="#编写测试"></a>编写测试</h2>
<p>如果是 RESTFul API 的架构，我会选择编写 API 测试和单元测试。首先先从 API 测试开始。首先在 <code>api</code> 中创建 API 测试配置文件,执行命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codecept generate:suite api</span><br></pre></td></tr></table></figure>
<p>进入文件夹<code>api/tests</code>，打开文件 <code>api.suite.yml</code>，编写配置如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class_name: ApiTester</span><br><span class="line">modules:</span><br><span class="line">    enabled: [PhpBrowser, REST]</span><br><span class="line">    config:</span><br><span class="line">        PhpBrowser:</span><br><span class="line">            url: http://api.app</span><br><span class="line">        REST:</span><br><span class="line">            url: http://api.app</span><br><span class="line">            depends: PhpBrowser</span><br></pre></td></tr></table></figure>
<p>在文件夹 <code>api</code> 生成 API 测试文件，执行命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codecept generate:cept api/v1 SearchMenu</span><br><span class="line">codecept generate:cept api/v1 CreateMenu</span><br></pre></td></tr></table></figure>
<p>打开文件 <code>api/tests/api/v1/SearchMenuCept.php</code>，编写代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">api</span>\<span class="title">tests</span>\<span class="title">ApiTester</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Codeception</span>\<span class="title">Util</span>\<span class="title">HttpCode</span>;</span><br><span class="line"></span><br><span class="line">$I = <span class="keyword">new</span> ApiTester($scenario);</span><br><span class="line">$I-&gt;wantTo(<span class="string">'search menus'</span>);</span><br><span class="line">$I-&gt;haveHttpHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">$I-&gt;sendGet(<span class="string">'/v1/menu'</span>, [<span class="string">'access-token'</span> =&gt; <span class="string">"HelloWorld"</span>]);</span><br><span class="line">$I-&gt;seeResponseCodeIs(HttpCode::OK);</span><br><span class="line">$I-&gt;seeResponseIsJson();</span><br><span class="line">$I-&gt;seeResponseMatchesJsonType([</span><br><span class="line">    <span class="string">'items'</span> =&gt; <span class="string">'array'</span>,</span><br><span class="line">    <span class="string">'_links'</span> =&gt; <span class="string">'array'</span>,</span><br><span class="line">    <span class="string">'_meta'</span> =&gt; [</span><br><span class="line">        <span class="string">'totalCount'</span> =&gt; <span class="string">'integer'</span>,</span><br><span class="line">        <span class="string">'pageCount'</span> =&gt; <span class="string">'integer'</span>,</span><br><span class="line">        <span class="string">'currentPage'</span> =&gt; <span class="string">'integer'</span>,</span><br><span class="line">        <span class="string">'perPage'</span> =&gt; <span class="string">'integer'</span>,</span><br><span class="line">    ],</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<p>打开文件 <code>api/tests/api/v1/CreateMenuCept.php</code>，编写代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">api</span>\<span class="title">tests</span>\<span class="title">ApiTester</span>;</span><br><span class="line"></span><br><span class="line">$I = <span class="keyword">new</span> ApiTester($scenario);</span><br><span class="line">$I-&gt;wantTo(<span class="string">'create menu'</span>);</span><br><span class="line">$I-&gt;haveHttpHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line">$I-&gt;sendPOST(<span class="string">'/v1/menu?access-token=HelloWorld'</span>, [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'歪理兔'</span>,</span><br><span class="line">    <span class="string">'parent'</span> =&gt; <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'route'</span> =&gt; <span class="string">'/go/to/very-to'</span>,</span><br><span class="line">    <span class="string">'order'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">'data'</span> =&gt; <span class="string">'hello'</span>,</span><br><span class="line">]);</span><br><span class="line">$I-&gt;seeResponseCodeIs(<span class="number">201</span>);</span><br><span class="line">$I-&gt;seeResponseIsJson();</span><br><span class="line">$I-&gt;seeResponseMatchesJsonType([</span><br><span class="line">    <span class="string">'id'</span> =&gt; <span class="string">'integer'</span>,</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'string'</span>,</span><br><span class="line">    <span class="string">'route'</span> =&gt; <span class="string">'string'</span>,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<p>接着构建测试环境，并运行所编写的 API 测试，执行命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codecept build</span><br><span class="line">codecept run</span><br></pre></td></tr></table></figure>
<h2 id="错误处理"><a class="header-anchor" href="#错误处理"></a>错误处理</h2>
<h4 id="yii-2-的-rest-框架的-http-状态代码如下："><a class="header-anchor" href="#yii-2-的-rest-框架的-http-状态代码如下："></a>Yii 2 的 REST 框架的 HTTP 状态代码如下：</h4>
<ul>
<li>200: OK。一切正常。</li>
<li>201: 响应 POST 请求时成功创建一个资源。Location header 包含的URL指向新创建的资源。</li>
<li>204: 该请求被成功处理，响应不包含正文内容 (类似 DELETE 请求)。</li>
<li>304: 资源没有被修改。可以使用缓存的版本。</li>
<li>400: 错误的请求。可能通过用户方面的多种原因引起的，例如在请求体内有无效的JSON 数据，无效的操作参数，等等。</li>
<li>401: 验证失败。</li>
<li>403: 已经经过身份验证的用户不允许访问指定的 API 末端。</li>
<li>404: 所请求的资源不存在。</li>
<li>405: 不被允许的方法。 请检查 Allow header 允许的HTTP方法。</li>
<li>415: 不支持的媒体类型。 所请求的内容类型或版本号是无效的。</li>
<li>422: 数据验证失败 (例如，响应一个 POST 请求)。 请检查响应体内详细的错误消息。</li>
<li>429: 请求过多。 由于限速请求被拒绝。</li>
<li>500: 内部服务器错误。 这可能是由于内部程序错误引起的。</li>
</ul>
<h4 id="对应的-class-使用如下"><a class="header-anchor" href="#对应的-class-使用如下"></a>对应的 class 使用如下:</h4>
<ul>
<li>BadRequestHttpException - 400</li>
<li>UnauthorizedHttpException - 401</li>
<li>ForbiddenHttpException - 403</li>
<li>NotFoundHttpException - 404</li>
<li>MethodNotAllowedHttpException - 405</li>
<li>UnsupportedMediaTypeHttpException - 415</li>
<li>UnprocessableEntityHttpException - 422</li>
<li>TooManyRequestsHttpException - 429</li>
<li>ServerErrorHttpException - 500</li>
</ul>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii2</tag>
      </tags>
  </entry>
  <entry>
    <title>「复习」使用阿里云从零开始部署 Laravel</title>
    <url>/2017/02/23/%E3%80%8C%E5%A4%8D%E4%B9%A0%E3%80%8D%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%83%A8%E7%BD%B2-Laravel/</url>
    <content><![CDATA[<h2 id="准备"><a class="header-anchor" href="#准备"></a>准备</h2>
<p>更新 Yum</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>
<p>更新 Yum 源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br><span class="line">rpm -Uvh http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>安装 Git</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure>
<p>安装 Htop</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y htop</span><br></pre></td></tr></table></figure>
<p>安装 Vim</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y vim</span><br></pre></td></tr></table></figure>
<h2 id="nginx"><a class="header-anchor" href="#nginx"></a>Nginx</h2>
<p>安装 Nginx 代码仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>
<p>安装 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure>
<p>启动 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure>
<p>开机启动 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure>
<p>Nginx 配置文件</p>
<ul>
<li>/usr/share/nginx/html 默认的代码目录</li>
<li>/etc/nginx/conf.d/default.conf 默认的配置文件</li>
</ul>
<h2 id="mariadb"><a class="header-anchor" href="#mariadb"></a>MariaDB</h2>
<p>安装 MariaDB</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y mariadb-server mariadb</span><br></pre></td></tr></table></figure>
<p>启动 MariaDB</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure>
<p>初始化 MariaDB</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p>开机启动 MariaDB</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable mariadb</span><br></pre></td></tr></table></figure>
<h2 id="php"><a class="header-anchor" href="#php"></a>PHP</h2>
<p>安装 PHP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y php71w php71w-mysql php71w-xml php71w-soap php71w-xmlrpc php71w-mbstring php71w-json php71w-gd php71w-mcrypt php71w-fpm php71w-pdo php71w-pecl-redis</span><br></pre></td></tr></table></figure>
<p>启动 PHP-FPM</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start php-fpm</span><br></pre></td></tr></table></figure>
<p>开机启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable php-fpm</span><br></pre></td></tr></table></figure>
<p>配置 PHP 关联 Nginx，编辑 Nginx 配置文件如下：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  cowcat.cc;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># note that these lines are originally from the "location /" block</span></span><br><span class="line">    <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">    <span class="attribute">index</span> index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span> /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> =<span class="number">404</span>;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span> <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">        <span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">        <span class="attribute">fastcgi_param</span> SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 <code>/usr/share/nginx/html</code> 新增文件 <code>index.php</code>，编辑代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br></pre></td></tr></table></figure>
<p>输入域名，检查 PHP 是否与 Nginx 关联起来</p>
<h2 id="redis"><a class="header-anchor" href="#redis"></a>Redis</h2>
<p>安装 Redis</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpm</span><br><span class="line">rpm -ivh epel-release-7-9.noarch.rpm</span><br><span class="line">yum install -y redis</span><br></pre></td></tr></table></figure>
<p>启动 Redis</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start redis</span><br></pre></td></tr></table></figure>
<p>开机启动 Redis</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable redis</span><br></pre></td></tr></table></figure>
<h2 id="beanstalkd"><a class="header-anchor" href="#beanstalkd"></a>Beanstalkd</h2>
<p>安装 Beanstalkd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http://cbs.centos.org/kojifiles/packages/beanstalkd/1.9/3.el7/x86_64/beanstalkd-1.9-3.el7.x86_64.rpm</span><br><span class="line">wget http://cbs.centos.org/kojifiles/packages/beanstalkd/1.9/3.el7/x86_64/beanstalkd-debuginfo-1.9-3.el7.x86_64.rpm</span><br><span class="line">rpm -ivh beanstalkd-1.9-3.el7.x86_64.rpm</span><br><span class="line">rpm -ivh beanstalkd-debuginfo-1.9-3.el7.x86_64.rpm</span><br><span class="line">yum install -y beanstalkd</span><br></pre></td></tr></table></figure>
<p>启动 Beanstalkd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start beanstalkd</span><br></pre></td></tr></table></figure>
<p>开机启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable beanstalkd</span><br></pre></td></tr></table></figure>
<h2 id="composer"><a class="header-anchor" href="#composer"></a>Composer</h2>
<p>安装 Composer</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -sS https://getcomposer.org/installer | php</span><br><span class="line">mv composer.phar /usr/local/bin/composer</span><br><span class="line">composer -v</span><br></pre></td></tr></table></figure>
<p>全局设置国内镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure>
<h2 id="node-js"><a class="header-anchor" href="#node-js"></a>Node.js</h2>
<p>安装 Node.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y gcc-c++ make</span><br><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure>
<p>安装 webpack、gulp、bower</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install bower -g</span><br><span class="line">npm install gulp -g</span><br><span class="line">npm install webpack -g</span><br></pre></td></tr></table></figure>
<h2 id="gogs"><a class="header-anchor" href="#gogs"></a>Gogs</h2>
<p>设置子域名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname git.cowcat.cc</span><br></pre></td></tr></table></figure>
<p>禁用 SELinux 相关选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sed -i /etc/selinux/config -r -e &apos;s/^SELINUX=.*/SELINUX=disabled/g&apos;</span><br><span class="line">systemctl reboot</span><br></pre></td></tr></table></figure>
<p>创建 gogs 数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS gogs CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">use gogs;</span><br><span class="line">SET default_storage_engine=INNODB;</span><br></pre></td></tr></table></figure>
<p>安装 Go</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y go</span><br></pre></td></tr></table></figure>
<p>安装 Gogs</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 下载二进制包</span><br><span class="line">wget http://7d9nal.com2.z0.glb.qiniucdn.com/0.10rc/linux_amd64.zip</span><br><span class="line"></span><br><span class="line">// 解压</span><br><span class="line">unzip linux_amd64.zip</span><br><span class="line"></span><br><span class="line">cd gogs/</span><br><span class="line">// 后台运行</span><br><span class="line">nohup ./gogs web &amp;</span><br><span class="line">tail -f nohup.out</span><br></pre></td></tr></table></figure>
<p>访问 URL 进行安装，安装 URL 是主机 IP 地址加上 3000 端口。</p>
<p>以守护进程的形式运行 Gogs：<a href="https://github.com/gogits/gogs/blob/master/scripts/init/centos/gogs" target="_blank" rel="noopener">https://github.com/gogits/gogs/blob/master/scripts/init/centos/gogs</a></p>
<h2 id="walle"><a class="header-anchor" href="#walle"></a>Walle</h2>
<p>进入 MySQL，新增数据库如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database walle default character set utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure>
<p>安装依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install ansible</span><br></pre></td></tr></table></figure>
<p>代码检出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/www/                                     # 新建目录</span><br><span class="line">git clone https://github.com/meolu/walle-web.git        # 代码检出</span><br></pre></td></tr></table></figure>
<p>连接数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd walle-web/</span><br><span class="line">vim config/local.php</span><br><span class="line"></span><br><span class="line">// 修改 PHP 数组</span><br><span class="line">&apos;db&apos; =&gt; [</span><br><span class="line">    &apos;dsn&apos;       =&gt; &apos;mysql:host=127.0.0.1;dbname=walle&apos;, # 新建数据库walle</span><br><span class="line">    &apos;username&apos;  =&gt; &apos;username&apos;,                          # 连接的用户名</span><br><span class="line">    &apos;password&apos;  =&gt; &apos;password&apos;,                          # 连接的密码</span><br><span class="line">],</span><br></pre></td></tr></table></figure>
<p>安装 vendor</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /data/www/walle-web</span><br><span class="line">composer install --prefer-dist --no-dev --optimize-autoloader -vvvv</span><br></pre></td></tr></table></figure>
<p>初始化项目</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /data/www/walle-web</span><br><span class="line">./yii walle/setup</span><br></pre></td></tr></table></figure>
<p>配置 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  walle.compony.com; # 改你的host</span><br><span class="line">    root /the/dir/of/walle-web/web; # 根目录为web</span><br><span class="line">    index index.php;</span><br><span class="line"></span><br><span class="line">    # 建议放内网</span><br><span class="line">    # allow 192.168.0.0/24;</span><br><span class="line">    # deny all;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.php$is_args$args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files $uri = 404;</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后访问你配置好的域名或服务器地址，管理员默认账号密码是 <code>admin/admin</code>，开发者默认账号密码是 <code>demo/demo</code>。</p>
<p>有些错误 walle 捕捉不到，默认操作日志在 /tmp/walle/ 下，具体可在 config/local.php 里 log.dir 配置路径，tail 着日志，部署看日志。</p>
<p>如果发现 /tmp/walle 下没有日志，很有可能是因为 CentOs 7 yum 安装的 php-fpm 默认 /tmp 目录不可写：/usr/lib/systemd/system/php-fpm.service 中的 PrivateTmp=true 禁止了向tmp目录写日志，解决方法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/php-fpm.service</span><br><span class="line">PrivateTmp=false</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl reload php-fpm</span><br></pre></td></tr></table></figure>
<h2 id="supervisor"><a class="header-anchor" href="#supervisor"></a>Supervisor</h2>
<p>安装 Supervisor</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="alias-常用进程命令"><a class="header-anchor" href="#alias-常用进程命令"></a>Alias 常用进程命令</h2>
<ul>
<li>Nginx
<ul>
<li>alias nginx.start=‘systemctl start nginx’</li>
<li>alias nginx.restart=‘systemctl restart nginx’</li>
<li>alias nginx.stop=‘systemctl stop nginx’</li>
<li>alias nginx.status=‘systemctl status nginx’</li>
</ul>
</li>
<li>Mysql
<ul>
<li>alias mysql.start=‘systemctl start mysql’</li>
<li>alias mysql.restart=‘systemctl restart mysql’</li>
<li>alias mysql.stop=‘systemctl stop mysql’</li>
<li>alias mysql.status=‘systemctl status mysql’</li>
</ul>
</li>
<li>PHP-FPM
<ul>
<li>alias php-fpm.start=‘systemctl start php-fpm’</li>
<li>alias php-fpm.restart=‘systemctl restart php-fpm’</li>
<li>alias php-fpm.stop=‘systemctl stop php-fpm’</li>
<li>alias php-fpm.status=‘systemctl status php-fpm’</li>
</ul>
</li>
<li>Redis
<ul>
<li>alias redis.start=‘systemctl start redis’</li>
<li>alias redis.restart=‘systemctl restart redis’</li>
<li>alias redis.stop=‘systemctl stop redis’</li>
<li>alias redis.status=‘systemctl status redis’</li>
</ul>
</li>
<li>Beanstalkd
<ul>
<li>alias beanstalkd.start=‘systemctl start beanstalkd’</li>
<li>alias beanstalkd.restart=‘systemctl restart beanstalkd’</li>
<li>alias beanstalkd.stop=‘systemctl stop beanstalkd’</li>
<li>alias beanstalkd.status=‘systemctl status beanstalkd’</li>
</ul>
</li>
<li>Gogs
<ul>
<li>alias gogs.start=’/etc/rc.d/init.d/gogs start’</li>
<li>alias gogs.stop=’/etc/rc.d/init.d/gogs stop’</li>
<li>alias gogs.restart=’/etc/rc.d/init.d/gogs restart’</li>
<li>alias gogs.status=’/etc/rc.d/init.d/gogs status’</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Tooling</category>
      </categories>
      <tags>
        <tag>AliCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>学习 UML（二）</title>
    <url>/2017/02/17/%E5%AD%A6%E4%B9%A0-UML%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="类图"><a class="header-anchor" href="#类图"></a>类图</h2>
<p>类图（class diagram）只是 UML 的一部分，但它们可能是最常用的，因为类图在描述面向对象关系时非常有用。</p>
<h4 id="类-抽象类-接口"><a class="header-anchor" href="#类-抽象类-接口"></a>类、抽象类、接口</h4>
<p>类是类图的主要部分。类用带有类名的方框来描述，如下图所示：</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E7%B1%BB.png" alt></p>
<p>抽象类通常使用斜体的类名，或者增加 <code>{abstract}</code> 到类名下来表示，如下图所示：</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E6%8A%BD%E8%B1%A1%E7%B1%BB.png" alt></p>
<p>接口的定义方式和类相同，但接口必须增加 <code>&lt;&lt;interface&gt;&gt;</code> 到类名上来表示，如下图所示：</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E6%8E%A5%E5%8F%A3.png" alt></p>
<h4 id="属性"><a class="header-anchor" href="#属性"></a>属性</h4>
<p>属性用于描述一个类的属性，属性直接列在类名下面的格子中。属性使用符号来表示类属性的可见性，其中 <code>+</code> 对应 <code>public</code> 、<code>-</code> 对应 <code>private</code>、<code>#</code> 对应 <code>protected</code>，如下图所示：</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E5%B1%9E%E6%80%A7.png" alt></p>
<h4 id="操作"><a class="header-anchor" href="#操作"></a>操作</h4>
<p>操作用于描述类方法，操作表示类方法可见性的办法与属性一致。类方法有参数，则包含在括号之中；类方法有返回类型，则用冒号来描述，如下图所示：</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E6%93%8D%E4%BD%9C.png" alt></p>
<h4 id="继承"><a class="header-anchor" href="#继承"></a>继承</h4>
<p>UML 一般用「泛化」来描述继承关系。这个关系用从子类到父类的一条线来标识，线的顶端有一个空心闭合箭头，如下图所示：</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E7%BB%A7%E6%89%BF.png" alt></p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<p>UML 用「实现」来描述接口和实现接口的类之间的关系。这个关系用从实现接口的类到接口的一条虚线来标识，线的顶端有一个空心闭合箭头，如下图所示：</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E5%AE%9E%E7%8E%B0.png" alt></p>
<h4 id="关联"><a class="header-anchor" href="#关联"></a>关联</h4>
<p>当一个类的属性保存了对另一个类的一个实例或多个实例的引用时，就产生了关联。类之间的关联有单向关联、双向关联和多个引用关联，如下图所示：</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E5%85%B3%E8%81%94.png" alt></p>
<h4 id="聚合和组合"><a class="header-anchor" href="#聚合和组合"></a>聚合和组合</h4>
<p>聚合和组合都描述了一个类长期持有其他类的一个或多个实例的情况。通过聚合或组合，被引用的对象实例成为引用对象的一部分。</p>
<p>聚合的情况下，被包含对象是容器的一个核心部分，但是它们也可以同时被其他对象所包含。聚合关系用一条空心菱形开头的线来说明。</p>
<p>组合则是一个更强的关系。在组合中，被包含对象只能被它的容器所引用。当容器被删除时，它也应该被删除。组合关系可以用类聚合关系的方式描述，但是菱形必须是实心的。</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E8%81%9A%E5%90%88.png" alt><br>
<img src="http://olnw31eni.bkt.clouddn.com/uml%E7%BB%84%E5%90%88.png" alt></p>
<h4 id="描述使用"><a class="header-anchor" href="#描述使用"></a>描述使用</h4>
<p>一个对象使用另一个对象的关系在 UML 中被描述为一个依赖关系。一个被使用的类可以作为类方法的参数传递或者作为方法调用的结果得到。</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E6%8F%8F%E8%BF%B0%E4%BD%BF%E7%94%A8.png" alt></p>
<h4 id="使用注解"><a class="header-anchor" href="#使用注解"></a>使用注解</h4>
<p>类图可以捕捉到系统的结构，但类图并不能解释类处理任务的过程，可以通过使用注解来补充说明。注解由一个折角的方框组成。它通常包含伪代码片段。注解使类图变得易于理解。</p>
<p><img src="http://olnw31eni.bkt.clouddn.com/uml%E6%B3%A8%E9%87%8A.png" alt></p>
]]></content>
      <categories>
        <category>UML</category>
      </categories>
      <tags>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Yii 2 中使用 CodeCeption</title>
    <url>/2017/02/14/%E5%9C%A8-Yii-2-%E4%B8%AD%E4%BD%BF%E7%94%A8-CodeCeption/</url>
    <content><![CDATA[<h2 id="安装-yii2"><a class="header-anchor" href="#安装-yii2"></a>安装 Yii2</h2>
<p>使用 Composer 安装 Yii 2 高级模板项目</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo composer global require "fxp/composer-asset-plugin:^1.2.0"</span><br><span class="line">sudo composer create-project --prefer-dist yiisoft/yii2-app-advanced yii-application</span><br><span class="line">cd yii-application</span><br><span class="line">sudo composer install</span><br></pre></td></tr></table></figure>
<p>配置 Apache 服务器</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> frontend.dev</span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/path/to/yii-application/frontend/web/"</span></span><br><span class="line"></span><br><span class="line">   <span class="section">&lt;Directory "/path/to/yii-application/frontend/web/"&gt;</span></span><br><span class="line">       <span class="comment"># use mod_rewrite for pretty URL support</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteEngine</span></span> <span class="literal">on</span></span><br><span class="line">       <span class="comment"># If a directory or a file exists, use the request directly</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</span><br><span class="line">       <span class="comment"># Otherwise forward the request to index.php</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteRule</span></span> . index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># use index.php as index file</span></span><br><span class="line">       <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># ...other settings...</span></span><br><span class="line">       <span class="comment"># Apache 2.4</span></span><br><span class="line">       <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line"></span><br><span class="line">       <span class="comment">## Apache 2.2</span></span><br><span class="line">       <span class="comment"># Order allow,deny</span></span><br><span class="line">       <span class="comment"># Allow from all</span></span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *:80&gt;</span></span><br><span class="line">   <span class="attribute"><span class="nomarkup">ServerName</span></span> backend.dev</span><br><span class="line">   <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/path/to/yii-application/backend/web/"</span></span><br><span class="line"></span><br><span class="line">   <span class="section">&lt;Directory "/path/to/yii-application/backend/web/"&gt;</span></span><br><span class="line">       <span class="comment"># use mod_rewrite for pretty URL support</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteEngine</span></span> <span class="literal">on</span></span><br><span class="line">       <span class="comment"># If a directory or a file exists, use the request directly</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</span><br><span class="line">       <span class="comment"># Otherwise forward the request to index.php</span></span><br><span class="line">       <span class="attribute"><span class="nomarkup">RewriteRule</span></span> . index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># use index.php as index file</span></span><br><span class="line">       <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line"></span><br><span class="line">       <span class="comment"># ...other settings...</span></span><br><span class="line">       <span class="comment"># Apache 2.4</span></span><br><span class="line">       <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line"></span><br><span class="line">       <span class="comment">## Apache 2.2</span></span><br><span class="line">       <span class="comment"># Order allow,deny</span></span><br><span class="line">       <span class="comment"># Allow from all</span></span><br><span class="line">   <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="安装-codeception"><a class="header-anchor" href="#安装-codeception"></a>安装 Codeception</h2>
<p>在项目根目录执行以下命令安装 codeception 扩展</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo composer global require "codeception/codeception=*"</span><br><span class="line">sudo composer global require "codeception/specify=*"</span><br><span class="line">sudo composer global require "codeception/verify=*"</span><br><span class="line">sudo composer require --dev "yiisoft/yii2-faker=*"</span><br></pre></td></tr></table></figure>
<p>将 codeception 命令配置进环境变量中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim .zshrc</span><br><span class="line"></span><br><span class="line">// 在文件 .zshrc 中添加以下代码，且保存退出</span><br><span class="line">alias codecept="/Users/LuisEdware/.composer/vendor/codeception/codeception/codecept"</span><br><span class="line"></span><br><span class="line">source .zshrc</span><br></pre></td></tr></table></figure>
<p>在项目中使用 codeception</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd frontend/</span><br><span class="line">sudo chmod -R 777 tests</span><br><span class="line">codecept build</span><br><span class="line">codecept run</span><br></pre></td></tr></table></figure>
<h2 id="单元测试-unit-test"><a class="header-anchor" href="#单元测试-unit-test"></a>单元测试（Unit Test）</h2>
<p>单元测试是针对程序模块来进行正确性检验的测试工作，可以通过单元测试来确认深藏在代码里面的某些功能仍然可用, 单元测试能消除程序单元的不可靠性。</p>
<p>Codeception 的单元测试功能是基于 PHPUnit 之上的, 你可以照样写 PHPUnit 的测试代码, Codeception 一样能运行。</p>
<h4 id="创建单元测试"><a class="header-anchor" href="#创建单元测试"></a>创建单元测试</h4>
<p>使用 Codeception 的生成器来执行以下命令生成单元测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd frontend</span><br><span class="line">codecept generate:test unit Example</span><br></pre></td></tr></table></figure>
<p>上述命令会在 tests/unit 目录创建一个 ExampleTest 文件，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">frontend</span>\<span class="title">tests</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleTest</span> <span class="keyword">extends</span> \<span class="title">Codeception</span>\<span class="title">Test</span>\<span class="title">Unit</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> \frontend\tests\UnitTester</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> $tester;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_before</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_after</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPushAndPop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $stack = [];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEquals(<span class="number">0</span>, count($stack));</span><br><span class="line"></span><br><span class="line">        array_push($stack, <span class="string">'foo'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEquals(<span class="string">'foo'</span>, $stack[count($stack)<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEquals(<span class="number">1</span>, count($stack));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEquals(<span class="string">'foo'</span>, array_pop($stack));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEquals(<span class="number">0</span>, count($stack));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="测试依赖"><a class="header-anchor" href="#测试依赖"></a>测试依赖</h6>
<p>通过 <code>@depends</code> 让测试方法之间进行关联依赖</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">frontend</span>\<span class="title">tests</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleTest</span> <span class="keyword">extends</span> \<span class="title">Codeception</span>\<span class="title">Test</span>\<span class="title">Unit</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testEmpty</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $stack = [];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEmpty($stack);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $stack;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@depends</span> testEmpty</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPush</span><span class="params">(array $stack)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        array_push($stack, <span class="string">'foo'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEquals(<span class="string">'foo'</span>, $stack[count($stack)<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertNotEmpty($stack);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $stack;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@depends</span> testPush</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPop</span><span class="params">(array $stack)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEquals(<span class="string">'foo'</span>, array_pop($stack));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEmpty($stack);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="数据提供商"><a class="header-anchor" href="#数据提供商"></a>数据提供商</h6>
<p>通过 <code>@dataProvider</code> 让测试方法迭代运行数据提供者方法的数据</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">frontend</span>\<span class="title">tests</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataTest</span> <span class="keyword">extends</span> \<span class="title">Codeception</span>\<span class="title">Test</span>\<span class="title">Unit</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> \frontend\tests\UnitTester</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> $tester;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_before</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_after</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@dataProvider</span> additionProvider</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testAdd</span><span class="params">($a, $b, $expected)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $a;</span><br><span class="line">        <span class="keyword">echo</span> $b;</span><br><span class="line">        <span class="keyword">echo</span> $expected;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assertEquals($expected, $a + $b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">additionProvider</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">            [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">            [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">            [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="抛出异常"><a class="header-anchor" href="#抛出异常"></a>抛出异常</h6>
<p>通过 <code>@expectedException</code> 或方法 <code>$this-&gt;expectException()</code> 在测试实例中抛出异常</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">frontend</span>\<span class="title">tests</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExceptionTest</span> <span class="keyword">extends</span> \<span class="title">Codeception</span>\<span class="title">Test</span>\<span class="title">Unit</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testException</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expectException(InvalidArgumentException::class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@expectedException</span> InvalidArgumentException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testExceptionTow</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="断点输出"><a class="header-anchor" href="#断点输出"></a>断点输出</h6>
<p>通过方法 <code>$this-&gt;expectOutputString()</code> 生成一个预期的输出。当实际输出和预期输出不一致时，则测试不通过。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPUnit</span>\<span class="title">Framework</span>\<span class="title">TestCase</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OutputTest</span> <span class="keyword">extends</span> <span class="title">TestCase</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testExpectFooActualFoo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expectOutputString(<span class="string">'foo'</span>);</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'foo'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testExpectBarActualBaz</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expectOutputString(<span class="string">'bar'</span>);</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'baz'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Codeception 的更多 Unit Tests 信息请参考链接：</p>
<ul>
<li><a href="https://github.com/Codeception/Codeception/blob/2.0/docs/06-UnitTests.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/06-UnitTests.md</a></li>
<li><a href="https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Yii2.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Yii2.md</a></li>
</ul>
<h2 id="创建接口测试-restful-api-test"><a class="header-anchor" href="#创建接口测试-restful-api-test"></a>创建接口测试（RESTFUL API TEST）</h2>
<p>创建 RESTFUL API 测试配置文件，新增文件 <code>api.suite.yml</code> 和文件夹 <code>api</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">codecept generate:suite api</span><br></pre></td></tr></table></figure>
<p>修改配置文件 <code>api.suite.yml</code> 如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class_name: ApiTester</span><br><span class="line">modules:</span><br><span class="line">    enabled:</span><br><span class="line">        - REST:</span><br><span class="line">            url: www.frontend.dev/index.php?r=</span><br><span class="line">            depends: Yii2</span><br><span class="line">        - \ApiBundle\Helper\Api</span><br><span class="line">    config:</span><br><span class="line">        - Yii2</span><br></pre></td></tr></table></figure>
<p>创建 RESTFUL API 测试文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codecept generate:cept api CreateUser</span><br></pre></td></tr></table></figure>
<p>修改生成文件代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">frontend</span>\<span class="title">tests</span>\<span class="title">ApiTester</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送 HTTP GET 请求</span></span><br><span class="line">$I = <span class="keyword">new</span> ApiTester($scenario);</span><br><span class="line">$I-&gt;wantTo(<span class="string">'I want to test RESTFUL API'</span>);</span><br><span class="line">$I-&gt;sendGET(<span class="string">'/api/v1/users/create'</span>);</span><br><span class="line">$I-&gt;seeResponseCodeIs(\Codeception\Util\HttpCode::OK);</span><br><span class="line">$I-&gt;seeResponseIsJson();</span><br><span class="line">$I-&gt;seeResponseContains(<span class="string">'&#123;"result":"ok"&#125;'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送 HTTP POST 请求</span></span><br><span class="line">$I-&gt;sendPOST(<span class="string">'/users'</span>, [<span class="string">'name'</span> =&gt; <span class="string">'davert'</span>, <span class="string">'email'</span> =&gt; <span class="string">'davert@codeception.com'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证 JSON 响应数据类型</span></span><br><span class="line">$I-&gt;seeResponseMatchesJsonType([</span><br><span class="line">    <span class="string">'id'</span> =&gt; <span class="string">'integer'</span>,</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'string'</span>,</span><br><span class="line">    <span class="string">'email'</span> =&gt; <span class="string">'string:email'</span>,</span><br><span class="line">    <span class="string">'homepage'</span> =&gt; <span class="string">'string:url|null'</span>,</span><br><span class="line">    <span class="string">'created_at'</span> =&gt; <span class="string">'string:date'</span>,</span><br><span class="line">    <span class="string">'is_active'</span> =&gt; <span class="string">'boolean'</span></span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<p>常用的 REST API 如下：</p>
<ul>
<li>wantTo()：配置测试标题</li>
<li>sendGET()：发送 HTTP GET 请求</li>
<li>sendPUT()：发送 HTTP PUT 请求</li>
<li>sendPOST()：发送 HTTP POST 请求</li>
<li>sendDELETE()：发送 HTTP DELETE 请求</li>
<li>haveHttpHeader()：设置 HTTP 请求头</li>
<li>seeHttpHeader()：检查 HTTP 请求头</li>
<li>seeResponseCodeIs()：检查响应状态码</li>
<li>seeResponseContains()：检查响应内容</li>
<li>seeResponseContainsJson()：检查响应数据类型是否为 JSON 和核对响应内容</li>
<li>seeResponseIsJson()：检查响应是否返回 JSON 数据</li>
<li>seeResponseJsonMatchesJsonPath()：使用 JSON 数据去检查响应内容</li>
<li>seeResponseMatchesJsonType()：检查响应数据的数据类型</li>
</ul>
<p>Codeception 的更多 RESTFUL API 信息请参考链接：</p>
<ul>
<li><a href="https://github.com/Codeception/Codeception/blob/2.0/docs/modules/REST.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/modules/REST.md</a></li>
<li><a href="https://github.com/Codeception/Codeception/blob/2.0/docs/10-WebServices.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/10-WebServices.md</a></li>
</ul>
<h2 id="数据库测试-db-test"><a class="header-anchor" href="#数据库测试-db-test"></a>数据库测试（DB TEST）</h2>
<p>常用的 DB TEST API 如下：</p>
<ul>
<li>seeInDatabase()</li>
<li>dontSeeInDatabase()</li>
<li>haveInDatabase()</li>
<li>grabFromDatabase()</li>
</ul>
<p>示例代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 检查 User 表是否存在 'username' 为 'Davert', 'email' 为 'davert@mail.com' 的数据，存在则报错</span></span><br><span class="line">$I-&gt;dontSeeInDatabase(<span class="string">'user'</span>, [<span class="string">'username'</span> =&gt; <span class="string">'Davert'</span>, <span class="string">'email'</span> =&gt; <span class="string">'davert@mail.com'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查 User 表是否存在 'username' 为 'okirlin', 'email' 为 'brady.renner@rutherford.com' 的数据，不存在则报错</span></span><br><span class="line">$I-&gt;seeInDatabase(<span class="string">'user'</span>, [<span class="string">'username'</span> =&gt; <span class="string">'okirlin'</span>, <span class="string">'email'</span> =&gt; <span class="string">'brady.renner@rutherford.com'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查 User 表是否能够新增以下数据，无法新增则报错</span></span><br><span class="line">$I-&gt;haveInDatabase(<span class="string">'user'</span>,</span><br><span class="line">  [</span><br><span class="line">    <span class="string">'username'</span> =&gt; <span class="string">'miles'</span>,</span><br><span class="line">    <span class="string">'email'</span> =&gt; <span class="string">'miles@davis.com'</span>,</span><br><span class="line">    <span class="string">'auth_key'</span> =&gt; <span class="string">'EdKfXrx88weFMV0vIxuTMWKgfK2tS321'</span>,</span><br><span class="line">    <span class="string">'password_hash'</span> =&gt; <span class="string">'$2y$13$g5nv41Px7VBqhS3hVsVN2.MKfgT3jFdkXEsMC4rQJLfaMa7VaJqL2'</span>,</span><br><span class="line">    <span class="string">'password_reset_token'</span> =&gt; <span class="string">'4BSNyiZNAuxjs5Mty990c47sVrgllIi_1487317115'</span>,</span><br><span class="line">    <span class="string">'email'</span> =&gt; <span class="string">'506510463@qq.com'</span>,</span><br><span class="line">    <span class="string">'role'</span> =&gt; <span class="number">10</span>,</span><br><span class="line">    <span class="string">'status'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">'created_at'</span> =&gt; <span class="number">1391885313</span>,</span><br><span class="line">    <span class="string">'updated_at'</span> =&gt; <span class="number">1391885313</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照正序获取一条 username = miles 的数据的 email 字段值</span></span><br><span class="line">$mail = $I-&gt;grabFromDatabase(<span class="string">'user'</span>, <span class="string">'email'</span>, <span class="keyword">array</span>(<span class="string">'username'</span> =&gt; <span class="string">'troy.becker'</span>));</span><br><span class="line">var_dump($mail);<span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure>
<p>Codeception 的更多 DB TEST API 信息请参考链接：</p>
<ul>
<li>DB：<a href="https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Db.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Db.md</a></li>
<li>DBH：<a href="https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Dbh.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Dbh.md</a></li>
<li>Doctrine1：<a href="https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Doctrine1.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Doctrine1.md</a></li>
<li>Doctrine2：<a href="https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Doctrine2.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/modules/Doctrine2.md</a></li>
<li>Working with Data：<a href="https://github.com/Codeception/Codeception/blob/2.0/docs/09-Data.md" target="_blank" rel="noopener">https://github.com/Codeception/Codeception/blob/2.0/docs/09-Data.md</a></li>
</ul>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii</tag>
      </tags>
  </entry>
  <entry>
    <title>LuisEdware 版 PHP 编程规范（遵循 PSR-1/PSR-2）</title>
    <url>/2017/02/11/LuisEdware-%E7%89%88-PHP-%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83%EF%BC%88%E9%81%B5%E5%BE%AA-PSR-1-PSR-2%EF%BC%89/</url>
    <content><![CDATA[<h2 id="八荣八耻"><a class="header-anchor" href="#八荣八耻"></a>八荣八耻</h2>
<ul>
<li>以「<b>动手实践</b>」为荣, 以「<b>只看不练</b>」为耻;</li>
<li>以「<b>打印日志</b>」为荣, 以「<b>单步跟踪</b>」为耻;</li>
<li>以「<b>空格缩进</b>」为荣, 以「<b>制表缩进</b>」为耻;</li>
<li>以「<b>单元测试</b>」为荣, 以「<b>人工测试</b>」为耻;</li>
<li>以「<b>模块复用</b>」为荣, 以「<b>复制粘贴</b>」为耻;</li>
<li>以「<b>多态应用</b>」为荣, 以「<b>分支判断</b>」为耻;</li>
<li>以「<b>优雅高效</b>」为荣, 以「<b>冗余拖沓</b>」为耻;</li>
<li>以「<b>总结分享</b>」为荣, 以「<b>跪求其解</b>」为耻。</li>
</ul>
<h2 id="代码风格"><a class="header-anchor" href="#代码风格"></a>代码风格</h2>
<p>编程开发时，需要遵循 PSR 规范如下：</p>
<ul>
<li>PSR 2（编码风格规范）：<a href="https://laravel-china.org/topics/2079" target="_blank" rel="noopener">https://laravel-china.org/topics/2079</a></li>
<li>PSR 4（自动加载规范）：<a href="https://laravel-china.org/topics/2081" target="_blank" rel="noopener">https://laravel-china.org/topics/2081</a></li>
</ul>
<h2 id="目录与文件"><a class="header-anchor" href="#目录与文件"></a>目录与文件</h2>
<ul>
<li>目录使用小写加下划线；</li>
<li>类库、函数文件统一以 <code>.php</code> 为后缀；</li>
<li>类的文件名均以命名空间定义，并且命名空间的路径和类库文件所在路径一致；</li>
<li>类文件采用驼峰法命名（首字母大写），其它文件采用小写+下划线命名；</li>
<li>类名和类文件名保持一致，统一采用首字母大写的驼峰法命名；</li>
</ul>
<h2 id="函数-成员属性-成员方法"><a class="header-anchor" href="#函数-成员属性-成员方法"></a>函数、成员属性、成员方法</h2>
<ul>
<li>函数的命名使用小写字母和下划线的方式</li>
<li>成员属性的命名使用首字母小写的驼峰法</li>
<li>成员方法的命名使用首字母小写的驼峰法</li>
</ul>
<h2 id="数据表和字段"><a class="header-anchor" href="#数据表和字段"></a>数据表和字段</h2>
<ul>
<li>数据表采用小写加下划线方式命名</li>
<li>字段采用首字母小写的驼峰法命名</li>
</ul>
<h2 id="常量和配置"><a class="header-anchor" href="#常量和配置"></a>常量和配置</h2>
<ul>
<li>常量以大写字母和下划线命名</li>
<li>配置以小写字母和下划线命名</li>
</ul>
<h2 id="示例代码"><a class="header-anchor" href="#示例代码"></a>示例代码</h2>
<p>函数声明示例如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( ! function_exists(<span class="string">'array_random'</span>))&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机返回数组中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  $array</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">array_random</span><span class="params">($array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $array[array_rand($array)];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>类文件声明示例如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 符合 RSR-1,RSR-2 的编程实例</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>      2017/02/17 18:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>    七月十五九月初七</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@License</span>   广东安乐窝网络科技有限公司</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Copyright</span> Copyright (c) 2017 AnLeWo Ltd</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Standard</span>; <span class="comment">// 顶部命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;<span class="comment">//  空一行 use 引入类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类描述</span></span><br><span class="line"><span class="comment"> * 类名必须大写开头驼峰.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleClass</span> // </span>&#123;&#125;必须换行</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 常量描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">const</span> THIS_IS_A_CONST = <span class="string">''</span>; <span class="comment">// 常量全部大写下划线分割</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $nameTest = <span class="string">''</span>; <span class="comment">// 属性名称建议开头小写驼峰,成员属性必须添加public（不能省略）， private, protected修饰符</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 属性描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> $_privateNameTest = <span class="string">''</span>; <span class="comment">// 类私有成员属性，【个人建议】下划线小写开头驼峰</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造函数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 构造函数描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $value 形参名称/描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($value = <span class="string">''</span>)</span>// 成员方法必须添加<span class="title">public</span>（不能省略）， <span class="title">private</span>, <span class="title">protected</span>修饰符</span></span><br><span class="line"><span class="function">    </span>&#123;<span class="comment">// &#123;&#125;必须换行</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;nameTest = <span class="keyword">new</span> TestClass();</span><br><span class="line">        <span class="comment">// 链式操作</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;nameTest-&gt;functionOne()</span><br><span class="line">            -&gt;functionTwo()</span><br><span class="line">            -&gt;functionThree();</span><br><span class="line">        <span class="comment">// 一段代码逻辑执行完毕 换行</span></span><br><span class="line">        <span class="comment">// code...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成员方法名称</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 成员方法描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $value 形参名称/描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值类型 返回值描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">staticFunction</span><span class="params">($value = <span class="string">''</span>)</span>// <span class="title">static</span>位于修饰符之后</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// code...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成员方法名称</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 成员方法描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $value 形参名称/描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值类型 返回值描述</span></span><br><span class="line"><span class="comment">     * 返回值类型：string，array，object，mixed（多种，不确定的），void（无返回值）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testFunction</span><span class="params">($value = <span class="string">''</span>)</span>// 成员方法必须小写开头驼峰</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// code...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成员方法名称</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 成员方法描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $value 形参名称/描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值类型 返回值描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">abstractFunction</span><span class="params">($value = <span class="string">''</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成员方法名称.</span></span><br><span class="line"><span class="comment">     * 成员方法描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $value 形参名称/描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值类型 返回值描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">finalFunction</span><span class="params">($value = <span class="string">''</span>)</span>// <span class="title">final</span>位于修饰符之前</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// code...</span></span><br><span class="line">    &#125; <span class="comment">// abstract位于修饰符之前</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成员方法名称</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 成员方法描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $paramOne   形参名称/描述</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $paramTwo   形参名称/描述</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $paramThree 形参名称/描述</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $paramFour  形参名称/描述</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $paramFive  形参名称/描述</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $paramSix   形参名称/描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值类型 返回值描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">tooLangFunction</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        $paramOne = <span class="string">''</span>, // 变量命名可小写开头驼峰或者下划线命名</span></span></span><br><span class="line"><span class="function"><span class="params">        $paramTwo = <span class="string">''</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $paramThree = <span class="string">''</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $paramFour = <span class="string">''</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $paramFive = <span class="string">''</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        $paramSix = <span class="string">''</span></span></span></span><br><span class="line"><span class="function"><span class="params">    )</span>// 参数过多换行</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($paramOne === $paramTwo) &#123;<span class="comment">// 控制结构=&gt;后加空格,同&#123;一行，（右边和)左边不加空格</span></span><br><span class="line">            <span class="comment">// code...</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> ($paramThree) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'three'</span>:</span><br><span class="line">                <span class="comment">// code...</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="comment">// code...</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="comment">// code...</span></span><br><span class="line">        &#125; <span class="keyword">while</span> ($paramFour &lt;= <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ($paramFive &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="comment">// code...</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $paramSix; $i++) &#123;</span><br><span class="line">            <span class="comment">// code...</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成员方法名称</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 成员方法描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $value 形参名称/描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值类型 返回值描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_privateTestFunction</span><span class="params">($value = <span class="string">''</span>)</span>// 私有成员方法【个人建议】下划线小写开头驼峰</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// code...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP Codebook(九)</title>
    <url>/2017/01/24/PHP-Codebook-%E4%B9%9D/</url>
    <content><![CDATA[<h2 id="9-1-处理表单输入"><a class="header-anchor" href="#9-1-处理表单输入"></a>9.1 处理表单输入</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望使用一个 HTML 页面提交表单，然后在同一个页面中处理这个表单中输入的数据</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<p>使用 $_SERVER[‘REQUEST_METHOD’] 变量来确定请求是用 get 还是 post 方法提交的。</p>
<h2 id="9-2-验证表单输入：必填域"><a class="header-anchor" href="#9-2-验证表单输入：必填域"></a>9.2 验证表单输入：必填域</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望确保必须为一个表单元素提供一个值。例如，希望保证一个文本框不为空</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!(filter_has_var(INPUT_GET, <span class="string">'flavor'</span>)</span><br><span class="line">    &amp;&amp; (strlen(filter_input(INPUT_GET, <span class="string">'flavor'</span>))))</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"You must enter your favorite ice cream flavor.\n"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> $_GET[<span class="string">'flavor'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((filter_has_var(INPUT_GET, <span class="string">'color'</span>))</span><br><span class="line">    &amp;&amp; (strlen(filter_input(INPUT_GET, <span class="string">'color'</span>, FILTER_SANITIZE_STRING)) &lt;= <span class="number">5</span>)</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Color must be more than 5 characters."</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(filter_has_var(INPUT_GET, <span class="string">'choices'</span>))</span><br><span class="line">    &amp;&amp; filter_input(INPUT_GET, <span class="string">'choices'</span>, FILTER_DEFAULT, FILTER_REQUIRE_ARRAY)</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"You must select some choices.\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="9-3-验证表单输入：数字"><a class="header-anchor" href="#9-3-验证表单输入：数字"></a>9.3 验证表单输入：数字</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望确保在一个表单输入框中输入了一个数。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$age = filter_input(INPUT_GET, <span class="string">'age'</span>, FILTER_VALIDATE_INT);</span><br><span class="line"><span class="keyword">if</span> ($age === <span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Submitted age is invalid."</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$price = filter_input(INPUT_GET, <span class="string">'price'</span>, FILTER_VALIDATE_FLOAT);</span><br><span class="line"><span class="keyword">if</span> ($price === <span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Submitted price is invalid."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="9-4-验证表单输入：email-地址"><a class="header-anchor" href="#9-4-验证表单输入：email-地址"></a>9.4 验证表单输入：email 地址</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望知道用户提供的一个 email 地址是否合法</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$email = filter_input(INPUT_GET, <span class="string">'email'</span>, FILTER_VALIDATE_EMAIL);</span><br><span class="line"><span class="keyword">if</span> ($email === <span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Submitted email is invalid."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="9-16-处理变量名中包含点号的远程变量"><a class="header-anchor" href="#9-16-处理变量名中包含点号的远程变量"></a>9.16 处理变量名中包含点号的远程变量</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望处理一个变量，变量名中有一个点号，不过提交表单时，无法在 $_GET 或者 $_POST 中找到这个变量。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<p>将变量名中的点号替换为一个下划线。</p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP Codebook(六)</title>
    <url>/2017/01/24/PHP-Codebook-%E5%85%AD/</url>
    <content><![CDATA[<h2 id="6-4-使用命名参数"><a class="header-anchor" href="#6-4-使用命名参数"></a>6.4 使用命名参数</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望按名为函数指定参数，而不是通过函数调用时的位置来指定。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">image1</span><span class="params">($params)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($params[<span class="string">'src'</span>])) &#123;</span><br><span class="line">        $image[<span class="string">'src'</span>] = <span class="string">'cow.png'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($params[<span class="string">'alt'</span>])) &#123;</span><br><span class="line">        $image[<span class="string">'alt'</span>] = <span class="string">'Milk Factory'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($params[<span class="string">'height'</span>])) &#123;</span><br><span class="line">        $image[<span class="string">'height'</span>] = <span class="string">'100'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($params[<span class="string">'width'</span>])) &#123;</span><br><span class="line">        $image[<span class="string">'width'</span>] = <span class="string">'50'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;img src="'</span> . $image[<span class="string">'src'</span>] . <span class="string">'" alt="'</span> . $image[<span class="string">'alt'</span>] . <span class="string">'" width="'</span> . $image[<span class="string">'width'</span>] . <span class="string">'" height="'</span> . $image[<span class="string">'height'</span>] . <span class="string">'"&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">image2</span><span class="params">($params)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $defaults = [</span><br><span class="line">        <span class="string">'src'</span> =&gt; <span class="string">'cow.png'</span>,</span><br><span class="line">        <span class="string">'alt'</span> =&gt; <span class="string">'milk factory'</span>,</span><br><span class="line">        <span class="string">'width'</span> =&gt; <span class="number">100</span>,</span><br><span class="line">        <span class="string">'height'</span> =&gt; <span class="number">50</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $params = array_merge($defaults, $params);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;img src="'</span> . $image[<span class="string">'src'</span>] . <span class="string">'" alt="'</span> . $image[<span class="string">'alt'</span>] . <span class="string">'" width="'</span> . $image[<span class="string">'width'</span>] . <span class="string">'" height="'</span> . $image[<span class="string">'height'</span>] . <span class="string">'"&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="6-6-创建参数个数可变的函数"><a class="header-anchor" href="#6-6-创建参数个数可变的函数"></a>6.6 创建参数个数可变的函数</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望定义一个参数个数可变的函数</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mean</span><span class="params">($numbers)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    $size = count($numbers);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $size; $i++) &#123;</span><br><span class="line">        $sum += $numbers[$i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $average = $sum / $size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $average;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> mean([<span class="number">96</span>, <span class="number">93</span>, <span class="number">98</span>, <span class="number">98</span>]) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mean1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    $size = func_num_args();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $size; $i++) &#123;</span><br><span class="line">        $sum += func_get_arg($i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $average = $sum / $size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $average;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> mean1(<span class="number">96</span>, <span class="number">93</span>, <span class="number">98</span>, <span class="number">98</span>) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mean2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    $size = func_num_args();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (func_get_args() <span class="keyword">as</span> $arg) &#123;</span><br><span class="line">        $sum += $arg;</span><br><span class="line">    &#125;</span><br><span class="line">    $average = $sum / $size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $average;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> mean2(<span class="number">96</span>, <span class="number">93</span>, <span class="number">98</span>, <span class="number">98</span>) . <span class="string">"\n"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="6-7-按引用返回值"><a class="header-anchor" href="#6-7-按引用返回值"></a>6.7 按引用返回值</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望按引用返回一个值，而不是按值返回。这样就无需为变量建立一个重复的副本。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">array_find_value</span><span class="params">($needle, &amp;$haystack)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($haystack <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($needle == $value) &#123;</span><br><span class="line">            <span class="keyword">return</span> $haystack[$key];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$names = [<span class="string">'Ann Eason'</span>, <span class="string">'Luis Edware'</span>, <span class="string">'Ivan Tomic'</span>, <span class="string">'RouniFul'</span>];</span><br><span class="line"></span><br><span class="line">$prince =&amp; array_find_value(<span class="string">'Ann Eason'</span>, $names);</span><br><span class="line">$prince = <span class="string">"梁非凡"</span>;</span><br><span class="line">print_r($names);</span><br></pre></td></tr></table></figure>
<h2 id="6-8-返回多个值"><a class="header-anchor" href="#6-8-返回多个值"></a>6.8 返回多个值</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望从函数返回多个值。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">array_stats</span><span class="params">($values)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $min = min($values);</span><br><span class="line">    $max = max($values);</span><br><span class="line">    $mean = array_sum($values) / count($values);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [$min, $max, $mean];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$values = range(<span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">list</span>($min, $max, $mean) = array_stats($values);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> sprintf(<span class="string">"min is %d,max is %d,mean is %d"</span>, $min, $max, $mean);</span><br></pre></td></tr></table></figure>
<h2 id="6-10-返回失败"><a class="header-anchor" href="#6-10-返回失败"></a>6.10 返回失败</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望从函数中指示失败</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lookup</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($name)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$name = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">false</span> !== lookup($name)) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6-11-调用可变函数"><a class="header-anchor" href="#6-11-调用可变函数"></a>6.11  调用可变函数</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望根据一个变量的值来调用不同的函数</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_file</span><span class="params">($fileName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> file_get_contents($fileName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$function = <span class="string">'get_file'</span>;</span><br><span class="line">$fileName = <span class="string">'graphic.png'</span>;</span><br><span class="line"></span><br><span class="line">call_user_func($function, $fileName);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP Codebook(四)</title>
    <url>/2017/01/22/PHP-Codebook-%E5%9B%9B/</url>
    <content><![CDATA[<h2 id="4-1-指定并非从元素-0-开始的数组"><a class="header-anchor" href="#4-1-指定并非从元素-0-开始的数组"></a>4.1 指定并非从元素 0 开始的数组</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望一步为一个数组赋多个元素，不过不希望第一个元素的索引为0</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$presidents = [<span class="number">1</span> =&gt; <span class="string">'Washington'</span>, <span class="string">'Adams'</span>, <span class="string">'Lincoln'</span>, <span class="string">'Jefferson'</span>];</span><br><span class="line">var_dump($presidents);</span><br><span class="line"></span><br><span class="line">$fruits[<span class="number">1</span>] = <span class="string">'apple'</span>;</span><br><span class="line">$fruits[] = <span class="string">'banana'</span>;</span><br><span class="line">var_dump($fruits);</span><br></pre></td></tr></table></figure>
<h2 id="4-3-数组初始化为一个整数范围"><a class="header-anchor" href="#4-3-数组初始化为一个整数范围"></a>4.3 数组初始化为一个整数范围</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望将一系列连续的整数赋至一个数组</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cards = range(<span class="number">1</span>,<span class="number">52</span>);</span><br></pre></td></tr></table></figure>
<h2 id="4-4-迭代处理数组"><a class="header-anchor" href="#4-4-迭代处理数组"></a>4.4 迭代处理数组</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$array = range(<span class="number">0</span>, <span class="number">12</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $item) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $item . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $value . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($key = <span class="number">0</span>, $size = count($array); $key &lt; $size; $key++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $array[$key] . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将内部指针重置为数组起始位置</span></span><br><span class="line">reset($array);</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">list</span>($key, $value) = each($array)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $value . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array_map(<span class="function"><span class="keyword">function</span><span class="params">($value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $value;</span><br><span class="line">&#125;, $array);</span><br></pre></td></tr></table></figure>
<h2 id="4-5-从数组删除元素"><a class="header-anchor" href="#4-5-从数组删除元素"></a>4.5 从数组删除元素</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望从一个数组删除一个或多个数组</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$array = range(<span class="number">0</span>, <span class="number">12</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除元素</span></span><br><span class="line"><span class="keyword">unset</span>($array[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除多个连续的元素,array_splice 会自动对数组重新建立索引，避免留出空位。</span></span><br><span class="line">array_splice($array, <span class="number">1</span>, <span class="number">9</span>);</span><br><span class="line">var_dump($array);</span><br></pre></td></tr></table></figure>
<h2 id="4-6-改变数组大小"><a class="header-anchor" href="#4-6-改变数组大小"></a>4.6 改变数组大小</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望改变一个数组的大小，使它大于或小于目前的大小</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// array_pad() 第一个</span></span><br><span class="line">$array = [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'cocount'</span>];</span><br><span class="line">$array = array_pad($array, <span class="number">4</span>, <span class="string">'dates'</span>);</span><br><span class="line">print_r($array);</span><br><span class="line"></span><br><span class="line">$array = array_pad($array, <span class="number">-10</span>, <span class="string">'zucchini'</span>);</span><br><span class="line">print_r($array);</span><br></pre></td></tr></table></figure>
<h2 id="4-7-将数组追加到另一个数组"><a class="header-anchor" href="#4-7-将数组追加到另一个数组"></a>4.7 将数组追加到另一个数组</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望把两个数组合并为一个数组</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 合并只使用数值键的数组时，数组将重新编号，以保证值不会丢失。</span></span><br><span class="line">$array1 = [<span class="string">'hello'</span>, <span class="string">'world'</span>];</span><br><span class="line">$array2 = [<span class="string">'luis'</span>, <span class="string">'edware'</span>, <span class="string">'hello'</span>, <span class="string">'world'</span>];</span><br><span class="line">$array3 = array_merge($array1, $array2);</span><br><span class="line">print_r($array3);</span><br><span class="line"></span><br><span class="line"><span class="comment">// + 操作符也可以用来合并数组</span></span><br><span class="line">print_r($array1 + $array2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 倘若两个数组有重复的键，第二数组会覆盖这些重复键的值</span></span><br><span class="line">$array1 = [<span class="string">'A'</span> =&gt; <span class="string">'apple'</span>, <span class="string">'B'</span> =&gt; <span class="string">'banana'</span>, <span class="string">'O'</span> =&gt; <span class="string">'orange'</span>];</span><br><span class="line">$array2 = [<span class="string">'A'</span> =&gt; <span class="string">'Luis'</span>, <span class="string">'C'</span> =&gt; <span class="string">'Imooc'</span>];</span><br><span class="line">print_r(array_merge($array1, $array2));</span><br></pre></td></tr></table></figure>
<h2 id="4-8-将数组转换为字符串"><a class="header-anchor" href="#4-8-将数组转换为字符串"></a>4.8 将数组转换为字符串</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望将一个数组转换为一个格式化的字符串</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$array = range(<span class="number">0</span>, <span class="number">9</span>);</span><br><span class="line">$string1 = join(<span class="string">','</span>, $array);</span><br><span class="line">$string2 = implode(<span class="string">','</span>, $array);</span><br><span class="line">print_r($string1 . <span class="string">"\n"</span>);</span><br><span class="line">print_r($string2 . <span class="string">"\n"</span>);</span><br></pre></td></tr></table></figure>
<h2 id="4-10-检查一个键是否存在数组中"><a class="header-anchor" href="#4-10-检查一个键是否存在数组中"></a>4.10 检查一个键是否存在数组中</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>想知道一个数组是否包含某个键</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$array = [<span class="string">'a'</span> =&gt; <span class="string">'apple'</span>, <span class="string">'b'</span> =&gt; <span class="string">'banana'</span>, <span class="string">'c'</span> =&gt; <span class="string">'cao ni ma'</span>];</span><br><span class="line"><span class="keyword">if</span> (array_key_exists(<span class="string">'a'</span>, $array)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $array[<span class="string">'a'</span>] . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($array[<span class="string">'a'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $array[<span class="string">'c'</span>] . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-11-检查一个元素是否在数组中"><a class="header-anchor" href="#4-11-检查一个元素是否在数组中"></a>4.11 检查一个元素是否在数组中</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望知道一个数组是否包含某个值</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$array = [<span class="string">'a'</span> =&gt; <span class="string">'apple'</span>, <span class="string">'b'</span> =&gt; <span class="string">'banana'</span>, <span class="string">'c'</span> =&gt; <span class="string">'cao ni ma'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (in_array(<span class="string">'apple'</span>, $array)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Own it'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Need it'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$array = [<span class="string">'Emma'</span>, <span class="string">'Pride and Prejudice'</span>, <span class="string">'Northhanger Abbey'</span>];</span><br><span class="line">$array = array_flip($array);</span><br><span class="line"><span class="keyword">if</span> (array_key_exists(<span class="string">'Emma'</span>, $array)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Own it'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Need it'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-12-查找一个值在数组中的位置"><a class="header-anchor" href="#4-12-查找一个值在数组中的位置"></a>4.12 查找一个值在数组中的位置</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望知道一个值是否在数组中。如果这个值确实在数组中，希望知道它的键。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果一个值在数组中多次出现，array_serach() 只能保证返回其中一个实例，而不一定是第一个实例。</span></span><br><span class="line">$position = [<span class="string">'a'</span>=&gt;<span class="string">'apple'</span>,<span class="string">'banana'</span>,<span class="string">'orange'</span>,<span class="string">'b'</span>=&gt;<span class="string">'not bad'</span>];</span><br><span class="line"><span class="keyword">if</span>(($result = array_search(<span class="string">'123'</span>, $position)) !== <span class="keyword">false</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $result;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'false'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-13-查找通过某个测试的元素"><a class="header-anchor" href="#4-13-查找通过某个测试的元素"></a>4.13 查找通过某个测试的元素</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望找出数组中满足某些需求的元素</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $array = range(<span class="number">0</span>, <span class="number">20</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    $result = array_filter($array,<span class="function"><span class="keyword">function</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($value%<span class="number">2</span> === <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="4-14-查找数组中最大值或最小值元素"><a class="header-anchor" href="#4-14-查找数组中最大值或最小值元素"></a>4.14 查找数组中最大值或最小值元素</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望找出数组中有最大值或最小值的元素。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$array = range(<span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> max($array) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> min($array) . <span class="string">"\n"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="4-15-反转数组"><a class="header-anchor" href="#4-15-反转数组"></a>4.15 反转数组</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望反转数组中元素的顺序</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$array = range(<span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line">$array = array_reverse($array);</span><br><span class="line">print_r($array);</span><br><span class="line"></span><br><span class="line">$fruits = [<span class="string">'a'</span> =&gt; <span class="string">'Apple'</span>, <span class="string">'b'</span> =&gt; <span class="string">'Banana'</span>, <span class="string">'o'</span> =&gt; <span class="string">'orange'</span>];</span><br><span class="line">$fruits = array_reverse($fruits);</span><br><span class="line">print_r($fruits);</span><br></pre></td></tr></table></figure>
<h2 id="4-18-多个数据的排序"><a class="header-anchor" href="#4-18-多个数据的排序"></a>4.18 多个数据的排序</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望对多个数组或多位数组排序</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$colors = [<span class="string">'Red'</span>, <span class="string">'White'</span>, <span class="string">'Blue'</span>];</span><br><span class="line">$cities = [<span class="string">'Boston'</span>, <span class="string">'New York'</span>, <span class="string">'Chicago'</span>];</span><br><span class="line">$stuff = [</span><br><span class="line">    <span class="string">'colors'</span> =&gt; $colors,</span><br><span class="line">    <span class="string">'cities'</span> =&gt; $cities,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">array_multisort($colors, $cities);</span><br><span class="line">print_r($colors);</span><br><span class="line">print_r($cities);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">array_multisort($stuff[<span class="string">'colors'</span>], $stuff[<span class="string">'cities'</span>]);</span><br><span class="line">print_r($stuff);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$numbers = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">$letters = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>];</span><br><span class="line"></span><br><span class="line">array_multisort($numbers, SORT_NUMERIC, SORT_DESC, $letters, SORT_STRING, SORT_DESC);</span><br><span class="line">print_r($numbers);</span><br><span class="line">print_r($letters);</span><br></pre></td></tr></table></figure>
<h2 id="4-20-随机调整数组"><a class="header-anchor" href="#4-20-随机调整数组"></a>4.20 随机调整数组</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望按一种随机的顺序重排数组中的元素</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$name = [<span class="string">'Ann'</span>, <span class="string">'Eason'</span>, <span class="string">'Luis'</span>, <span class="string">'Edware'</span>];</span><br><span class="line">print_r($name);</span><br><span class="line"></span><br><span class="line">shuffle($name);</span><br><span class="line">print_r($name);</span><br></pre></td></tr></table></figure>
<h2 id="4-21-删除数组中重复的元素"><a class="header-anchor" href="#4-21-删除数组中重复的元素"></a>4.21 删除数组中重复的元素</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望删除数组中重复的元素</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$array = [<span class="string">'Ann'</span>, <span class="string">'Eason'</span>, <span class="string">'Luis'</span>, <span class="string">'Edware'</span>, <span class="string">'Ann'</span>, <span class="string">'Eason'</span>, <span class="string">'Luis'</span>, <span class="string">'Edware'</span>];</span><br><span class="line">print_r($array);</span><br><span class="line"></span><br><span class="line">$unique = array_unique($array);</span><br><span class="line">print_r($unique);</span><br><span class="line"></span><br><span class="line">$unique2 = [];</span><br><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $item) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!in_array($item, $unique2)) &#123;</span><br><span class="line">        $unique2[] = $item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">print_r($unique2);</span><br></pre></td></tr></table></figure>
<h2 id="4-22-对数组中的各个元素应用一个函数"><a class="header-anchor" href="#4-22-对数组中的各个元素应用一个函数"></a>4.22 对数组中的各个元素应用一个函数</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望对数组中的各个元素应用一个函数或方法，这就允许一次转换所有输入数据</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$names = [</span><br><span class="line">    <span class="string">'firstName'</span> =&gt; <span class="string">'Ann‘Eason'</span>,</span><br><span class="line">    <span class="string">'lastName'</span> =&gt; <span class="string">'Luis’Edware'</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">array_walk($names, <span class="function"><span class="keyword">function</span><span class="params">(&amp;$value, $key)</span> </span>&#123;</span><br><span class="line">    $value = htmlentities($value, ENT_QUOTES);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($names <span class="keyword">as</span> $name) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $name . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'****************************************'</span> . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于嵌套数据，可以使用 array_walk_recursive()</span></span><br><span class="line">$names = [</span><br><span class="line">    <span class="string">'firstName'</span> =&gt; [<span class="string">'Ann"'</span>, <span class="string">'Luis"'</span>],</span><br><span class="line">    <span class="string">'lastName'</span> =&gt; [<span class="string">'"Eason'</span>, <span class="string">'"Edware'</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">array_walk_recursive($names, <span class="function"><span class="keyword">function</span><span class="params">(&amp;$value, $key)</span> </span>&#123;</span><br><span class="line">    $value = htmlentities($value, ENT_QUOTES);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($names <span class="keyword">as</span> $name) &#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($name <span class="keyword">as</span> $item) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $item . <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-23-查找两个数组的并集-交集或差集"><a class="header-anchor" href="#4-23-查找两个数组的并集-交集或差集"></a>4.23 查找两个数组的并集、交集或差集</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>有两个数组，希望找出它们的并集、交集、差集和对称差集</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$a = range(<span class="string">'a'</span>, <span class="string">'n'</span>);</span><br><span class="line">$b = range(<span class="string">'h'</span>, <span class="string">'t'</span>);</span><br><span class="line"><span class="comment">// 要计算并集</span></span><br><span class="line">$union = array_unique(array_merge($a, $b));</span><br><span class="line">print_r($union);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 要计算交集</span></span><br><span class="line">$intersection = array_intersect($a, $b);</span><br><span class="line">print_r($intersection);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单差集</span></span><br><span class="line">$difference1 = array_diff($a, $b);</span><br><span class="line">$difference2 = array_diff($b, $a);</span><br><span class="line">print_r($difference1);</span><br><span class="line">print_r($difference2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对称差集</span></span><br><span class="line">$difference = array_merge(array_diff($a, $b), array_diff($b, $a));</span><br><span class="line">print_r($difference);</span><br></pre></td></tr></table></figure>
<h2 id="4-24-高效迭代处理大型数据集"><a class="header-anchor" href="#4-24-高效迭代处理大型数据集"></a>4.24 高效迭代处理大型数据集</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望迭代处理一个元素列表，不过整个列表会占用大量内存，或者生成整个列表的速度非常慢。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<h2 id="4-25-使用数组语法访问对象"><a class="header-anchor" href="#4-25-使用数组语法访问对象"></a>4.25 使用数组语法访问对象</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>有一个对象，不过希望它作为一个数组来读写数据。这样不仅可以得到面向对象设计的好处，还可以利用我们熟悉的数组接口</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FakeArray</span> <span class="keyword">implements</span> <span class="title">ArrayAccess</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $elements;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;elements = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetExists</span><span class="params">($offset)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;elements[$offset]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetGet</span><span class="params">($offset)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;elements[$offset];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetSet</span><span class="params">($offset, $value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;elements[$offset] = $value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetUnset</span><span class="params">($offset)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;elements[$offset]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$array = <span class="keyword">new</span> FakeArray;</span><br><span class="line">$array[<span class="string">'animal'</span>] = <span class="string">"wabbit"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($array[<span class="string">'animal'</span>]) &amp;&amp; $array[<span class="string">'animal'</span>] == <span class="string">'wabbit'</span>) &#123;</span><br><span class="line">    <span class="keyword">unset</span>($array[<span class="string">'animal'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($array[<span class="string">'animal'</span>])) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Well,What did you expect in an"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP Codebook(二)</title>
    <url>/2017/01/22/PHP-Codebook-%E4%BA%8C/</url>
    <content><![CDATA[<h2 id="2-1-检查变量是否包含一个合法数字"><a class="header-anchor" href="#2-1-检查变量是否包含一个合法数字"></a>2.1 检查变量是否包含一个合法数字</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望确保变量包含一个数（即使变量的类型是字符串），或者希望检查变量不仅是一个数，而且要特别指定其类型是一个数字类型。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">foreach</span> ([<span class="number">5</span>,<span class="string">'5'</span>,<span class="string">'05'</span>,<span class="number">12.3</span>,<span class="string">'16.7'</span>,<span class="string">'five'</span>,oxDECAFBAD,<span class="string">'10e2000'</span>] <span class="keyword">as</span> $maybeNumber) &#123;</span><br><span class="line">        $isItNumeric = is_numeric($maybeNumber);</span><br><span class="line">        $actualType = gettype($maybeNumber);</span><br><span class="line">        $string = <span class="string">"Is the $actualType $maybeNumber numeric?"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(is_numeric($maybeNumber))&#123;</span><br><span class="line">            $answer = <span class="string">"yes"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $answer = <span class="string">"no"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> pack(<span class="string">"A40A3"</span>,$string,$answer).<span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Is the integer 5 numeric?               yes</span></span><br><span class="line"><span class="comment">Is the string 5 numeric?                yes</span></span><br><span class="line"><span class="comment">Is the string 05 numeric?               yes</span></span><br><span class="line"><span class="comment">Is the double 12.3 numeric?             yes</span></span><br><span class="line"><span class="comment">Is the string 16.7 numeric?             yes</span></span><br><span class="line"><span class="comment">Is the string five numeric?             no</span></span><br><span class="line"><span class="comment">Is the string oxDECAFBAD numeric?       no</span></span><br><span class="line"><span class="comment">Is the string 10e2000 numeric?          yes</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="2-2-比较浮点数"><a class="header-anchor" href="#2-2-比较浮点数"></a>2.2 比较浮点数</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望检查两个浮点数是否相等</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$delta = <span class="number">0.00001</span>;</span><br><span class="line">$a = <span class="number">1.00000001</span>;</span><br><span class="line">$b = <span class="number">1.00000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(abs($a - $b) &lt; $delta)&#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"$a and $b are equal enough"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-3-浮点数舍入"><a class="header-anchor" href="#2-3-浮点数舍入"></a>2.3 浮点数舍入</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望舍入一个浮点数，可能取整为一个整数，或者舍入为指定的小数位数</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 四舍五入 round()</span></span><br><span class="line"><span class="keyword">echo</span> round(<span class="number">2.4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> round(<span class="number">2.5</span>) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向上取整</span></span><br><span class="line"><span class="keyword">echo</span> ceil(<span class="number">2.4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向下取整</span></span><br><span class="line"><span class="keyword">echo</span> floor(<span class="number">2.9</span>) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个数正好落在两个整数中间的位置，PHP 会向远离 0 的方向取整</span></span><br><span class="line"><span class="keyword">echo</span> round(<span class="number">2.5</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> round(<span class="number">-2.5</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> round(<span class="number">2.4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> round(<span class="number">-2.4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> ceil(<span class="number">2.5</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> ceil(<span class="number">-2.5</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> ceil(<span class="number">2.4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> ceil(<span class="number">-2.4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> floor(<span class="number">2.5</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> floor(<span class="number">-2.5</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> floor(<span class="number">2.4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> floor(<span class="number">-2.4</span>) . <span class="string">"\n"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="2-4-处理一系列整数"><a class="header-anchor" href="#2-4-处理一系列整数"></a>2.4 处理一系列整数</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望对一个整数范围应用一段代码</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用 range() 函数实现</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span> (range(<span class="number">0</span>, <span class="number">100</span>, <span class="number">5</span>) <span class="keyword">as</span> $number) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $number . <span class="string">"\n"</span>;</span><br><span class="line">    printf(<span class="string">"%d squared is %d\n"</span>, $number, $number * $number);</span><br><span class="line">    printf(<span class="string">"%d cubed is %d\n"</span>, $number, $number * $number * $number);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-5-在指定范围内生成随机数"><a class="header-anchor" href="#2-5-在指定范围内生成随机数"></a>2.5 在指定范围内生成随机数</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望在指定的数字范围内生成一个随机数</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$lower = <span class="number">0</span>;</span><br><span class="line">$upper = <span class="number">1024</span>;</span><br><span class="line">$randNumber = mt_rand($lower, $upper);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $randNumber;</span><br></pre></td></tr></table></figure>
<h2 id="2-6-生成可预测的随机数"><a class="header-anchor" href="#2-6-生成可预测的随机数"></a>2.6 生成可预测的随机数</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望生成可预测的随机数，从而可以保证可重复的行为</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pick_color</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $colors = [<span class="string">'red'</span>, <span class="string">'orange'</span>, <span class="string">'yellow'</span>, <span class="string">'blue'</span>, <span class="string">'green'</span>, <span class="string">'indigo'</span>, <span class="string">'violet'</span>];</span><br><span class="line">    $i = mt_rand(<span class="number">0</span>, count($colors) - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $colors[$i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand(<span class="number">34534</span>);</span><br><span class="line">$first = pick_color();</span><br><span class="line">$second = pick_color();</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"$first is red and $second is yellow"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="2-10-格式化数字"><a class="header-anchor" href="#2-10-格式化数字"></a>2.10 格式化数字</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望输出一个数，要包括千分位分隔符和小数点。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$number = <span class="number">1234.56</span>;</span><br><span class="line"><span class="comment">// 千位分隔符</span></span><br><span class="line"><span class="keyword">echo</span> number_format($number) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二个参数指定使用了小数位数</span></span><br><span class="line"><span class="keyword">echo</span> number_format($number, <span class="number">2</span>) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第三个参数指定小数点字符，第四个参数指定千位分隔符</span></span><br><span class="line"><span class="keyword">echo</span> number_format($number, <span class="number">2</span>, <span class="string">"@"</span>, <span class="string">'#'</span>) . <span class="string">"\n"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="2-16-转换进制"><a class="header-anchor" href="#2-16-转换进制"></a>2.16 转换进制</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>需要将一个数从一个进制转换为另一个进制</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 十六进制</span></span><br><span class="line">$hex = <span class="string">'a1'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从十六进制转换为十进制</span></span><br><span class="line">$decimal = base_convert($hex, <span class="number">16</span>, <span class="number">10</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> $decimal;</span><br><span class="line"></span><br><span class="line">$decimal = <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert($decimal, <span class="number">10</span>, <span class="number">2</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert($decimal, <span class="number">10</span>, <span class="number">8</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert($decimal, <span class="number">10</span>, <span class="number">16</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP Codebook(一)</title>
    <url>/2017/01/22/PHP-Codebook-%E4%B8%80/</url>
    <content><![CDATA[<h2 id="1-1-访问子串"><a class="header-anchor" href="#1-1-访问子串"></a>1.1 访问子串</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>想知道一个字符串是否包含一个特定的子串。例如，想查看一个 email 地址是否包含一个 @</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$string = <span class="string">'506510463@qq.com'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (($length = strpos($string, <span class="string">'@'</span>)) === <span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'There was no @ in the e-mail address'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'This is a right e-mail address-'</span> . $length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>strpos 找到子串时，会返回子串的位置。找不到子串时，会返回 false，为了区分 0 和 false，必须使用 恒等操作符或非恒等操作符来进行判断。</p>
<h2 id="1-2-抽取子串"><a class="header-anchor" href="#1-2-抽取子串"></a>1.2 抽取子串</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望从字符串中的某个特定位置开始抽取这个字符串的一部分。例如，对于输入到一个表单的用户名，想要得到这个用户名的前八位字符。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$start = <span class="number">0</span>;</span><br><span class="line">$length = <span class="number">8</span>;</span><br><span class="line">$string = <span class="string">"LuisEdware"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> substr($string, $start, $length) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// LuisEdwa</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果忽略 $length，substr() 会返回从 $start 到原字符串末尾的子串</span></span><br><span class="line">$start = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> substr($string, $start) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// dware</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果 $start 大于字符串的长度，substr() 将返回 false</span></span><br><span class="line">$start = <span class="number">20</span>;</span><br><span class="line">var_dump(substr($string, $start));</span><br><span class="line"><span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果 $start 加 $length 超过了字符串末尾，substr() 将返回从 $start 开始至字符串末尾的所有字符</span></span><br><span class="line"><span class="keyword">echo</span> substr($string, <span class="number">8</span>, <span class="number">5</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// re</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果 $start 为负数，substr() 会从字符串末尾倒数来确定子串从哪里开始</span></span><br><span class="line"><span class="keyword">echo</span> substr($string, <span class="number">-6</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// Edware</span></span><br><span class="line"><span class="keyword">echo</span> substr($string, <span class="number">-6</span>, <span class="number">2</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// Ed</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果 $length 为负数，substr() 会从字符串末尾倒数来确定子串到哪里结束</span></span><br><span class="line"><span class="keyword">echo</span> substr($string, <span class="number">2</span>, <span class="number">-2</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// isEdwa</span></span><br><span class="line"><span class="keyword">echo</span> substr($string, <span class="number">-4</span>, <span class="number">-2</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// wa</span></span><br></pre></td></tr></table></figure>
<h2 id="1-3-替换子串"><a class="header-anchor" href="#1-3-替换子串"></a>1.3 替换子串</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望用另外一个不同的字符串来替换一个子串。例如，打印一个信用卡号之前，想要对除了后四位以外的部分模糊处理。或者当需要显示的文档过大，无法一次全部显示，可能希望显示一部分文本，另外还有一个链接指向其余的文本。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$creditCard = <span class="string">"6217 0032 4000 0600 075"</span>;</span><br><span class="line"><span class="keyword">echo</span> substr_replace($creditCard, <span class="string">'****'</span>, <span class="number">0</span>, strlen($creditCard) - <span class="number">4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// **** 075</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> substr_replace($creditCard, <span class="string">'**** **** **** ****'</span>, <span class="number">0</span>, strlen($creditCard) - <span class="number">4</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// **** **** **** **** 075</span></span><br><span class="line"></span><br><span class="line">$text = <span class="string">"Chief Justice Roberts, President Carter, President Clinton, President Bush, President Obama, fellow Americans and people of the world, thank you.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">We, the citizens of America, are now joined in a great national effort to rebuild our country and restore its promise for all of our people."</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> substr_replace($text, <span class="string">"..."</span>, <span class="number">25</span>);</span><br></pre></td></tr></table></figure>
<h2 id="1-4-逐字节处理字符串"><a class="header-anchor" href="#1-4-逐字节处理字符串"></a>1.4 逐字节处理字符串</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>需要分别处理字符串中的各个字节</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$string = <span class="string">"This weekend,I am going shopping for pet chicken."</span>;</span><br><span class="line">$vowels = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>, $j = strlen($string); $i &lt; $j; $i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (strstr(<span class="string">'aeiouAEIOU'</span>, $string[$i])) &#123;</span><br><span class="line">        $vowels++;</span><br><span class="line">        $string[$i] = ucwords($string[$i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $vowels . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> $string;</span><br></pre></td></tr></table></figure>
<h2 id="1-5-按单词或字节反转字符串"><a class="header-anchor" href="#1-5-按单词或字节反转字符串"></a>1.5 按单词或字节反转字符串</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望反转一个字符串中的单词或字节</p>
<h4 id="解决方案"><a class="header-anchor" href="#解决方案"></a>解决方案</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$string = <span class="string">"This is not a palindrome"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按字节反转</span></span><br><span class="line"><span class="keyword">echo</span> strrev($string) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// emordnilap a ton si sihT</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按单词反转</span></span><br><span class="line">$string = <span class="string">"Hello World,My Name is Luis Edware."</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将字符串分解为单词</span></span><br><span class="line">$words = explode(<span class="string">' '</span>, $string);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反转单词数组</span></span><br><span class="line">$words = array_reverse($words);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重新构建字符串</span></span><br><span class="line">$string = implode(<span class="string">' '</span>, $words);</span><br><span class="line"><span class="keyword">echo</span> $string;</span><br><span class="line"><span class="comment">// Edware. Luis is Name World,My Hello</span></span><br></pre></td></tr></table></figure>
<h2 id="1-6-生成随机字符串"><a class="header-anchor" href="#1-6-生成随机字符串"></a>1.6 生成随机字符串</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望生成一个随机字符串</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str_rand</span><span class="params">($length, $characters = null)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($characters === <span class="keyword">null</span>) &#123;</span><br><span class="line">        $characters = <span class="string">'0123456789qwertyuiopasdfghjklzxcvbnm!@#$%^&amp;*()-=_+[]&#123;&#125;:";,.&lt;&gt;/?'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!is_int($length) || $length &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $charactersLength = strlen($characters);</span><br><span class="line">    $string = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i = $length; $i &gt; <span class="number">0</span>; $i--) &#123;</span><br><span class="line">        $string .= $characters[mt_rand(<span class="number">0</span>, $charactersLength)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> str_rand(<span class="number">32</span>);</span><br></pre></td></tr></table></figure>
<h2 id="1-8-控制大小写"><a class="header-anchor" href="#1-8-控制大小写"></a>1.8 控制大小写</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>需要将字符串中的字母全大写或全小写，或者改变字母的大小写。例如，希望名字中的首字母大写，而其余字母都为小写。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 使用 ucfirst() 或 ucwords() 将一个单词或多个单词中的首字母大写</span></span><br><span class="line">$string = <span class="string">"my name is Luis edware"</span>;</span><br><span class="line"><span class="keyword">echo</span> ucfirst($string) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> ucwords($string) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// strtoupper()、strtolower() 将作用整个字符串</span></span><br><span class="line"><span class="keyword">echo</span> strtoupper($string) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> strtolower($string);</span><br></pre></td></tr></table></figure>
<h2 id="1-10-去除字符串首尾的空格"><a class="header-anchor" href="#1-10-去除字符串首尾的空格"></a>1.10 去除字符串首尾的空格</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>希望从字符串开头和末尾删除空白符。例如，在验证用户输入之前，可能希望先完成清理。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ltrim() 函数从字符串开头删除空白符</span></span><br><span class="line"><span class="comment"> * rtrim() 函数从字符串末尾删除空白符</span></span><br><span class="line"><span class="comment"> * trim() 函数则删除字符串开头和末尾的空白符</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">$lString = <span class="string">"    LuisEdware"</span>;</span><br><span class="line">$rString = <span class="string">"LuisEdware    "</span>;</span><br><span class="line">$string = <span class="string">"    LuisEdware    "</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> ltrim($lString) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> rtrim($rString) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> trim($string) . <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// trim() 函数还可以从字符串中删除用户指定的字符。</span></span><br><span class="line"><span class="keyword">echo</span> ltrim(<span class="string">'506510463 2794408425 Luis Edware'</span>, <span class="string">'0..9'</span>) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> rtrim(<span class="string">'LuisEdware 5065104632794408425'</span>, <span class="string">'0..9'</span>) . <span class="string">"\n"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="1-13-生成固定宽度字段数据记录"><a class="header-anchor" href="#1-13-生成固定宽度字段数据记录"></a>1.13 生成固定宽度字段数据记录</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>需要格式化数据记录，使得每个字段占据指定数目的字符。</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$books = [</span><br><span class="line">    [<span class="string">'trueName'</span>, <span class="string">'nickName'</span>, <span class="string">'birthday'</span>],</span><br><span class="line">    [<span class="string">'Elmer Gantry'</span>, <span class="string">'Sinclair Lewis'</span>, <span class="number">1927</span>],</span><br><span class="line">    [<span class="string">'The Scarlatti Inheritance'</span>, <span class="string">'Robert Ludlum'</span>, <span class="number">1971</span>],</span><br><span class="line">    [<span class="string">'The Parsifal Mosaic'</span>, <span class="string">'William Styron'</span>, <span class="number">1979</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($books <span class="keyword">as</span> $book) &#123;</span><br><span class="line">    <span class="keyword">print</span> pack(<span class="string">'A30A20A10'</span>, $book[<span class="number">0</span>], $book[<span class="number">1</span>], $book[<span class="number">2</span>]) . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">trueName                      nickName            birthday</span></span><br><span class="line"><span class="comment">Elmer Gantry                  Sinclair Lewis      1927</span></span><br><span class="line"><span class="comment">The Scarlatti Inheritance     Robert Ludlum       1971</span></span><br><span class="line"><span class="comment">The Parsifal Mosaic           William Styron      1979</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<h2 id="1-15-分解字符串"><a class="header-anchor" href="#1-15-分解字符串"></a>1.15 分解字符串</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>需要将一个字符串分解为片段。例如希望访问用户在一个 &lt;textarea&gt; 表单域中输入的各行文本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$string = <span class="string">'My sentence is not very complicated'</span>;</span><br><span class="line">$words = explode(<span class="string">' '</span>, $string);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array</span></span><br><span class="line"><span class="comment">(</span></span><br><span class="line"><span class="comment">    [0] =&gt; My</span></span><br><span class="line"><span class="comment">    [1] =&gt; sentence</span></span><br><span class="line"><span class="comment">    [2] =&gt; is</span></span><br><span class="line"><span class="comment">    [3] =&gt; not</span></span><br><span class="line"><span class="comment">    [4] =&gt; very</span></span><br><span class="line"><span class="comment">    [5] =&gt; complicated</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="1-16-使文本在指定行长度自动换行"><a class="header-anchor" href="#1-16-使文本在指定行长度自动换行"></a>1.16 使文本在指定行长度自动换行</h2>
<h4 id="问题"><a class="header-anchor" href="#问题"></a>问题</h4>
<p>需要实现字符串自动换行</p>
<h4 id="实现"><a class="header-anchor" href="#实现"></a>实现</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$text = <span class="string">"Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum."</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span> . $text . <span class="string">'&lt;/pre&gt;'</span> . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> wordwrap($text, <span class="number">50</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 与 Vue.js 进行微信开发（三）</title>
    <url>/2017/01/16/%E4%BD%BF%E7%94%A8-Laravel-%E4%B8%8E-Vue-js-%E8%BF%9B%E8%A1%8C%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h2 id="目标"><a class="header-anchor" href="#目标"></a>目标</h2>
<p>本文的目标是实现微信公众号菜单的创建与删除</p>
<h2 id="创建路由"><a class="header-anchor" href="#创建路由"></a>创建路由</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 微信菜单创建 */</span></span><br><span class="line">Route::get(<span class="string">'/create-menus'</span>, [</span><br><span class="line">    <span class="string">'as'</span> =&gt; <span class="string">'wechat.create.menus'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'WeChatServerController@createMenus'</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 微信菜单创建 */</span></span><br><span class="line">Route::get(<span class="string">'/destroy-menus'</span>, [</span><br><span class="line">    <span class="string">'as'</span> =&gt; <span class="string">'wechat.destroy.menus'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'WeChatServerController@destroyMenus'</span>,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<h2 id="修改控制器"><a class="header-anchor" href="#修改控制器"></a>修改控制器</h2>
<p>修改控制器 app/Http/Controllers/WeChat/WeChatServerController.php，新增代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 创建新的微信菜单</span><br><span class="line"> * @param WeChat $weChat</span><br><span class="line"> * @return string</span><br><span class="line"> */</span><br><span class="line">public function createMenus(WeChat $weChat)</span><br><span class="line">&#123;</span><br><span class="line">    $menu = $weChat-&gt;menu;</span><br><span class="line">    $buttons = [</span><br><span class="line">        [</span><br><span class="line">            &quot;type&quot; =&gt; &quot;view&quot;,</span><br><span class="line">            &quot;name&quot; =&gt; &quot;进入好答&quot;,</span><br><span class="line">            &quot;url&quot; =&gt; route(&apos;wechat.index&apos;),</span><br><span class="line">        ],</span><br><span class="line">        [</span><br><span class="line">            &quot;type&quot; =&gt; &quot;click&quot;,</span><br><span class="line">            &quot;name&quot; =&gt; &quot;听我唱歌&quot;,</span><br><span class="line">            &quot;key&quot; =&gt; &quot;K0001_LET_ME_SING_MY_SONG&quot;,</span><br><span class="line">        ],</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $json = $menu-&gt;add($buttons);</span><br><span class="line">    $result = json_decode($json, true);</span><br><span class="line"></span><br><span class="line">    if ($result[&apos;errcode&apos;] == 0 &amp;&amp; $result[&apos;errmsg&apos;] == &apos;ok&apos;) &#123;</span><br><span class="line">        echo &quot;创建菜单成功&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;创建菜单失败&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除所有微信菜单</span><br><span class="line"> * @param WeChat $weChat</span><br><span class="line"> * @return string</span><br><span class="line"> */</span><br><span class="line">public function destroyMenus(WeChat $weChat)</span><br><span class="line">&#123;</span><br><span class="line">    $result = $weChat-&gt;menu-&gt;destroy();</span><br><span class="line"></span><br><span class="line">    if ($result[&apos;errcode&apos;] == 0 &amp;&amp; $result[&apos;errmsg&apos;] == &apos;ok&apos;) &#123;</span><br><span class="line">        echo &quot;删除菜单成功&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;删除菜单失败&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 与 Vue.js 进行微信开发（二）</title>
    <url>/2017/01/16/%E4%BD%BF%E7%94%A8-Laravel-%E4%B8%8E-Vue-js-%E8%BF%9B%E8%A1%8C%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="目标"><a class="header-anchor" href="#目标"></a>目标</h2>
<p>本文的目标是实现微信用户授权，当用户进入 Web App 的时候，能够获取用户的信息。</p>
<h2 id="配置回调地址"><a class="header-anchor" href="#配置回调地址"></a>配置回调地址</h2>
<p>微信公众平台 -&gt; 开发者工具 -&gt; 公众平台测试帐号 -&gt; 测试号管理 -&gt; 体验接口权限表 -&gt; 功能服务 -&gt; 网页帐号 -&gt; 修改 -&gt; 填写回调域名，格式如：<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p>
<h2 id="修改配置文件"><a class="header-anchor" href="#修改配置文件"></a>修改配置文件</h2>
<p>可以修改文件 config/wechat.php ，也可以在 .env 文件进行配置</p>
<p>wechat.php 文件配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * OAuth 配置</span><br><span class="line"> *</span><br><span class="line"> * only_wechat_browser: 只在微信浏览器跳转</span><br><span class="line"> * scopes：公众平台（snsapi_userinfo / snsapi_base），开放平台：snsapi_login</span><br><span class="line"> * callback：OAuth授权完成后的回调页地址(如果使用中间件，则随便填写。。。)</span><br><span class="line"> */</span><br><span class="line"> &apos;oauth&apos; =&gt; [</span><br><span class="line">     &apos;only_wechat_browser&apos; =&gt; false,</span><br><span class="line">     &apos;scopes&apos;   =&gt; array_map(&apos;trim&apos;, explode(&apos;,&apos;, env(&apos;WECHAT_OAUTH_SCOPES&apos;, &apos;snsapi_userinfo&apos;))),</span><br><span class="line">     &apos;callback&apos; =&gt; env(&apos;WECHAT_OAUTH_CALLBACK&apos;, &apos;/examples/oauth_callback.php&apos;),</span><br><span class="line"> ],</span><br></pre></td></tr></table></figure>
<p>.env 文件配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">WECHAT_APPID=****</span><br><span class="line">WECHAT_SECRET=***</span><br><span class="line">WECHAT_TOKEN=****</span><br><span class="line">WECHAT_AES_KEY=</span><br><span class="line"></span><br><span class="line">WECHAT_OAUTH_SCOPES=snsapi_userinfo</span><br><span class="line">WECHAT_OAUTH_CALLBACK=/wechat/oauth-callback</span><br></pre></td></tr></table></figure>
<h2 id="新增路由"><a class="header-anchor" href="#新增路由"></a>新增路由</h2>
<p>修改文件 app/Http/Routes/wechat.php，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* 处理微信发送消息 */</span></span><br><span class="line">Route::any(<span class="string">'/request-handler'</span>, <span class="string">'WeChatServerController@requestHandler'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 处理微信授权回调 */</span></span><br><span class="line">Route::any(<span class="string">'/oauth-callback'</span>, <span class="string">'WeChatServerController@oauthCallback'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 微信应用首页 */</span></span><br><span class="line">Route::get(<span class="string">'/'</span>, [</span><br><span class="line">    <span class="string">'as'</span> =&gt; <span class="string">'wechat.index'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'WeChatApplicationController@index'</span>,</span><br><span class="line">    <span class="string">'middleware'</span> =&gt; [],</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<h2 id="关闭路由-csrf"><a class="header-anchor" href="#关闭路由-csrf"></a>关闭路由 CSRF</h2>
<p>修改文件 app/Http/Middleware/VerifyCSsrfToken.php，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> $except = [</span><br><span class="line">	<span class="string">'/wechat/request-handler'</span>,</span><br><span class="line">	<span class="string">'/wechat/oauth-callback'</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<h2 id="获取授权"><a class="header-anchor" href="#获取授权"></a>获取授权</h2>
<h3 id="1-授权页面"><a class="header-anchor" href="#1-授权页面"></a>1.授权页面</h3>
<p>新增文件 app/Http/Controllers/WeChat/WeChatApplicationController.php，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">WeChat</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">EasyWeChat</span>\<span class="title">Foundation</span>\<span class="title">Application</span> <span class="title">as</span> <span class="title">WeChat</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeChatApplicationController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">(Request $request, WeChat $wechat)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    	<span class="comment">// 如果 Session 中没有用户信息，则跳转至微信授权页面</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($request-&gt;session()-&gt;has(<span class="string">'weChatUserInfo'</span>))) &#123;</span><br><span class="line">            $oauth = $wechat-&gt;oauth;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $oauth-&gt;redirect();</span><br><span class="line">        &#125;</span><br><span class="line">        $user = $request-&gt;session()-&gt;get(<span class="string">'weChatUserInfo'</span>);</span><br><span class="line">        dump($user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-回调操作"><a class="header-anchor" href="#2-回调操作"></a>2.回调操作</h3>
<p>修改文件 app/Http/Controllers/WeChat/WeChatServerController.php，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信用户授权回调</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> Request $request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> WeChat $weChat</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> \Illuminate\Http\RedirectResponse</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">oauthCallback</span><span class="params">(Request $request, WeChat $weChat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $oauth = $weChat-&gt;oauth;</span><br><span class="line">    $user = $oauth-&gt;user();</span><br><span class="line">    $request-&gt;session()-&gt;put(<span class="string">'weChatUserInfo'</span>, $user-&gt;toArray());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> redirect()-&gt;route(<span class="string">'wechat.index'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-访问首页"><a class="header-anchor" href="#3-访问首页"></a>3.访问首页</h3>
<p>下载微信的 Web 开发者工具，在工具中访问授权首页，比如访问:你的域名/wechat,可以跳转至授权页，如下图：<br>
<img src="http://o93kt6djh.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-01-16%2022.24.46.png" alt><br>
<img src="http://o93kt6djh.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-01-16%2022.25.06.png" alt></p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 与 Vue.js 进行微信开发（一）</title>
    <url>/2017/01/15/%E4%BD%BF%E7%94%A8-Laravel-%E4%B8%8E-Vue.js-%E8%BF%9B%E8%A1%8C%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="目标"><a class="header-anchor" href="#目标"></a>目标</h2>
<p>本文的目标是实现与微信服务器的通信。</p>
<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>MacOS</li>
<li>Laravel 5.1</li>
<li>Vue.js 2.1</li>
<li>EasyWeChat</li>
</ul>
<h2 id="安装-easywechat"><a class="header-anchor" href="#安装-easywechat"></a>安装 EasyWechat</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer require &quot;overtrue/laravel-wechat:~3.0&quot;</span><br></pre></td></tr></table></figure>
<h2 id="配置"><a class="header-anchor" href="#配置"></a>配置</h2>
<ul>
<li>注册 ServiceProvider:
<ul>
<li>Overtrue\LaravelWechat\ServiceProvider::class,</li>
</ul>
</li>
<li>创建配置文件
<ul>
<li>php artisan vendor:publish</li>
</ul>
</li>
<li>修改 config/wechat.php
<ul>
<li>app_id：微信测试号 appID</li>
<li>secret：微信测试号 appsecret</li>
<li>token：自定义，要与微信测试号填写的 Token 保持一致</li>
<li>aes_key：加密信息用的，本文采用明文的方式，暂不填写</li>
</ul>
</li>
</ul>
<h2 id="创建微信分组路由"><a class="header-anchor" href="#创建微信分组路由"></a>创建微信分组路由</h2>
<p>修改文件 app/Http/routes.php，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::group([</span><br><span class="line">    <span class="string">'prefix'</span> =&gt; <span class="string">'wechat'</span>,</span><br><span class="line">    <span class="string">'namespace'</span> =&gt; <span class="string">'WeChat'</span>,</span><br><span class="line">    <span class="string">'middleware'</span> =&gt; [],</span><br><span class="line">], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">'/Routes/wechat.php'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>新增文件 app/Http/Routes/wechat.php，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::any(<span class="string">'/request-handler'</span>, <span class="string">'WeChatServerController@requestHandler'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="关闭路由-csrf"><a class="header-anchor" href="#关闭路由-csrf"></a>关闭路由 CSRF</h2>
<p>修改文件 app/Http/Middleware/VerifyCSsrfToken.php，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> $except = [</span><br><span class="line">	<span class="string">'/wechat/request-handler'</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<h2 id="创建控制器"><a class="header-anchor" href="#创建控制器"></a>创建控制器</h2>
<p>新增文件 app/Http/Controllers/WeChat/WeChatServerController.php，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">WeChat</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">EasyWeChat</span>\<span class="title">Foundation</span>\<span class="title">Application</span> <span class="title">as</span> <span class="title">WeChat</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeChatServerController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理微信的请求消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">requestHandler</span><span class="params">(WeChat $weChat)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $weChat-&gt;server-&gt;setMessageHandler(<span class="function"><span class="keyword">function</span><span class="params">($message)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"欢迎关注 &#123;$message&#125;!"</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $weChat-&gt;server-&gt;serve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="验证"><a class="header-anchor" href="#验证"></a>验证</h2>
<ul>
<li>配置微信公众平台测试号
<ul>
<li>接口配置信息
<ul>
<li>URL：域名/wechat</li>
<li>Token：自定义，要与 wechat.php 文件的 token 一致</li>
</ul>
</li>
<li>JS 接口安全域名
<ul>
<li>填写域名，例如 <a href="http://baidu.com" target="_blank" rel="noopener">baidu.com</a> ，不需要写 www 和 http[s]://</li>
</ul>
</li>
<li>测试号二维码
<ul>
<li>添加测试用户</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>URL 和 Token 通过验证之后，关注微信公众平台测试号，并发送测试消息，成功的话，如下图：<br>
<img src="http://o93kt6djh.bkt.clouddn.com/yanzhengwechatmessage.jpeg" alt></p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>学习 UML（一）</title>
    <url>/2016/12/08/%E5%AD%A6%E4%B9%A0-UML%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="uml-是什么"><a class="header-anchor" href="#uml-是什么"></a>UML 是什么</h2>
<p>UML，全称是 Unified Modeling Language，译为统一建模语言，是面向对象软件的标准化建模语言。UML 因其简单、统一的特点，而且能表达软件设计中的动态和静态信息，目前已成为可视化建模语言的工业标准。</p>
<h2 id="uml-的种类"><a class="header-anchor" href="#uml-的种类"></a>UML 的种类</h2>
<p>UML 2.5 包含的图形如下，一共 14 种。</p>
<ul>
<li>图
<ul>
<li>结构图
<ul>
<li>类图</li>
<li>组件图</li>
<li>对象图</li>
<li>扩展机制图</li>
<li>组合结构图</li>
<li>部署图</li>
<li>包图</li>
</ul>
</li>
<li>行为图
<ul>
<li>活动图</li>
<li>用例图</li>
<li>状态机图</li>
<li>交互图
<ul>
<li>序列图</li>
<li>通信图</li>
<li>时间图</li>
<li>交互概述图</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>各建模工作流可以选用的建模元素以及推荐用法如下：</p>
<table>
<thead>
<tr>
<th>工作流</th>
<th>思考焦点</th>
<th>可选建模元素</th>
<th>推荐建模元素</th>
</tr>
</thead>
<tbody>
<tr>
<td>业务建模</td>
<td>组织内系统之间</td>
<td>用例图、类图、序列图、活动图</td>
<td>用例图、类图、序列图</td>
</tr>
<tr>
<td>需求</td>
<td>系统边界</td>
<td>用例图、序列图、状态机图、活动图、文本</td>
<td>用例图、文本</td>
</tr>
<tr>
<td>分析</td>
<td>系统内核心域</td>
<td>类图、序列图、状态机图、活动图、通信图、包图</td>
<td>类图、序列图、（状态机图）</td>
</tr>
<tr>
<td>设计</td>
<td>系统内各域之间</td>
<td>类图、序列图、状态机图、活动图、通信图、组件图、部署图、时间图、组合结构图、包图</td>
<td>用文本表达模型（所谓代码）</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>UML</category>
      </categories>
      <tags>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title>Yii2 Working with Databases</title>
    <url>/2016/12/02/Yii2-Working-with-Databases/</url>
    <content><![CDATA[<h2 id="create"><a class="header-anchor" href="#create"></a>Create</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="comment">// 单条数据插入</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;insert(<span class="string">'shop_user'</span>, [</span><br><span class="line">    <span class="string">'userName'</span> =&gt; <span class="string">'HelloWorld'</span>,</span><br><span class="line">    <span class="string">'userPass'</span> =&gt; md5(<span class="number">123456</span>),</span><br><span class="line">    <span class="string">'userEmail'</span> =&gt; <span class="string">'hello@world.com'</span>,</span><br><span class="line">    <span class="string">'createdAt'</span> =&gt; time(),</span><br><span class="line">])-&gt;execute();</span><br><span class="line"></span><br><span class="line">$customer = <span class="keyword">new</span> Customer();</span><br><span class="line">$customer-&gt;name = <span class="string">'Ann'</span>;</span><br><span class="line">$customer-&gt;email = <span class="string">'AnnEason@qq.com'</span>;</span><br><span class="line">$customer-&gt;save();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量数据插入</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;batchInsert(<span class="string">'shop_user'</span>,</span><br><span class="line">    [<span class="string">'userName'</span>, <span class="string">'userPass'</span>, <span class="string">'userEmail'</span>, <span class="string">'createdAt'</span>],</span><br><span class="line">    [</span><br><span class="line">        [<span class="string">'Ann'</span>, md5(<span class="number">123456</span>), <span class="string">'Ann@qq.com'</span>, time()],</span><br><span class="line">        [<span class="string">'Leon'</span>, md5(<span class="number">123456</span>), <span class="string">'Leon@qq.com'</span>, time()],</span><br><span class="line">        [<span class="string">'bitch'</span>, md5(<span class="number">123456</span>), <span class="string">'bitch@qq.com'</span>, time()],</span><br><span class="line">        [<span class="string">'Linda'</span>, md5(<span class="number">123456</span>), <span class="string">'Linda@qq.com'</span>, time()],</span><br><span class="line">    ]</span><br><span class="line">)-&gt;execute();</span><br></pre></td></tr></table></figure>
<h2 id="update"><a class="header-anchor" href="#update"></a>Update</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 数据更新方法(表名, 字段与值, 条件)</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;update(<span class="string">'shop_user'</span>, [<span class="string">'userName'</span> =&gt; <span class="string">'hello'</span>], <span class="string">'userId = 6'</span>)-&gt;execute();</span><br><span class="line"></span><br><span class="line">$customer = Customer::findOne(<span class="number">123</span>);</span><br><span class="line">$customer-&gt;email = <span class="string">'AnnEason@qq.com'</span>;</span><br><span class="line">$customer-&gt;save();</span><br><span class="line"></span><br><span class="line">$values = [</span><br><span class="line">	<span class="string">'name'</span> =&gt; <span class="string">'Ann'</span>,</span><br><span class="line">	<span class="string">'email'</span> =&gt; <span class="string">'Ann@qq.com'</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$customer = <span class="keyword">new</span> Customer();</span><br><span class="line">$customer-&gt;attributes = $values;</span><br><span class="line">$customer-&gt;save();</span><br><span class="line"></span><br><span class="line">Customer::updateAll([<span class="string">'status'</span> =&gt; Customer::STATUS_ACTIVE],[<span class="string">'like'</span>,<span class="string">'email'</span>,<span class="string">'@example.com'</span>]);</span><br></pre></td></tr></table></figure>
<h2 id="retrieve"><a class="header-anchor" href="#retrieve"></a>Retrieve</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 存在数据返回二维数组,没有数据返回空数组</span></span><br><span class="line">$orders = Yii::$app-&gt;db-&gt;createCommand(<span class="string">"select * from z_order order by id desc limit 100 ;"</span>)-&gt;queryAll();</span><br><span class="line">$rows = (<span class="keyword">new</span> \yii\db\Query())-&gt;select([<span class="string">'id'</span>,<span class="string">'email'</span>])-&gt;from(<span class="string">'user'</span>) -&gt;all();</span><br><span class="line">$models = Model::find()-&gt;where([<span class="string">'status'</span> =&gt; Model::STATUS])-&gt;all();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存在数据返回一维数组,没有数据返回 false</span></span><br><span class="line">$order = Yii::$app-&gt;db-&gt;createCommand(<span class="string">"select * from z_order where id = 802478;"</span>)-&gt;queryOne();</span><br><span class="line">$row = (<span class="keyword">new</span> \yii\db\Query())-&gt;from(<span class="string">'user'</span>)-&gt;where([<span class="string">'like'</span>,<span class="string">'username'</span>,<span class="string">'test'</span>])-&gt;one();</span><br><span class="line">$model = Model::find()-&gt;where([<span class="string">'id'</span>=&gt;<span class="number">1</span>])-&gt;one();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存在数据返回一维数组,没有数据返回空数组</span></span><br><span class="line">$orderNumbers = Yii::$app-&gt;db-&gt;createCommand(<span class="string">"select orderno from z_order order by id desc limit 100"</span>)</span><br><span class="line">-&gt;queryColumn();</span><br><span class="line">$columns = (<span class="keyword">new</span> \yii\db\Query())-&gt;select(<span class="string">'id'</span>)-&gt;from(<span class="string">'user'</span>)-&gt;column()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存在数据返回标量数值,没有数据返回 false</span></span><br><span class="line">$orderCount = Yii::$app-&gt;db-&gt;createCommand(<span class="string">"select count(orderno) from z_order"</span>)-&gt;queryScalar();</span><br><span class="line">$count = (<span class="keyword">new</span> \yii\db\Query())-&gt;from(<span class="string">'user'</span>)-&gt;where([<span class="string">'like'</span>,<span class="string">'username'</span>,<span class="string">'test'</span>])-&gt;count();</span><br><span class="line">$modelCount = Model::find()-&gt;where([<span class="string">'status'</span>=&gt;<span class="number">1</span>])-&gt;count();</span><br></pre></td></tr></table></figure>
<h2 id="delete"><a class="header-anchor" href="#delete"></a>Delete</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 数据删除方法(表名，条件)</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;delete(<span class="string">'shop_user'</span>, <span class="string">'userName = "HelloWorld"'</span>)-&gt;execute();</span><br><span class="line"></span><br><span class="line">$customer = Customer::findOne(<span class="number">123</span>);</span><br><span class="line">$customer-&gt;delete();</span><br><span class="line"></span><br><span class="line">Customer::deleteAll([<span class="string">'status'</span> =&gt; Customer::STATUS_INACTIVE]);</span><br></pre></td></tr></table></figure>
<h2 id="where"><a class="header-anchor" href="#where"></a>Where</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// String Format</span></span><br><span class="line">$query-&gt;where(<span class="string">'status = 1'</span>);</span><br><span class="line">$query-&gt;where(<span class="string">'status = :status'</span>, [<span class="string">':status'</span> =&gt; $status]);</span><br><span class="line">$query-&gt;where(<span class="string">'status = :status'</span>)-&gt;addParams([<span class="string">':status'</span> =&gt; $status]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hash Format ...WHERE (`status` = 10) AND (`type` IS NULL) AND (`id` IN (4, 8, 15))</span></span><br><span class="line">$query-&gt;where([</span><br><span class="line">    <span class="string">'status'</span> =&gt; <span class="number">10</span>,</span><br><span class="line">    <span class="string">'type'</span> =&gt; <span class="keyword">null</span>,</span><br><span class="line">    <span class="string">'id'</span> =&gt; [<span class="number">4</span>, <span class="number">8</span>, <span class="number">15</span>],</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Operator Format [operator, operand1, operand2, ...]</span></span><br><span class="line">$query-&gt;where([<span class="string">'and'</span>, <span class="string">'id=1'</span>, <span class="string">'id=2'</span>]);</span><br><span class="line">$query-&gt;where([<span class="string">'and'</span>, <span class="string">'type=1'</span>, [<span class="string">'or'</span>, <span class="string">'id=1'</span>, <span class="string">'id=2'</span>]]);</span><br><span class="line"></span><br><span class="line">$query-&gt;where([<span class="string">'between'</span>, <span class="string">'id'</span>, <span class="number">1</span>, <span class="number">10</span>]);</span><br><span class="line">$query-&gt;where([<span class="string">'not between'</span>, <span class="string">'id'</span>, <span class="number">1</span>, <span class="number">10</span>]);</span><br><span class="line"></span><br><span class="line">$query-&gt;where([<span class="string">'in'</span>, <span class="string">'id'</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]]);</span><br><span class="line">$query-&gt;where([<span class="string">'not in'</span>, <span class="string">'id'</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]]);</span><br><span class="line"></span><br><span class="line">$query-&gt;where([<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="string">'hello'</span>]);</span><br><span class="line">$query-&gt;where([<span class="string">'like'</span>, <span class="string">'name'</span>, [<span class="string">'hello'</span>, <span class="string">'world'</span>]]);</span><br><span class="line"></span><br><span class="line">$query-&gt;where([<span class="string">'&gt;'</span>, <span class="string">'age'</span>, <span class="number">10</span>])</span><br><span class="line">$query-&gt;andWhere([<span class="string">'like'</span>, <span class="string">'title'</span>, <span class="string">'hello-world'</span>]);</span><br><span class="line">$query-&gt;orWhere([<span class="string">'like'</span>,<span class="string">'name'</span>,<span class="string">'LuisEdware'</span>]);</span><br><span class="line"></span><br><span class="line">$query-&gt;filterWhere([<span class="string">'name'</span> =&gt; $name, <span class="string">'email'</span> =&gt; $email]);</span><br><span class="line">$query-&gt;andFilterWhere([<span class="string">'!='</span>, <span class="string">'id'</span>, <span class="number">1</span>]);</span><br><span class="line">$query-&gt;orFilterWhere([<span class="string">'status'</span> =&gt; <span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">$query-&gt;andFilterCompare(<span class="string">'name'</span>, <span class="string">'John Doe'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="orderby"><a class="header-anchor" href="#orderby"></a>orderBy</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$query-&gt;orderBy([</span><br><span class="line">	<span class="string">'id'</span> =&gt; SORT_ASC,</span><br><span class="line">	<span class="string">'name'</span> =&gt; SORT_DESC,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line">$query-&gt;orderBy(<span class="string">'id ASC, name DESC'</span>);</span><br><span class="line"></span><br><span class="line">$query-&gt;orderBy(<span class="string">'id ASC'</span>)-&gt;addOrderBy(<span class="string">'name DESC'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="groupby"><a class="header-anchor" href="#groupby"></a>groupBy</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$query-&gt;groupBy([<span class="string">'id'</span>,<span class="string">'status'</span>]);</span><br><span class="line"></span><br><span class="line">$query-&gt;groupBy(<span class="string">'id,status'</span>);</span><br><span class="line"></span><br><span class="line">$query-&gt;groupBy([<span class="string">'id'</span>,<span class="string">'status'</span>])-&gt;addGroupBy(<span class="string">'age'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="having"><a class="header-anchor" href="#having"></a>having</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$query-&gt;having([<span class="string">'status'</span>=&gt;<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">$query-&gt;having([<span class="string">'status'</span>=&gt;<span class="number">1</span>])-&gt;andHaving([<span class="string">'&gt;'</span>,<span class="string">'age'</span>,<span class="number">30</span>]);</span><br></pre></td></tr></table></figure>
<h2 id="limit-and-offset"><a class="header-anchor" href="#limit-and-offset"></a>limit and offset</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$query-&gt;limit(<span class="number">10</span>)-&gt;offset(<span class="number">20</span>);</span><br></pre></td></tr></table></figure>
<h2 id="join"><a class="header-anchor" href="#join"></a>join</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// ... LEFT JOIN `post` ON `post`.`user_id` = `user`.`id`</span></span><br><span class="line">$query-&gt;join(<span class="string">'LEFT JOIN'</span>,<span class="string">'post'</span>,<span class="string">'post.user_id = user.id'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="union"><a class="header-anchor" href="#union"></a>union</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$query1 = (<span class="keyword">new</span> \yii\db\Query())</span><br><span class="line">	-&gt;select(<span class="string">'id,category_id AS type, name'</span>)</span><br><span class="line">	-&gt;from(<span class="string">'post'</span>)</span><br><span class="line">	-&gt;limit(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">$query2 = (<span class="keyword">new</span> \yii\db\Query())</span><br><span class="line">	-&gt;select(<span class="string">'id,type,name'</span>)</span><br><span class="line">	-&gt;from(<span class="string">'user'</span>)</span><br><span class="line">	-&gt;limit(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">$query1-&gt;union($query2);</span><br></pre></td></tr></table></figure>
<h2 id="find"><a class="header-anchor" href="#find"></a>find</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// SELECT * FROM customer WHERE id = 123;</span></span><br><span class="line">$customer = Customer::findOne(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SELECT * FROM customer WHERE id IN (1,2,3,4,5)</span></span><br><span class="line">$customers = Customer::findOne([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]);</span><br><span class="line"></span><br><span class="line">$customer = Customer::findOne([<span class="string">'id'</span>=&gt;<span class="number">123</span>, <span class="string">'status'</span>=&gt; Customer::STATUS]);</span><br><span class="line">$customers = Customer::findAll([<span class="string">'id'</span>=&gt;<span class="number">123</span>, <span class="string">'status'</span>=&gt; Customer::STATUS_ACTIVE]);</span><br></pre></td></tr></table></figure>
<h2 id="relations"><a class="header-anchor" href="#relations"></a>Relations</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOrderItems</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(OrderItem::className(), [<span class="string">'order_id'</span> =&gt; <span class="string">'id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getItems</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(Item::className(), [<span class="string">'id'</span> =&gt; <span class="string">'item_id'</span>])</span><br><span class="line">            -&gt;via(<span class="string">'orderItems'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$items = $order-&gt;items;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$customers = Customer::find()-&gt;with(<span class="string">'orders.items'</span>)-&gt;all();</span><br><span class="line"><span class="comment">// no SQL executed</span></span><br><span class="line">$items = $customers[<span class="number">0</span>]-&gt;orders[<span class="number">0</span>]-&gt;items;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 PHP 函数 array_walk 的一些想法</title>
    <url>/2016/11/22/%E5%85%B3%E4%BA%8E-PHP-%E5%87%BD%E6%95%B0-array-walk-%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</url>
    <content><![CDATA[<h2 id="array-walk"><a class="header-anchor" href="#array-walk"></a>array_walk</h2>
<p>(PHP 4, PHP 5, PHP 7)<br>
array_walk — 使用用户自定义函数对数组中的每个元素做回调处理</p>
<h2 id="说明"><a class="header-anchor" href="#说明"></a>说明</h2>
<p><code>bool array_walk ( array &amp;$array , callable $callback [, mixed $userdata = NULL ] )</code></p>
<p>将用户自定义函数 funcname 应用到 array 数组中的每个单元。</p>
<p>array_walk() 不会受到 array 内部数组指针的影响。array_walk() 会遍历整个数组而不管指针的位置。</p>
<h2 id="参数"><a class="header-anchor" href="#参数"></a>参数</h2>
<ul>
<li>array
<ul>
<li>输入的数组。</li>
</ul>
</li>
<li>callback
<ul>
<li>典型情况下 callback 接受两个参数。array 参数的值作为第一个，键名作为第二个。</li>
</ul>
</li>
<li>Note:
<ul>
<li>如果 callback 需要直接作用于数组中的值，则给 callback 的第一个参数指定为引用。这样任何对这些单元的改变也将会改变原始数组本身。</li>
</ul>
</li>
<li>Note:
<ul>
<li>参数数量超过预期，传入内置函数 (例如 strtolower())， 将抛出警告，所以不适合当做 funcname。<br>
只有 array 的值才可以被改变，用户不应在回调函数中改变该数组本身的结构。例如增加/删除单元，unset 单元等等。如果 array_walk() 作用的数组改变了，则此函数的的行为未经定义，且不可预期。</li>
</ul>
</li>
<li>userdata
<ul>
<li>如果提供了可选参数 userdata，将被作为第三个参数传递给 callback funcname。</li>
</ul>
</li>
</ul>
<h2 id="返回值"><a class="header-anchor" href="#返回值"></a>返回值</h2>
<p>成功时返回 TRUE， 或者在失败时返回 FALSE。</p>
<h2 id="范例"><a class="header-anchor" href="#范例"></a>范例</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$graphics_card = [</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'华硕'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX980(Ti)'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">1</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'技嘉'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX970'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'微星'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX960'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">1</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'七彩虹'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX950'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">    ],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">array_walk($graphics_card, <span class="function"><span class="keyword">function</span><span class="params">(&amp;$item)</span></span>&#123;</span><br><span class="line">    $item[<span class="string">'brand'</span>] = <span class="string">'按摩店'</span>;</span><br><span class="line">    $item[<span class="string">'model'</span>] = <span class="string">'1080'</span>;</span><br><span class="line">&#125;);</span><br><span class="line">var_dump($graphics_card);</span><br><span class="line"></span><br><span class="line">array_map(<span class="function"><span class="keyword">function</span><span class="params">($key)</span> <span class="title">use</span> <span class="params">(&amp;$graphics_card)</span> </span>&#123;</span><br><span class="line">    $graphics_card[$key][<span class="string">'brand'</span>] = <span class="string">'英伟达'</span>;</span><br><span class="line">    $graphics_card[$key][<span class="string">'model'</span>] = <span class="string">'泰坦'</span>;</span><br><span class="line">&#125;, array_keys($graphics_card));</span><br><span class="line">var_dump($graphics_card);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 PHP 函数 array_filter 的一些想法</title>
    <url>/2016/11/21/%E5%85%B3%E4%BA%8E-PHP-%E5%87%BD%E6%95%B0-array-filter-%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</url>
    <content><![CDATA[<h2 id="array-filter"><a class="header-anchor" href="#array-filter"></a>array_filter</h2>
<p>(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7)<br>
array_filter — 用回调函数过滤数组中的单元</p>
<h2 id="说明"><a class="header-anchor" href="#说明"></a>说明</h2>
<p><code>array array_filter ( array $array [, callable $callback [, int $flag = 0 ]] )</code></p>
<p>依次将 array 数组中的每个值传递到 callback 函数。如果 callback 函数返回 TRUE，则 input 数组的当前值会被包含在返回的结果数组中。数组的键名保留不变。</p>
<h2 id="参数"><a class="header-anchor" href="#参数"></a>参数</h2>
<ul>
<li>array
<ul>
<li>要循环的数组</li>
</ul>
</li>
<li>callback
<ul>
<li>使用的回调函数</li>
<li>如果没有提供 callback 函数， 将删除 input 中所有等值为 FALSE 的条目。更多信息见转换为布尔值。</li>
</ul>
</li>
<li>flag
<ul>
<li>决定callback接收的参数形式:
<ul>
<li>ARRAY_FILTER_USE_KEY - callback接受键名作为的唯一参数</li>
<li>ARRAY_FILTER_USE_BOTH - callback同时接受键名和键值</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="返回值"><a class="header-anchor" href="#返回值"></a>返回值</h2>
<p>返回过滤后的数组。</p>
<h2 id="范例"><a class="header-anchor" href="#范例"></a>范例</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$graphics_card = [</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'华硕'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX980(Ti)'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">1</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'技嘉'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX970'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'微星'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX960'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">1</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'七彩虹'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX950'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">    ],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$data = [</span><br><span class="line">    <span class="string">'int'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">    <span class="string">'null'</span>=&gt;<span class="keyword">null</span>,</span><br><span class="line">    <span class="string">'bool'</span>=&gt;<span class="keyword">false</span>,</span><br><span class="line">    <span class="string">'string'</span>=&gt;<span class="string">'hello'</span>,</span><br><span class="line">    <span class="string">'number'</span>=&gt;<span class="number">506510463</span>,</span><br><span class="line">    <span class="string">'int-string'</span>=&gt;<span class="string">'0'</span>,</span><br><span class="line">    <span class="string">'null-string'</span>=&gt;<span class="string">''</span>,</span><br><span class="line">];</span><br><span class="line">var_dump(array_filter($data));</span><br><span class="line"></span><br><span class="line">var_dump(array_filter($data, <span class="function"><span class="keyword">function</span> <span class="params">($value)</span> </span>&#123; <span class="keyword">if</span> (!<span class="keyword">empty</span>($value)) &#123;</span><br><span class="line">     <span class="keyword">return</span> $value;</span><br><span class="line"> &#125;&#125;));</span><br><span class="line"></span><br><span class="line">var_dump(array_filter($data, <span class="string">'strlen'</span>));</span><br><span class="line"></span><br><span class="line">var_dump(array_map(<span class="string">'intval'</span>, $data));</span><br><span class="line"></span><br><span class="line">var_dump(array_map(<span class="function"><span class="keyword">function</span> <span class="params">($value)</span> </span>&#123; <span class="keyword">if</span> (!<span class="keyword">empty</span>($value)) &#123;</span><br><span class="line">    <span class="keyword">return</span> $value;</span><br><span class="line">&#125;&#125;, $data));</span><br><span class="line"></span><br><span class="line">var_dump(array_filter(array_map(<span class="function"><span class="keyword">function</span> <span class="params">($value)</span> </span>&#123; <span class="keyword">if</span> ($value[<span class="string">'status'</span>]===<span class="number">1</span>) &#123;</span><br><span class="line">     <span class="keyword">return</span> $value[<span class="string">'brand'</span>].$value[<span class="string">'model'</span>];</span><br><span class="line"> &#125;&#125;, $graphics_card)));</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 PHP 函数 array_map 的一些想法</title>
    <url>/2016/11/21/%E5%85%B3%E4%BA%8E-PHP-%E5%87%BD%E6%95%B0-array-map-%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</url>
    <content><![CDATA[<h2 id="array-map"><a class="header-anchor" href="#array-map"></a>array_map</h2>
<p>array_map - 为数组的每个元素应用回调函数</p>
<h2 id="说明"><a class="header-anchor" href="#说明"></a>说明</h2>
<p><code>array array_map(callable $callback, array $array1[, array $...])</code></p>
<p>array_map()：返回数组，是为 array1 每个元素应用 callback函数之后的数组。 callback 函数形参的数量和传给 array_map() 数组数量，两者必须一样。</p>
<h2 id="参数"><a class="header-anchor" href="#参数"></a>参数</h2>
<ul>
<li>callback
<ul>
<li>回调函数，应用到每个数组里的元素</li>
</ul>
</li>
<li>array1
<ul>
<li>数组，遍历运行 callback 函数</li>
</ul>
</li>
<li>…
<ul>
<li>数据列表，每个都遍历运行 callback 函数</li>
</ul>
</li>
</ul>
<h2 id="范例"><a class="header-anchor" href="#范例"></a>范例</h2>
<h3 id="array-map-实现-foreach-的效果"><a class="header-anchor" href="#array-map-实现-foreach-的效果"></a>array_map 实现 foreach 的效果</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphicsCard</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $brand;</span><br><span class="line">    <span class="keyword">public</span> $model;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($brand, $model)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;brand = $brand;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;model = $model;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$graphics_card = [</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'华硕'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX980(Ti)'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">1</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'技嘉'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX970'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'微星'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX960'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">1</span>,</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">'brand'</span>=&gt;<span class="string">'七彩虹'</span>,</span><br><span class="line">        <span class="string">'model'</span>=&gt;<span class="string">'GTX950'</span>,</span><br><span class="line">        <span class="string">'status'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">    ],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$graphics_card2 = [];</span><br><span class="line"><span class="keyword">foreach</span> ($graphics_card <span class="keyword">as</span> $value) &#123;</span><br><span class="line">    $graphics_card2[] = <span class="keyword">new</span> GraphicsCard($value[<span class="string">'brand'</span>], $value[<span class="string">'model'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Demo 1</span></span><br><span class="line">$demoA1 = $graphics_card;</span><br><span class="line">$demoA2 = $graphics_card2;</span><br><span class="line"><span class="keyword">foreach</span> ($demoA1 <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">    $demoA1[$key][<span class="string">'model'</span>] = <span class="string">'1080'</span>;</span><br><span class="line">    $demoA1[$key][<span class="string">'brand'</span>] = <span class="string">'按摩店'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($demoA2 <span class="keyword">as</span> $key =&gt; $item) &#123;</span><br><span class="line">    $demoA2[$key]-&gt;brand = <span class="string">'按摩店'</span>;</span><br><span class="line">    $demoA2[$key]-&gt;model = <span class="string">'1080'</span>;</span><br><span class="line">&#125;</span><br><span class="line">var_dump($demoA1);</span><br><span class="line">var_dump($demoA2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Demo 2</span></span><br><span class="line">$demoB1 = $graphics_card;</span><br><span class="line">$demoB2 = $graphics_card2;</span><br><span class="line">$demoB1 = array_map(<span class="function"><span class="keyword">function</span> <span class="params">($value)</span> </span>&#123;</span><br><span class="line">    $value[<span class="string">'brand'</span>] = <span class="string">'按摩店'</span>;</span><br><span class="line">    $value[<span class="string">'model'</span>] = <span class="string">'1080'</span>;</span><br><span class="line">    <span class="keyword">return</span> $value;</span><br><span class="line">&#125;, $demoB1);</span><br><span class="line">array_map(<span class="function"><span class="keyword">function</span> <span class="params">($value)</span> </span>&#123;</span><br><span class="line">    $value-&gt;brand = <span class="string">'按摩店'</span>;</span><br><span class="line">    $value-&gt;model = <span class="string">'1080'</span>;</span><br><span class="line">&#125;, $demoB2);</span><br><span class="line">var_dump($demoB1);</span><br><span class="line">var_dump($demoB2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Demo 3</span></span><br><span class="line">$demoC1 = $graphics_card;</span><br><span class="line">$demoC2 = $graphics_card2;</span><br><span class="line">array_map(<span class="function"><span class="keyword">function</span> <span class="params">($key, $value)</span> <span class="title">use</span> <span class="params">(&amp;$demoC1)</span> </span>&#123;</span><br><span class="line">    $demoC1[$key][<span class="string">'brand'</span>] = <span class="string">'按摩店'</span>;</span><br><span class="line">    $demoC1[$key][<span class="string">'model'</span>] = <span class="string">'1080'</span>;</span><br><span class="line">&#125;, array_keys($demoC1), $demoC1);</span><br><span class="line">array_map(<span class="function"><span class="keyword">function</span> <span class="params">($key, $value)</span> <span class="title">use</span> <span class="params">($demoC2)</span> </span>&#123;</span><br><span class="line">    $demoC2[$key]-&gt;brand = <span class="string">'按摩店'</span>;</span><br><span class="line">    $demoC2[$key]-&gt;model = <span class="string">'1080'</span>;</span><br><span class="line">&#125;, array_keys($demoC2), $demoC2);</span><br><span class="line">var_dump($demoC1);</span><br><span class="line">var_dump($demoC2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Demo 4</span></span><br><span class="line">$brands = [];</span><br><span class="line">$models = [];</span><br><span class="line"><span class="keyword">foreach</span> ($graphics_card <span class="keyword">as</span> $item) &#123;</span><br><span class="line">    $brands[] = $item[<span class="string">'brand'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$models = array_map(<span class="function"><span class="keyword">function</span> <span class="params">($value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $value[<span class="string">'model'</span>];</span><br><span class="line">&#125;, $graphics_card);</span><br><span class="line"></span><br><span class="line">var_dump($brands);</span><br><span class="line">var_dump($models);</span><br><span class="line"><span class="comment">// 也可以使用 array_column 来实现 Demo 4 的效果</span></span><br><span class="line">var_dump(array_column($graphics_card, <span class="string">'brand'</span>));</span><br><span class="line">var_dump(array_column($graphics_card, <span class="string">'model'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Demo5</span></span><br><span class="line">$items = [</span><br><span class="line">    <span class="string">'item1'</span>=&gt;<span class="string">'Hello'</span>,</span><br><span class="line">    <span class="string">'item2'</span>=&gt;<span class="string">'World'</span>,</span><br><span class="line">    <span class="string">'item3'</span>=&gt;<span class="string">'Luis'</span>,</span><br><span class="line">    <span class="string">'item4'</span>=&gt;<span class="string">'Edware'</span>,</span><br><span class="line">    <span class="string">'item5'</span>=&gt;<span class="string">'Ann'</span>,</span><br><span class="line">    <span class="string">'item6'</span>=&gt;<span class="string">'Eason'</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($items <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">	<span class="keyword">if</span>($key === <span class="string">'item1'</span>)&#123;</span><br><span class="line">		$items[$key] = <span class="string">'World'</span>;</span><br><span class="line">	&#125;<span class="keyword">elseif</span>($key === <span class="string">'item3'</span>)&#123;</span><br><span class="line">		$items[$key] = <span class="string">'Edware'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">var_dump($items);</span><br><span class="line"></span><br><span class="line">$items_to_modify = [<span class="string">'item1'</span>=&gt;<span class="string">'Hello'</span>,<span class="string">'item3'</span>=&gt;<span class="string">'Luis'</span>];</span><br><span class="line">array_map(<span class="function"><span class="keyword">function</span><span class="params">($key,$value)</span> <span class="title">use</span><span class="params">(&amp;$items)</span> </span>&#123;</span><br><span class="line">    $items[$key] = $value;</span><br><span class="line">&#125;,array_keys($items_to_modify),$items_to_modify);</span><br><span class="line">var_dump($items);</span><br></pre></td></tr></table></figure>
<h2 id="使用-array-map-实现-array-column-的效果"><a class="header-anchor" href="#使用-array-map-实现-array-column-的效果"></a>使用 array_map 实现 array_column 的效果</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">array_pluck</span><span class="params">($key, $input)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_array($key) || !is_array($input)) <span class="keyword">return</span> <span class="keyword">array</span>();</span><br><span class="line">    $array = array_map(<span class="function"><span class="keyword">function</span><span class="params">($value)</span> <span class="title">use</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(array_key_exists($key, $value)) <span class="keyword">return</span> $value[$key];</span><br><span class="line">    &#125;,$input);</span><br><span class="line">    <span class="keyword">return</span> $array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(array_pluck(<span class="string">'brand'</span>,$graphics_card));</span><br><span class="line">var_dump(array_column($graphics_card,<span class="string">'brand'</span>));</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 PHPStorm 的 Live Templates 封装常用代码</title>
    <url>/2016/11/19/%E4%BD%BF%E7%94%A8-PHPStorm-%E7%9A%84-Live-Templates-%E5%B0%81%E8%A3%85%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h2 id="php-template-group"><a class="header-anchor" href="#php-template-group"></a>PHP Template Group</h2>
<h3 id="fore"><a class="header-anchor" href="#fore"></a>fore</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">foreach ($ITERABLE$ as $VAR_VALUE$) &#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="forek"><a class="header-anchor" href="#forek"></a>forek</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">foreach ($ITERABLE$ as $VAR_KEY$ =&gt; $VAR_VALUE$) &#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="prif"><a class="header-anchor" href="#prif"></a>prif</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private function $NAME$($PARAMETERS$)&#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="prisf"><a class="header-anchor" href="#prisf"></a>prisf</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private static function $NAME$($PARAMETERS$)&#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="prof"><a class="header-anchor" href="#prof"></a>prof</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected function $NAME$($PARAMETERS$)&#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="prosf"><a class="header-anchor" href="#prosf"></a>prosf</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected static function $NAME$($PARAMETERS$)&#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="pubf"><a class="header-anchor" href="#pubf"></a>pubf</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function $NAME$($PARAMETERS$)&#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="pubsf"><a class="header-anchor" href="#pubsf"></a>pubsf</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static function $NAME$($PARAMETERS$)&#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="thr"><a class="header-anchor" href="#thr"></a>thr</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">throw new $END$</span><br></pre></td></tr></table></figure>
<h3 id="tryc"><a class="header-anchor" href="#tryc"></a>tryc</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    $ITERABLE$</span><br><span class="line">&#125; catch (\$Exception$ $e) &#123;</span><br><span class="line">    $END$</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="none"><a class="header-anchor" href="#none"></a></h2>
]]></content>
  </entry>
  <entry>
    <title>Yii 框架之工具篇</title>
    <url>/2016/11/03/Yii-%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%B7%A5%E5%85%B7%E7%AF%87/</url>
    <content><![CDATA[<h2 id="composer-工具"><a class="header-anchor" href="#composer-工具"></a>Composer 工具</h2>
<h2 id="debug-工具"><a class="header-anchor" href="#debug-工具"></a>Debug 工具</h2>
<h2 id="gii-工具"><a class="header-anchor" href="#gii-工具"></a>GII 工具</h2>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii</tag>
      </tags>
  </entry>
  <entry>
    <title>Yii 框架之安全篇</title>
    <url>/2016/10/29/Yii-%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%AE%89%E5%85%A8%E7%AF%87/</url>
    <content><![CDATA[<h2 id="xss-攻击和防范之存储"><a class="header-anchor" href="#xss-攻击和防范之存储"></a>XSS 攻击和防范之存储</h2>
<p>XSS 全称</p>
<p>XSS 概念</p>
<p>XSS 是一种经常出现在 Web 应用中的计算机安全漏洞，它允许恶意 Web 用户将代码植入到<br>
提供给其它用户使用的页面中，从而对用户进行攻击</p>
<h3 id="如何使用-xss-攻击盗取用户账号"><a class="header-anchor" href="#如何使用-xss-攻击盗取用户账号"></a>如何使用 XSS 攻击盗取用户账号</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var cookie = document.cookie;</span><br><span class="line">window.location.href = &quot;http://127.0.0.1/index.php?cookie=&quot;+cookie;</span><br></pre></td></tr></table></figure>
<ul>
<li>问题如下：document.cookie 获取得到的 cookie 是什么样的</li>
<li>index.php 是如何处理 cookie 值的</li>
<li>有了 cookie 怎么就能进行盗取账号的</li>
</ul>
<p>httponly 阻止 js 读取 cookie</p>
<p>哪一段 js 代码能够自动转账</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementById(&apos;ipt-search-key&apos;).value=&apos;withyz@xx.com&apos;;</span><br><span class="line">document.getElementById(&apos;amount&apos;).value=&apos;100&apos;;</span><br><span class="line">document.getElementById(&apos;reason&apos;).value=&apos;劫富济贫&apos;;</span><br><span class="line">document.getElementsByClassName(&apos;ui-button-text&apos;)[0].click();</span><br></pre></td></tr></table></figure>
<p>如何把 js 注入到转账页面中</p>
<h2 id="xss-攻击和防范之反射"><a class="header-anchor" href="#xss-攻击和防范之反射"></a>XSS 攻击和防范之反射</h2>
<p>现代现浏览器(chrome)对于反射型XSS有一定防护<br>
手动关闭：\Yii::$app-&gt;response-&gt;headers-&gt;add(‘X-XSS-Protection’, ‘0’);</p>
<p>HTML 实体编码<br>
URL 编码</p>
<h2 id="xss-攻击和防范之蠕虫"><a class="header-anchor" href="#xss-攻击和防范之蠕虫"></a>XSS 攻击和防范之蠕虫</h2>
<h3 id="yii-如何防范-xss"><a class="header-anchor" href="#yii-如何防范-xss"></a>Yii 如何防范 XSS</h3>
<p>转码防范<br>
\yii\helpers\Html::encode($script);</p>
<p>过滤防范<br>
\yii\helpers\HtmlPurifier::process($js);</p>
<h2 id="csrf-攻击和防范"><a class="header-anchor" href="#csrf-攻击和防范"></a>CSRF 攻击和防范</h2>
<p>跨站请求伪造</p>
<p>get型的crtf攻击<br>
构造url, 诱使用户点击</p>
<p>透过例子能够看出，攻击者并不能通过CSRF攻击来直接获取用户的账户控制权，也不能直接窃取用户的任何信息。他们能做到的，是欺骗用户浏览器，让其以用户的名义执行操作。</p>
<p>yii 框架 csrf token 验证过程</p>
<p>检查Referer字段<br>
HTTP头中有一个Referer字段，这个字段用以标明请求来源于哪个地址。在处理敏感数据请求时，通常来说，Referer字段应和请求的地址位于同一域名下。以上文银行操作为例，Referer字段地址通常应该是转账按钮所在的网页地址，应该也位于www.examplebank.com之下。而如果是CSRF攻击传来的请求，Referer字段会是包含恶意网址的地址，不会位于www.examplebank.com之下，这时候服务器就能识别出恶意的访问。<br>
这种办法简单易行，工作量低，仅需要在关键访问处增加一步校验。但这种办法也有其局限性，因其完全依赖浏览器发送正确的Referer字段。虽然http协议对此字段的内容有明确的规定，但并无法保证来访的浏览器的具体实现，亦无法保证浏览器没有安全漏洞影响到此字段。并且也存在攻击者攻击某些浏览器，篡改其Referer字段的可能。<br>
添加校验token<br>
由于CSRF的本质在于攻击者欺骗用户去访问自己设置的地址，所以如果要求在访问敏感数据请求时，要求用户浏览器提供不保存在cookie中，并且攻击者无法伪造的数据作为校验，那么攻击者就无法再执行CSRF攻击。这种数据通常是表单中的一个数据项。服务器将其生成并附加在表单中，其内容是一个伪乱数。当客户端通过表单提交请求时，这个伪乱数也一并提交上去以供校验。正常的访问时，客户端浏览器能够正确得到并传回这个伪乱数，而通过CSRF传来的欺骗性攻击中，攻击者无从事先得知这个伪乱数的值，服务器端就会因为校验token的值为空或者错误，拒绝这个可疑请求。</p>
<h2 id="sql-注入和防范"><a class="header-anchor" href="#sql-注入和防范"></a>SQL 注入和防范</h2>
<p>addslashes() 转义函数 防范 SQL 注入</p>
<p>Sql注入：将要执行的sql语句采用拼接的方式组装时，就sql注入的可能；<br>
原本要查询的字符串在拼接后发生发“越狱”，部分字符串被数据库识别成可执行语句，<br>
导致意外的操作和查询结果<br>
防范：1，屏蔽关键字和敏感词，有影响业务逻辑的可能；<br>
2， 对传入变量转义，避免变量的内容越狱</p>
<p>绕过转义：<br>
char(0xdf)/’,在utf-8下会变成β/’,<br>
而在gbk下由于汉字是2个字节组成；在数据中将变成 運’,单引号逃过了被转义</p>
<p>使用PDO统一数据库接口，可以无痛切换；<br>
使用占位符防范SQL注入</p>
<h2 id="文件上传漏洞"><a class="header-anchor" href="#文件上传漏洞"></a>文件上传漏洞</h2>
<p>文件上传漏洞<br>
如果后台对文件上传审查不严，导致php代码上传后被执行，可进行遍历文件等操作使源码泄露</p>
<p>用 fiddler 可以拦截请求,然后修改请求的内容,比如图片中的文件名,修改成如上形式后,会生成一个php文件,然后在上传后的目录执行php文件会造成危害</p>
<p>保存上传过来的文件名的时候不要用用户本来的名称,容易在中途被非法修改,从而变成.php这些可执行文件,造成损害</p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii</tag>
      </tags>
  </entry>
  <entry>
    <title>Yii 框架之扩展篇</title>
    <url>/2016/10/29/Yii-%E6%A1%86%E6%9E%B6%E4%B9%8B%E6%89%A9%E5%B1%95%E7%AF%87/</url>
    <content><![CDATA[<h2 id="yii-扩展分类"><a class="header-anchor" href="#yii-扩展分类"></a>Yii 扩展分类</h2>
<ul>
<li>模块化</li>
<li>事件机制</li>
<li>MixIN （混合、多重继承）</li>
<li>依赖注入</li>
</ul>
<h2 id="模块化技术"><a class="header-anchor" href="#模块化技术"></a>模块化技术</h2>
<p>模块化：通过对业务详细拆分，分化出不同的小模块，<br>
可以通过思维导图进行梳理<br>
系统加载模块时通过配置文件进行控制，若模块暂不可用可于配置中标明以通知系统模块暂不可用</p>
<p>使用 Gii 的 Module Generator</p>
<p>模块化实现：<br><br>
1、父级模块化（1级）<br><br>
通过gii的modules生成对应的子模块（2级），<br><br>
然后修改config.php中的web.php的配置信息，添加以下信息(例子)：<br><br>
‘modules’=&gt;[‘article’=&gt;‘app/modules/article/Article’]<br><br>
访问方式，例如：localhost/basic/index.php?r=article/default/index<br>
2、2级模块化（1级），类推<br><br>
通过gii的modules生成对应的子模块（3级），<br><br>
然后修改该模块下的.php配置信息，添加以下信息(例子)：<br><br>
在actionInit中添加如下信息：<br><br>
$this-&gt;modules = [‘category’=&gt;[‘class’=&gt;‘app/modules/article/modules/test/Test’]];<br>
访问方式，例如：localhost/basic/index.php?r=article/test/default/index</p>
<h2 id="事件机制"><a class="header-anchor" href="#事件机制"></a>事件机制</h2>
<?php
namespace app\controllers;
use yii\web\Controller;
use vendor\animal\Cat;
use vendor\animal\Mourse;
use vendor\animal\Dog;
use \yii\base\Event;
class AnimalController extends Controller
{
    public function actionIndex(){
        $cat = new Cat();
        $cat2 = new Cat();
        $mourse = new Mourse();
        $dog = new Dog();
/*
        //案例一
        //实现猫叫，老鼠跑绑定事件,dog关注
        $cat->on('miao',[$mourse,'run']);  //on()方法来自于Componment,on()方法实现绑定事件
        //猫叫的时候给老鼠传递一些参数信息

        $cat->on('miao',[$dog,'look']);//dog关注cat的miao
#-*/
/*
        //案例二
        //实现猫叫，老鼠跑绑定事件,dog关注后,取消关注
        $cat->on('miao',[$mourse,'run']);  //on()方法来自于Componment,on()方法实现绑定事件
        //猫叫的时候给老鼠传递一些参数信息

        $cat->on('miao',[$dog,'look']);//dog关注cat的miao
        $cat->off('miao',[$dog,'look']);//dog取消关注cat的miao
#---*/


## MixIn

Behavior

## 依赖注入


]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii</tag>
      </tags>
  </entry>
  <entry>
    <title>Yii 框架之基础篇</title>
    <url>/2016/10/25/Yii-%E6%A1%86%E6%9E%B6%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
    <content><![CDATA[<h2 id="安装"><a class="header-anchor" href="#安装"></a>安装</h2>
<p>检查当前 PHP 环境是否满足 Yii 最基本需求：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php requirements.php</span><br></pre></td></tr></table></figure>
<p>通过 Composer 进行安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 安装基础应用模板</span><br><span class="line">sudo composer create-project --prefer-dist yiisoft/yii2-app-basic yii</span><br><span class="line"></span><br><span class="line">// 安装高级应用模板</span><br><span class="line">sudo composer create-project --prefer-dist yiisoft/yii2-app-advanced advanced</span><br></pre></td></tr></table></figure>
<p>如果安装的过程中提示需要 Github Token，则进入以下网址生成 Token</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://github.com/settings/tokens</span><br></pre></td></tr></table></figure>
<h2 id="packages"><a class="header-anchor" href="#packages"></a>Packages</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">// AdminLte 后台响应模板</span><br><span class="line">composer require dmstr/yii2-adminlte-asset "2.*"</span><br><span class="line"></span><br><span class="line">// Yii2 RBAC 的一套管理工具，实现了漂亮的界面和完整的权限管理功能</span><br><span class="line">composer require mdmsoft/yii2-admin "2.x-dev"</span><br></pre></td></tr></table></figure>
<h2 id="控制器"><a class="header-anchor" href="#控制器"></a>控制器</h2>
<h3 id="操作"><a class="header-anchor" href="#操作"></a>操作</h3>
<p>控制器由操作组成，它是执行终端用户请求的最基础的单元，一个控制器可有一个或多个操作。</p>
<p>操作分为独立操作和内联操作</p>
<p>内联操作容易创建，在无需重用的情况下优先使用； 独立操作相反，主要用于多个控制器重用， 或重构为扩展</p>
<h3 id="路由"><a class="header-anchor" href="#路由"></a>路由</h3>
<p>终端用户通过所谓的路由寻找到操作，路由是包含以下部分的字符串：</p>
<ul>
<li>模块 ID</li>
<li>控制器 ID</li>
<li>操作 ID</li>
</ul>
<p>路由两种主要的格式</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认目录下的路由</span></span><br><span class="line">ControllerID/ActionID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模块目录下的路由</span></span><br><span class="line">ModuleID/ControllerID/ActionID</span><br></pre></td></tr></table></figure>
<h3 id="部署"><a class="header-anchor" href="#部署"></a>部署</h3>
<p>在应用配置文件 <code>web.php</code> 配置默认控制器，当请求没有指定路由，该属性值作为路由使用:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">	<span class="string">'defaultRoute'</span> =&gt; <span class="string">'main'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>在应用配置文件 <code>web.php</code> 强制控制器 ID 和类名对应，通常用在使用第三方不能掌控类名的控制器上</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">    <span class="string">'controllerMap'</span> =&gt; [</span><br><span class="line">        <span class="comment">// 用类名申明 "account" 控制器</span></span><br><span class="line">        <span class="string">'account'</span> =&gt; <span class="string">'app\controllers\UserController'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用配置数组申明 "article" 控制器</span></span><br><span class="line">        <span class="string">'article'</span> =&gt; [</span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'app\controllers\PostController'</span>,</span><br><span class="line">            <span class="string">'enableCsrfValidation'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h3 id="操作结果"><a class="header-anchor" href="#操作结果"></a>操作结果</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 返回响应对象，进行页面跳转</span><br><span class="line">$this-&gt;redirect(&apos;http://example.com&apos;);</span><br></pre></td></tr></table></figure>
<h3 id="操作参数"><a class="header-anchor" href="#操作参数"></a>操作参数</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">namespace app\controllers;</span><br><span class="line"></span><br><span class="line">use yii\web\Controller;</span><br><span class="line"></span><br><span class="line">class PostController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function actionView(int $id, $version = null)</span><br><span class="line">    &#123;</span><br><span class="line">        // ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>操作参数会被不同的参数填入，如下所示：</p>
<ul>
<li><a href="http://hostname/index.php?r=post/view&amp;id=123:" target="_blank" rel="noopener">http://hostname/index.php?r=post/view&amp;id=123:</a> $id 会填入’123’， $version 仍为 null 空因为没有version请求参数;</li>
<li><a href="http://hostname/index.php?r=post/view&amp;id=123&amp;version=2:" target="_blank" rel="noopener">http://hostname/index.php?r=post/view&amp;id=123&amp;version=2:</a> $id 和 $version 分别填入 ‘123’ 和 ‘2’`；</li>
<li><a href="http://hostname/index.php?r=post/view:" target="_blank" rel="noopener">http://hostname/index.php?r=post/view:</a> 会抛出yii\web\BadRequestHttpException 异常 因为请求没有提供参数给必须赋值参数$id；</li>
<li><a href="http://hostname/index.php?r=post/view&amp;id%5B%5D=123:" target="_blank" rel="noopener">http://hostname/index.php?r=post/view&amp;id[]=123:</a> 会抛出yii\web\BadRequestHttpException 异常 因为$id 参数收到数字值 [‘123’]而不是字符串.</li>
</ul>
<h3 id="默认操作"><a class="header-anchor" href="#默认操作"></a>默认操作</h3>
<p>每个控制器都有一个由 yii\base\Controller::defaultAction 属性指定的默认操作，当路由只包含控制器ID， 会使用所请求的控制器的默认操作。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SiteController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $defaultAction = <span class="string">'home'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionHome</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;render(<span class="string">'home'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="模型"><a class="header-anchor" href="#模型"></a>模型</h2>
<h3 id="属性"><a class="header-anchor" href="#属性"></a>属性</h3>
<p>模型通过属性来代表业务数据，每个属性像是模型的公有可访问属性，yii\base\Model::attributes() 指定模型所拥有的属性。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$model = <span class="keyword">new</span> \app\models\ContactForm;</span><br><span class="line"></span><br><span class="line"><span class="comment">// "name" 是ContactForm模型的属性</span></span><br><span class="line">$model-&gt;name = <span class="string">'example'</span>;</span><br><span class="line"><span class="keyword">echo</span> $model-&gt;name;</span><br></pre></td></tr></table></figure>
<p>模型实现了 ArrayAccess 和 ArrayIterator 接口，可以像数组单元项一样访问属性</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$model = <span class="keyword">new</span> \app\models\ContactForm;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 像访问数组单元项一样访问属性</span></span><br><span class="line">$model[<span class="string">'name'</span>] = <span class="string">'example'</span>;</span><br><span class="line"><span class="keyword">echo</span> $model[<span class="string">'name'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代器遍历模型</span></span><br><span class="line"><span class="keyword">foreach</span> ($model <span class="keyword">as</span> $name =&gt; $value) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$name: $value\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="属性标签"><a class="header-anchor" href="#属性标签"></a>属性标签</h3>
<p>如果你不想用自动生成的标签， 可以覆盖 yii\base\Model::attributeLabels() 方法明确指定属性标签，例如：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ContactForm</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $email;</span><br><span class="line">    <span class="keyword">public</span> $subject;</span><br><span class="line">    <span class="keyword">public</span> $body;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'name'</span> =&gt; <span class="string">'Your name'</span>,</span><br><span class="line">            <span class="string">'email'</span> =&gt; <span class="string">'Your email address'</span>,</span><br><span class="line">            <span class="string">'subject'</span> =&gt; <span class="string">'Subject'</span>,</span><br><span class="line">            <span class="string">'body'</span> =&gt; <span class="string">'Content'</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="场景"><a class="header-anchor" href="#场景"></a>场景</h3>
<p>模型可能在多个场景下使用，例如 User 模块可能会在收集用户登录输入，也可能会在用户注册时使用。在不同的场景下，模型可能会使用不同的业务规则和逻辑，例如 email 属性在注册时强制要求有，但在登陆时不需要。模型设置场景如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 场景作为属性来设置</span></span><br><span class="line">$model = <span class="keyword">new</span> User;</span><br><span class="line">$model-&gt;scenario = <span class="string">'login'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 场景通过构造初始化配置来设置</span></span><br><span class="line">$model = <span class="keyword">new</span> User([<span class="string">'scenario'</span> =&gt; <span class="string">'login'</span>]);</span><br></pre></td></tr></table></figure>
<p>场景设置活动属性和验证规则</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> SCENARIO_LOGIN = <span class="string">'login'</span>;</span><br><span class="line">    <span class="keyword">const</span> SCENARIO_REGISTER = <span class="string">'register'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">scenarios</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $scenarios = <span class="keyword">parent</span>::scenarios();</span><br><span class="line">        $scenarios[<span class="keyword">self</span>::SCENARIO_LOGIN] = [<span class="string">'username'</span>, <span class="string">'password'</span>];</span><br><span class="line">        $scenarios[<span class="keyword">self</span>::SCENARIO_REGISTER] = [<span class="string">'username'</span>, <span class="string">'email'</span>, <span class="string">'password'</span>];</span><br><span class="line">        <span class="keyword">return</span> $scenarios;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	    <span class="keyword">return</span> [</span><br><span class="line">	        <span class="comment">// 在"register" 场景下 username, email 和 password 必须有值</span></span><br><span class="line">	        [[<span class="string">'username'</span>, <span class="string">'email'</span>, <span class="string">'password'</span>], <span class="string">'required'</span>, <span class="string">'on'</span> =&gt; <span class="string">'register'</span>],</span><br><span class="line"></span><br><span class="line">	        <span class="comment">// 在 "login" 场景下 username 和 password 必须有值</span></span><br><span class="line">	        [[<span class="string">'username'</span>, <span class="string">'password'</span>], <span class="string">'required'</span>, <span class="string">'on'</span> =&gt; <span class="string">'login'</span>],</span><br><span class="line">	    ];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="块赋值"><a class="header-anchor" href="#块赋值"></a>块赋值</h3>
<p>块赋值只用一行代码将用户所有输入填充到一个模型，非常方便，它直接将输入数据对应填充到 yii\base\Model::attributes 属性。以下两段代码效果是相同的，都是将终端用户输入的表单数据赋值到 ContactForm 模型的属性，明显地前一段块赋值的代码比后一段代码简洁且不易出错。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 块赋值</span></span><br><span class="line">$model = <span class="keyword">new</span> \app\models\ContactForm;</span><br><span class="line">$model-&gt;attributes = \Yii::$app-&gt;request-&gt;post(<span class="string">'ContactForm'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通赋值</span></span><br><span class="line"></span><br><span class="line">$model = <span class="keyword">new</span> \app\models\ContactForm;</span><br><span class="line">$data = \Yii::$app-&gt;request-&gt;post(<span class="string">'ContactForm'</span>, []);</span><br><span class="line">$model-&gt;name = <span class="keyword">isset</span>($data[<span class="string">'name'</span>]) ? $data[<span class="string">'name'</span>] : <span class="keyword">null</span>;</span><br><span class="line">$model-&gt;email = <span class="keyword">isset</span>($data[<span class="string">'email'</span>]) ? $data[<span class="string">'email'</span>] : <span class="keyword">null</span>;</span><br><span class="line">$model-&gt;subject = <span class="keyword">isset</span>($data[<span class="string">'subject'</span>]) ? $data[<span class="string">'subject'</span>] : <span class="keyword">null</span>;</span><br><span class="line">$model-&gt;body = <span class="keyword">isset</span>($data[<span class="string">'body'</span>]) ? $data[<span class="string">'body'</span>] : <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure>
<h3 id="对象转换数组"><a class="header-anchor" href="#对象转换数组"></a>对象转换数组</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$post = \app\models\Post::findOne(<span class="number">100</span>);</span><br><span class="line">$array = $post-&gt;attributes;</span><br></pre></td></tr></table></figure>
<h3 id="字段"><a class="header-anchor" href="#字段"></a>字段</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$array = $model-&gt;toArray([], [<span class="string">'prettyName'</span>, <span class="string">'fullAddress'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 明确列出每个字段，特别用于你想确保数据表或模型</span></span><br><span class="line"><span class="comment">// 属性改变不会导致你的字段改变(保证后端的API兼容)。</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fields</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="comment">// 字段名和属性名相同</span></span><br><span class="line">        <span class="string">'id'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字段名为 "email"，对应属性名为 "email_address"</span></span><br><span class="line">        <span class="string">'email'</span> =&gt; <span class="string">'email_address'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字段名为 "name", 值通过PHP代码返回</span></span><br><span class="line">        <span class="string">'name'</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;first_name . <span class="string">' '</span> . <span class="keyword">$this</span>-&gt;last_name;</span><br><span class="line">        &#125;,</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 过滤掉一些字段，特别用于你想</span></span><br><span class="line"><span class="comment">// 继承父类实现并不想用一些敏感字段</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fields</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $fields = <span class="keyword">parent</span>::fields();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 去掉一些包含敏感信息的字段</span></span><br><span class="line">    <span class="keyword">unset</span>($fields[<span class="string">'auth_key'</span>], $fields[<span class="string">'password_hash'</span>], $fields[<span class="string">'password_reset_token'</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $fields;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="视图"><a class="header-anchor" href="#视图"></a>视图</h2>
<h3 id="控制器渲染视图的方法"><a class="header-anchor" href="#控制器渲染视图的方法"></a>控制器渲染视图的方法</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染一个视图名并使用一个布局返回到渲染结果</span></span><br><span class="line">yii\base\Controller::render();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染一个视图名并且不使用布局</span></span><br><span class="line">yii\base\Controller::renderPartial();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染一个视图名并且不使用布局，并注入所有注册的JS/CSS脚本和文件，通常使用在响应AJAX网页请求的情况下。</span></span><br><span class="line">yii\base\Controller::renderAjax();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染一个视图文件目录或别名下的视图文件。</span></span><br><span class="line">yii\base\Controller::renderFile();</span><br><span class="line"></span><br><span class="line">yii\base\Controller::renderContent();</span><br></pre></td></tr></table></figure>
<h3 id="小部件渲染视图的方法"><a class="header-anchor" href="#小部件渲染视图的方法"></a>小部件渲染视图的方法</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染一个视图名</span></span><br><span class="line">yii\base\Widget::render()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染一个视图文件目录或别名下的视图文件</span></span><br><span class="line">yii\base\Widget::renderFile()</span><br></pre></td></tr></table></figure>
<h3 id="视图中访问数据"><a class="header-anchor" href="#视图中访问数据"></a>视图中访问数据</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">this</span>-&gt;render(<span class="string">'视图名'</span>,[<span class="string">'key'</span>=&gt;$value]);</span><br><span class="line"></span><br><span class="line">echo $<span class="keyword">this</span>-&gt;key;</span><br></pre></td></tr></table></figure>
<h3 id="视图间共享数据"><a class="header-anchor" href="#视图间共享数据"></a>视图间共享数据</h3>
<p>yii\base\View 视图组件提供yii\base\View::params参数 属性来让不同视图共享数据。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$<span class="keyword">this</span>-&gt;params[<span class="string">'breadcrumbs'</span>][] = <span class="string">'About Us'</span>;</span><br></pre></td></tr></table></figure>
<h3 id="布局"><a class="header-anchor" href="#布局"></a>布局</h3>
<p>布局的渲染过程</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 该方法应在布局的开始处调用， 它触发表明页面开始的 yii\base\View::EVENT_BEGIN_PAGE 事件。</span></span><br><span class="line">yii\base\View::beginPage();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法应在布局的结尾处调用， 它触发表明页面结尾的 yii\base\View::EVENT_END_PAGE 时间。</span></span><br><span class="line">yii\base\View::endPage();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法应在HTML页面的&lt;head&gt;标签中调用， 它生成一个占位符，在页面渲染结束时会被注册的头部HTML代码 （如，link标签, meta标签）替换。</span></span><br><span class="line">yii\web\View::head();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该方法应在&lt;body&gt;标签的开始处调用， 它触发 yii\web\View::EVENT_BEGIN_BODY 事件并生成一个占位符， 会被注册的HTML代码（如JavaScript）在页面主体开始处替换。</span></span><br><span class="line">yii\web\View::beginBody();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法应在&lt;body&gt;标签的结尾处调用， 它触发 yii\web\View::EVENT_END_BODY 事件并生成一个占位符， 会被注册的HTML代码（如JavaScript）在页面主体结尾处替换。</span></span><br><span class="line">yii\web\View::endBody()</span><br></pre></td></tr></table></figure>
<p>布局中访问数据<br>
在布局中可访问两个预定义变量：$this 和 $content， 前者对应和普通视图类似的 yii\base\View 视图组件 后者包含调用 yii\base\Controller::render() 方法渲染内容视图的结果。</p>
<p>使用布局</p>
<ul>
<li>yii\base\Application::layout 管理所有控制器的布局</li>
<li>yii\base\Controller::layout 覆盖总布局来控制单个控制器布局</li>
</ul>
<p>嵌套布局</p>
<p>布局数据块</p>
<h3 id="使用视图组件"><a class="header-anchor" href="#使用视图组件"></a>使用视图组件</h3>
<h3 id="设置页面标题"><a class="header-anchor" href="#设置页面标题"></a>设置页面标题</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">$this</span>-&gt;title = <span class="string">'My page title'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;title&gt;<span class="meta">&lt;?</span>= Html::encode(<span class="keyword">$this</span>-&gt;title) <span class="meta">?&gt;</span>&lt;/title&gt;</span><br></pre></td></tr></table></figure>
<h3 id="注册-meta-元标签"><a class="header-anchor" href="#注册-meta-元标签"></a>注册 Meta 元标签</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">$this</span>-&gt;registerMetaTag([<span class="string">'name'</span> =&gt; <span class="string">'keywords'</span>, <span class="string">'content'</span> =&gt; <span class="string">'yii, framework, php'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="注册链接标签"><a class="header-anchor" href="#注册链接标签"></a>注册链接标签</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">$this</span>-&gt;registerLinkTag([</span><br><span class="line">	    <span class="string">'title'</span> =&gt; <span class="string">'Live News for Yii'</span>,</span><br><span class="line">	    <span class="string">'rel'</span> =&gt; <span class="string">'alternate'</span>,</span><br><span class="line">	    <span class="string">'type'</span> =&gt; <span class="string">'application/rss+xml'</span>,</span><br><span class="line">	    <span class="string">'href'</span> =&gt; <span class="string">'http://www.yiiframework.com/rss.xml/'</span>,</span><br><span class="line">	]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="视图事件"><a class="header-anchor" href="#视图事件"></a>视图事件</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 在控制器渲染文件开始时触发，该事件可设置 yii\base\ViewEvent::isValid 为 false 取消视图渲染。</span></span><br><span class="line">yii\base\View::EVENT_BEFORE_RENDER:</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在布局中调用 yii\base\View::beginPage() 时触发，该事件可获取 yii\base\ViewEvent::output 的渲染结果，可修改该属性来修改渲染结果。</span></span><br><span class="line">yii\base\View::EVENT_AFTER_RENDER:</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在布局调用 yii\base\View::beginPage() 时触发</span></span><br><span class="line">yii\base\View::EVENT_BEGIN_PAGE:</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在布局调用 yii\base\View::endPage() 是触发</span></span><br><span class="line">yii\base\View::EVENT_END_PAGE:</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在布局调用 yii\web\View::beginBody() 时触发</span></span><br><span class="line">yii\web\View::EVENT_BEGIN_BODY:</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在布局调用 yii\web\View::endBody() 时触发</span></span><br><span class="line">yii\web\View::EVENT_END_BODY:</span><br></pre></td></tr></table></figure>
<h2 id="过滤器-中间件"><a class="header-anchor" href="#过滤器-中间件"></a>过滤器（中间件）</h2>
<p>过滤器是控制器动作执行之前或之后执行的对象。例如访问控制过滤器可在动作执行之前来控制特殊终端用户是否有权限执行动作， 内容压缩过滤器可在动作执行之后发给终端用户之前压缩响应内容。</p>
<p>继承 yii\base\ActionFilter 类并覆盖 yii\base\ActionFilter::beforeAction() 和/或 yii\base\ActionFilter::afterAction() 方法来创建动作的过滤器，前者在动作执行之前执行，后者在动作执行之后执行。 yii\base\ActionFilter::beforeAction() 返回值决定动作是否应该执行， 如果为 false，之后的过滤器和动作不会继续执行。</p>
<h3 id="核心过滤器"><a class="header-anchor" href="#核心过滤器"></a>核心过滤器</h3>
<ul>
<li>yii\filters\AccessControl
<ul>
<li>AccessControl提供基于yii\filters\AccessControl::rules规则的访问控制</li>
</ul>
</li>
<li>yii\filters\auth\HttpBasicAuth
<ul>
<li>认证方法过滤器通过HTTP Basic Auth或OAuth 2 来认证一个用户， 认证方法过滤器类在 yii\filters\auth 命名空间下</li>
</ul>
</li>
<li>yii\filters\ContentNegotiator
<ul>
<li>ContentNegotiator支持响应内容格式处理和语言处理</li>
</ul>
</li>
<li>yii\filters\HttpCache
<ul>
<li>HttpCache利用Last-Modified 和 Etag HTTP头实现客户端缓存</li>
</ul>
</li>
<li>yii\filters\PageCache
<ul>
<li>PageCache实现服务器端整个页面的缓存</li>
</ul>
</li>
<li>yii\filters\RateLimiter
<ul>
<li>RateLimiter 根据 漏桶算法 来实现速率限制。 主要用在实现RESTful APIs， 更多关于该过滤器详情请参阅 Rate Limiting 一节</li>
</ul>
</li>
<li>yii\filters\VerbFilter
<ul>
<li>VerbFilter检查请求动作的HTTP请求方式是否允许执行， 如果不允许，会抛出HTTP 405异常</li>
</ul>
</li>
<li>yii\filters\Cors
<ul>
<li>跨域资源共享 CORS 机制允许一个网页的许多资源（例如字体、JavaScript等） 这些资源可以通过其他域名访问获取</li>
</ul>
</li>
</ul>
<h2 id="请求"><a class="header-anchor" href="#请求"></a>请求</h2>
<h3 id="请求基础用法"><a class="header-anchor" href="#请求基础用法"></a>请求基础用法</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$request = Yii::$app-&gt;request;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于: $get = $_GET;</span></span><br><span class="line">$get = $request-&gt;get();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于: $id = isset($_GET['id']) ? $_GET['id'] : null;</span></span><br><span class="line">$id = $request-&gt;get(<span class="string">'id'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于: $id = isset($_GET['id']) ? $_GET['id'] : 1;</span></span><br><span class="line">$id = $request-&gt;get(<span class="string">'id'</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于: $post = $_POST;</span></span><br><span class="line">$post = $request-&gt;post();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于: $name = isset($_POST['name']) ? $_POST['name'] : null;</span></span><br><span class="line">$name = $request-&gt;post(<span class="string">'name'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于: $name = isset($_POST['name']) ? $_POST['name'] : '';</span></span><br><span class="line">$name = $request-&gt;post(<span class="string">'name'</span>, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回所有参数</span></span><br><span class="line">$params = $request-&gt;bodyParams;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回参数 "id"</span></span><br><span class="line">$param = $request-&gt;getBodyParam(<span class="string">'id'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 该请求是一个 AJAX 请求 */</span></span><br><span class="line"><span class="keyword">if</span> ($request-&gt;isAjax) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请求方法是 GET */</span></span><br><span class="line"><span class="keyword">if</span> ($request-&gt;isGet)  &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请求方法是 POST */</span></span><br><span class="line"><span class="keyword">if</span> ($request-&gt;isPost) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请求方法是 PUT */</span></span><br><span class="line"><span class="keyword">if</span> ($request-&gt;isPut)  &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="请求-urls"><a class="header-anchor" href="#请求-urls"></a>请求 URLs</h3>
<ul>
<li><strong>yii\web\Request::url</strong>
<ul>
<li>返回 /admin/index.php/product?id=100, 此URL不包括host info部分。</li>
</ul>
</li>
<li><strong>yii\web\Request::absoluteUrl</strong>
<ul>
<li>返回 <a href="http://example.com/admin/index.php/product?id=100" target="_blank" rel="noopener">http://example.com/admin/index.php/product?id=100</a>, 包含host infode的整个URL。</li>
</ul>
</li>
<li><strong>yii\web\Request::hostInfo</strong>
<ul>
<li>返回 <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a>, 只有host info部分。</li>
</ul>
</li>
<li><strong>yii\web\Request::pathInfo</strong>
<ul>
<li>返回 /product， 这个是入口脚本之后，问号之前（查询字符串）的部分。</li>
</ul>
</li>
<li><strong>yii\web\Request::queryString</strong>
<ul>
<li>返回 id=100,问号之后的部分。</li>
</ul>
</li>
<li><strong>yii\web\Request::baseUrl</strong>
<ul>
<li>返回 /admin, host info之后， 入口脚本之前的部分。</li>
</ul>
</li>
<li><strong>yii\web\Request::scriptUrl</strong>
<ul>
<li>返回 /admin/index.php, 没有path info和查询字符串部分。</li>
</ul>
</li>
<li><strong>yii\web\Request::serverName</strong>
<ul>
<li>返回 <a href="http://example.com" target="_blank" rel="noopener">example.com</a>, URL中的host name。</li>
</ul>
</li>
<li><strong>yii\web\Request::serverPort</strong>
<ul>
<li>返回 80, 这是web服务中使用的端口。</li>
</ul>
</li>
</ul>
<h3 id="http-头"><a class="header-anchor" href="#http-头"></a>HTTP 头</h3>
<p>可以通过 yii\web\Request::headers 属性返回的 yii\web\HeaderCollection 获取HTTP头信息</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $headers 是一个 yii\web\HeaderCollection 对象</span></span><br><span class="line">$headers = Yii::$app-&gt;request-&gt;headers;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回 Accept header 值</span></span><br><span class="line">$accept = $headers-&gt;get(<span class="string">'Accept'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 这是一个 User-Agent 头 */</span></span><br><span class="line"><span class="keyword">if</span> ($headers-&gt;has(<span class="string">'User-Agent'</span>)) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="客户端信息"><a class="header-anchor" href="#客户端信息"></a>客户端信息</h3>
<p>可以通过 <code>yii\web\Request::userHost</code> 和 <code>yii\web\Request::userIP</code> 分别获取 host-name 和客户机的 IP 地址</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$userHost = Yii::$app-&gt;request-&gt;userHost;</span><br><span class="line">$userIP = Yii::$app-&gt;request-&gt;userIP;</span><br></pre></td></tr></table></figure>
<h2 id="响应"><a class="header-anchor" href="#响应"></a>响应</h2>
<h3 id="状态码"><a class="header-anchor" href="#状态码"></a>状态码</h3>
<p>构建响应时，最先应做的是标识请求是否成功处理的状态，可通过设置 yii\web\Response::statusCode 属性，该属性使用一个有效的 HTTP 状态码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yii::$app-&gt;response-&gt;statusCode = 200;</span><br></pre></td></tr></table></figure>
<p>当错误处理器 捕获到一个异常，会从异常中提取状态码并赋值到响应， 对于上述的 yii\web\NotFoundHttpException 对应HTTP 404状态码， 以下为Yii预定义的HTTP异常</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">throw new \yii\web\NotFoundHttpException;</span><br></pre></td></tr></table></figure>
<p>以下为Yii预定义的HTTP异常：</p>
<ul>
<li><strong>yii\web\BadRequestHttpException</strong>
<ul>
<li>status code 400.</li>
</ul>
</li>
<li><strong>yii\web\ConflictHttpException</strong>
<ul>
<li>status code 409.</li>
</ul>
</li>
<li><strong>yii\web\ForbiddenHttpException</strong>
<ul>
<li>status code 403.</li>
</ul>
</li>
<li><strong>yii\web\GoneHttpException</strong>
<ul>
<li>status code 410.</li>
</ul>
</li>
<li><strong>yii\web\MethodNotAllowedHttpException</strong>
<ul>
<li>status code 405.</li>
</ul>
</li>
<li><strong>yii\web\NotAcceptableHttpException</strong>
<ul>
<li>status code 406.</li>
</ul>
</li>
<li><strong>yii\web\NotFoundHttpException</strong>
<ul>
<li>status code 404.</li>
</ul>
</li>
<li><strong>yii\web\ServerErrorHttpException</strong>
<ul>
<li>status code 500.</li>
</ul>
</li>
<li><strong>yii\web\TooManyRequestsHttpException</strong>
<ul>
<li>status code 429.</li>
</ul>
</li>
<li><strong>yii\web\UnauthorizedHttpException</strong>
<ul>
<li>status code 401.</li>
</ul>
</li>
<li><strong>yii\web\UnsupportedMediaTypeHttpException</strong>
<ul>
<li>status code 415.</li>
</ul>
</li>
</ul>
<p>如果想抛出的异常不在如上列表中，可创建一个yii\web\HttpException异常， 带上状态码抛出，如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> \yii\web\HttpException(<span class="number">402</span>);</span><br></pre></td></tr></table></figure>
<h3 id="http-头部"><a class="header-anchor" href="#http-头部"></a>HTTP 头部</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$headers = Yii::$app-&gt;response-&gt;headers;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加一个 Pragma 头，已存在的Pragma 头不会被覆盖。</span></span><br><span class="line">$headers-&gt;add(<span class="string">'Pragma'</span>, <span class="string">'no-cache'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置一个Pragma 头. 任何已存在的Pragma 头都会被丢弃</span></span><br><span class="line">$headers-&gt;set(<span class="string">'Pragma'</span>, <span class="string">'no-cache'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除Pragma 头并返回删除的Pragma 头的值到数组</span></span><br><span class="line">$values = $headers-&gt;remove(<span class="string">'Pragma'</span>);</span><br></pre></td></tr></table></figure>
<h3 id="响应主体"><a class="header-anchor" href="#响应主体"></a>响应主体</h3>
<p>如果在发送给终端用户之前需要格式化，应设置 yii\web\Response::format 和 yii\web\Response::data 属性，yii\web\Response::format 属性指定 yii\web\Response::data 中数据格式化后的样式，例如：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$response = Yii::$app-&gt;response;</span><br><span class="line">$response-&gt;format = \yii\web\Response::FORMAT_JSON;</span><br><span class="line">$response-&gt;data = [<span class="string">'message'</span> =&gt; <span class="string">'hello world'</span>];</span><br></pre></td></tr></table></figure>
<p>Yii支持以下可直接使用的格式，每个实现了 yii\web\ResponseFormatterInterface 类， 可自定义这些格式器或通过配置 yii\web\Response::formatters 属性来增加格式器。</p>
<ul>
<li><strong>yii\web\Response::FORMAT_HTML</strong></li>
<li><strong>yii\web\Response::FORMAT_XML</strong></li>
<li><strong>yii\web\Response::FORMAT_JSON</strong></li>
<li><strong>yii\web\Response::FORMAT_JSONP</strong></li>
</ul>
<p>正规格式返回 Yii 的 HTTP 响应</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> \Yii::createObject([</span><br><span class="line">    <span class="string">'class'</span> =&gt; <span class="string">'yii\web\Response'</span>,</span><br><span class="line">    <span class="string">'format'</span> =&gt; \yii\web\Response::FORMAT_JSON,</span><br><span class="line">    <span class="string">'data'</span> =&gt; [</span><br><span class="line">        <span class="string">'message'</span> =&gt; <span class="string">'hello world'</span>,</span><br><span class="line">        <span class="string">'code'</span> =&gt; <span class="number">100</span>,</span><br><span class="line">    ],</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<h3 id="浏览器跳转"><a class="header-anchor" href="#浏览器跳转"></a>浏览器跳转</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionOld</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;redirect(<span class="string">'http://example.com/new'</span>, <span class="number">301</span>);</span><br><span class="line"></span><br><span class="line">    \Yii::$app-&gt;response-&gt;redirect(<span class="string">'http://example.com/new'</span>, <span class="number">301</span>)-&gt;send();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="发送文件"><a class="header-anchor" href="#发送文件"></a>发送文件</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionDownload</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> \Yii::$app-&gt;response-&gt;sendFile(<span class="string">'path/to/file.txt'</span>);</span><br><span class="line"></span><br><span class="line">    \Yii::$app-&gt;response-&gt;sendFile(<span class="string">'path/to/file.txt'</span>)-&gt;send();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送一个已存在的文件到客户端</span></span><br><span class="line">yii\web\Response::sendFile()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送一个文本字符串作为文件到客户端</span></span><br><span class="line">yii\web\Response::sendContentAsFile()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送一个已存在的文件流作为文件到客户端</span></span><br><span class="line">yii\web\Response::sendStreamAsFile()</span><br></pre></td></tr></table></figure>
<h2 id="session"><a class="header-anchor" href="#session"></a>Session</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$session = Yii::$app-&gt;session;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查session是否开启</span></span><br><span class="line"><span class="keyword">if</span> ($session-&gt;isActive) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启session</span></span><br><span class="line">$session-&gt;open();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭session</span></span><br><span class="line">$session-&gt;close();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 销毁session中所有已注册的数据</span></span><br><span class="line">$session-&gt;destroy();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取session中的变量值，以下用法是相同的：</span></span><br><span class="line">$language = $session-&gt;get(<span class="string">'language'</span>);</span><br><span class="line">$language = $session[<span class="string">'language'</span>];</span><br><span class="line">$language = <span class="keyword">isset</span>($_SESSION[<span class="string">'language'</span>]) ? $_SESSION[<span class="string">'language'</span>] : <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置一个session变量，以下用法是相同的：</span></span><br><span class="line">$session-&gt;set(<span class="string">'language'</span>, <span class="string">'en-US'</span>);</span><br><span class="line">$session[<span class="string">'language'</span>] = <span class="string">'en-US'</span>;</span><br><span class="line">$_SESSION[<span class="string">'language'</span>] = <span class="string">'en-US'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除一个session变量，以下用法是相同的：</span></span><br><span class="line">$session-&gt;remove(<span class="string">'language'</span>);</span><br><span class="line"><span class="keyword">unset</span>($session[<span class="string">'language'</span>]);</span><br><span class="line"><span class="keyword">unset</span>($_SESSION[<span class="string">'language'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查session变量是否已存在，以下用法是相同的：</span></span><br><span class="line"><span class="keyword">if</span> ($session-&gt;has(<span class="string">'language'</span>)) ...</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($session[<span class="string">'language'</span>])) ...</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'language'</span>])) ...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历所有session变量，以下用法是相同的：</span></span><br><span class="line"><span class="keyword">foreach</span> ($session <span class="keyword">as</span> $name =&gt; $value) ...</span><br><span class="line"><span class="keyword">foreach</span> ($_SESSION <span class="keyword">as</span> $name =&gt; $value) ...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接使用$_SESSION (确保Yii::$app-&gt;session-&gt;open() 已经调用)</span></span><br><span class="line">$_SESSION[<span class="string">'captcha'</span>][<span class="string">'number'</span>] = <span class="number">5</span>;</span><br><span class="line">$_SESSION[<span class="string">'captcha'</span>][<span class="string">'lifetime'</span>] = <span class="number">3600</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 先获取session数据到一个数组，修改数组的值，然后保存数组到session中</span></span><br><span class="line">$captcha = $session[<span class="string">'captcha'</span>];</span><br><span class="line">$captcha[<span class="string">'number'</span>] = <span class="number">5</span>;</span><br><span class="line">$captcha[<span class="string">'lifetime'</span>] = <span class="number">3600</span>;</span><br><span class="line">$session[<span class="string">'captcha'</span>] = $captcha;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用ArrayObject 数组对象代替数组</span></span><br><span class="line">$session[<span class="string">'captcha'</span>] = <span class="keyword">new</span> \ArrayObject;</span><br><span class="line">...</span><br><span class="line">$session[<span class="string">'captcha'</span>][<span class="string">'number'</span>] = <span class="number">5</span>;</span><br><span class="line">$session[<span class="string">'captcha'</span>][<span class="string">'lifetime'</span>] = <span class="number">3600</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用带通用前缀的键来存储数组</span></span><br><span class="line">$session[<span class="string">'captcha.number'</span>] = <span class="number">5</span>;</span><br><span class="line">$session[<span class="string">'captcha.lifetime'</span>] = <span class="number">3600</span>;</span><br></pre></td></tr></table></figure>
<h3 id="自定义-session-存储"><a class="header-anchor" href="#自定义-session-存储"></a>自定义 Session 存储</h3>
<p>Yii提供以下session类实现不同的session存储方式：</p>
<ul>
<li>yii\web\DbSession
<ul>
<li>存储session数据在数据表中</li>
</ul>
</li>
<li>yii\web\CacheSession
<ul>
<li>存储session数据到缓存中，缓存和配置中的缓存组件相关</li>
</ul>
</li>
<li>yii\redis\Session
<ul>
<li>存储session数据到以redis 作为存储媒介中</li>
</ul>
</li>
<li>yii\mongodb\Session
<ul>
<li>存储session数据到MongoDB</li>
</ul>
</li>
</ul>
<h3 id="flash-数据"><a class="header-anchor" href="#flash-数据"></a>Flash 数据</h3>
<p>Flash数据是一种特别的session数据，它一旦在某个请求中设置后， 只会在下次请求中有效，然后该数据就会自动被删除。 常用于实现只需显示给终端用户一次的信息， 如用户提交一个表单后显示确认信息。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$session = Yii::$app-&gt;session;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求 #1</span></span><br><span class="line"><span class="comment">// 设置一个名为"postDeleted" flash 信息</span></span><br><span class="line">$session-&gt;setFlash(<span class="string">'postDeleted'</span>, <span class="string">'You have successfully deleted your post.'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求 #2</span></span><br><span class="line"><span class="comment">// 显示名为"postDeleted" flash 信息</span></span><br><span class="line"><span class="keyword">echo</span> $session-&gt;getFlash(<span class="string">'postDeleted'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求 #3</span></span><br><span class="line"><span class="comment">// $result 为 false，因为flash信息已被自动删除</span></span><br><span class="line">$result = $session-&gt;hasFlash(<span class="string">'postDeleted'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求 #4</span></span><br><span class="line"><span class="comment">// 在名称为"alerts"的flash信息增加数据</span></span><br><span class="line">$session-&gt;addFlash(<span class="string">'alerts'</span>, <span class="string">'You have successfully deleted your post.'</span>);</span><br><span class="line">$session-&gt;addFlash(<span class="string">'alerts'</span>, <span class="string">'You have successfully added a new friend.'</span>);</span><br><span class="line">$session-&gt;addFlash(<span class="string">'alerts'</span>, <span class="string">'You are promoted.'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求 #5</span></span><br><span class="line"><span class="comment">// $alerts 为名为'alerts'的flash信息，为数组格式</span></span><br><span class="line">$alerts = $session-&gt;getFlash(<span class="string">'alerts'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="cookie"><a class="header-anchor" href="#cookie"></a>Cookie</h2>
<p>Yii使用 yii\web\Cookie对象来代表每个cookie，yii\web\Request 和 yii\web\Response 通过名为’cookies’的属性维护一个cookie集合， 前者的cookie 集合代表请求提交的cookies， 后者的cookie集合表示发送给用户的cookies。</p>
<h3 id="读取-cookies"><a class="header-anchor" href="#读取-cookies"></a>读取 Cookies</h3>
<p>当前请求的cookie信息可通过如下代码获取：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 从 "request"组件中获取cookie集合(yii\web\CookieCollection)</span></span><br><span class="line">$cookies = Yii::$app-&gt;request-&gt;cookies;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取名为 "language" cookie 的值，如果不存在，返回默认值"en"</span></span><br><span class="line">$language = $cookies-&gt;getValue(<span class="string">'language'</span>, <span class="string">'en'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 另一种方式获取名为 "language" cookie 的值</span></span><br><span class="line"><span class="keyword">if</span> (($cookie = $cookies-&gt;get(<span class="string">'language'</span>)) !== <span class="keyword">null</span>) &#123;</span><br><span class="line">    $language = $cookie-&gt;value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可将 $cookies当作数组使用</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($cookies[<span class="string">'language'</span>])) &#123;</span><br><span class="line">    $language = $cookies[<span class="string">'language'</span>]-&gt;value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否存在名为"language" 的 cookie</span></span><br><span class="line"><span class="keyword">if</span> ($cookies-&gt;has(<span class="string">'language'</span>)) ...</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($cookies[<span class="string">'language'</span>])) ...</span><br></pre></td></tr></table></figure>
<h3 id="发送-cookies"><a class="header-anchor" href="#发送-cookies"></a>发送 Cookies</h3>
<p>可使用如下代码发送 cookie 到终端用户</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 从"response"组件中获取cookie 集合(yii\web\CookieCollection)</span></span><br><span class="line">$cookies = Yii::$app-&gt;response-&gt;cookies;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在要发送的响应中添加一个新的cookie</span></span><br><span class="line">$cookies-&gt;add(<span class="keyword">new</span> \yii\web\Cookie([</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'language'</span>,</span><br><span class="line">    <span class="string">'value'</span> =&gt; <span class="string">'zh-CN'</span>,</span><br><span class="line">]));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除一个cookie</span></span><br><span class="line">$cookies-&gt;remove(<span class="string">'language'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等同于以下删除代码</span></span><br><span class="line"><span class="keyword">unset</span>($cookies[<span class="string">'language'</span>]);</span><br></pre></td></tr></table></figure>
<h2 id="分页"><a class="header-anchor" href="#分页"></a>分页</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">data</span>\<span class="title">Pagination</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionCountry</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $query = Country::find();</span><br><span class="line"></span><br><span class="line">    $pagination = <span class="keyword">new</span> Pagination([</span><br><span class="line">        <span class="string">'defaultPageSize'</span> =&gt; <span class="number">5</span>,</span><br><span class="line">        <span class="string">'totalCount'</span>      =&gt; $query-&gt;count(),</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    $countries = $query-&gt;orderBy(<span class="string">'name'</span>)</span><br><span class="line">        -&gt;offset($pagination-&gt;offset)</span><br><span class="line">        -&gt;limit($pagination-&gt;limit)</span><br><span class="line">        -&gt;all();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;render(<span class="string">'country'</span>, compact(<span class="string">'countries'</span>, <span class="string">'pagination'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="应用主体和应用组件"><a class="header-anchor" href="#应用主体和应用组件"></a>应用主体和应用组件</h2>
<h2 id="应用属性"><a class="header-anchor" href="#应用属性"></a>应用属性</h2>
<h3 id="必要属性"><a class="header-anchor" href="#必要属性"></a>必要属性</h3>
<ul>
<li>id：用来区分其他应用的唯一标识ID。</li>
<li>basePath ：指定该应用的根目录。</li>
</ul>
<h3 id="重要属性"><a class="header-anchor" href="#重要属性"></a>重要属性</h3>
<ul>
<li>aliases：该属性允许你用一个数组定义多个别名。 数组的 key 为别名名称，值为对应的路径。</li>
<li>bootstrap ：这个属性很实用，它允许你用数组指定启动阶段 yii\base\Application::bootstrap() 需要运行的组件。</li>
<li>catchAll：该属性仅网页应用支持。 它指定一个要处理所有用户请求的控制器方法。</li>
<li>components：允许你注册多个在其他地方使用的应用组件。</li>
<li>controllerMap：该属性允许你指定一个控制器 ID 到任意控制器类。</li>
<li>controllerNamespace：该属性指定控制器类默认的命名空间，默认为 app\controllers。</li>
<li>language：该属性指定应用展示给终端用户的语言， 默认为 en 标识英文</li>
<li>modules ：该属性指定应用所包含的模块。</li>
</ul>
<h2 id="前端资源"><a class="header-anchor" href="#前端资源"></a>前端资源</h2>
<h3 id="资源"><a class="header-anchor" href="#资源"></a>资源</h3>
<h3 id="资源包"><a class="header-anchor" href="#资源包"></a>资源包</h3>
<h3 id="定义资源包"><a class="header-anchor" href="#定义资源包"></a>定义资源包</h3>
<h2 id="表单"><a class="header-anchor" href="#表单"></a>表单</h2>
<p>ActiveForm::begin()，ActiveForm::end() 分别用来渲染表单的开始和关闭标签</p>
<h2 id="查询构建器"><a class="header-anchor" href="#查询构建器"></a>查询构建器</h2>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii</tag>
      </tags>
  </entry>
  <entry>
    <title>Yii 框架之高效篇</title>
    <url>/2016/10/25/Yii-%E6%A1%86%E6%9E%B6%E4%B9%8B%E9%AB%98%E6%95%88%E7%AF%87/</url>
    <content><![CDATA[<h2 id="yii-的延迟加载"><a class="header-anchor" href="#yii-的延迟加载"></a>Yii 的延迟加载</h2>
<h3 id="类的延迟加载"><a class="header-anchor" href="#类的延迟加载"></a>类的延迟加载</h3>
<p>sql_autoload_register</p>
<p>Yii 如何使用 sql_autoload_register</p>
<p>自动加载文件路径：vendor/yiisoft/yii2/Yii.php<br>
入口文件路径：web/index.php</p>
<h3 id="类的映射表机制"><a class="header-anchor" href="#类的映射表机制"></a>类的映射表机制</h3>
<p>yii2快速的机制：使用类的映射表，把常用的类放入映射表中，加快加载速度</p>
<p>映射表文件：vendor/yiisoft/yii2/classes.php<br>
类的映射变量：Yii::$classMap<br>
vendor/yiisoft/yii2/BaseYii.php</p>
<p>可以通过使用Yii::$classMap，对延迟加载机制进行优化，是典型的空间换时间的做法，所以不建议往classMap中放入太多不常用的内容，避免内存占用过多</p>
<p>只建议将常用的高频率class放进‘类的映射表’，不常用的就不要放，否则映射表大了，不但降低查询效率，还将占用不必要的内存。</p>
<h3 id="组件的延迟加载"><a class="header-anchor" href="#组件的延迟加载"></a>组件的延迟加载</h3>
<ul>
<li>index.php
<ul>
<li>app
<ul>
<li>application class</li>
<li>components
<ul>
<li>vendor/yiisoft/yii2/web/Application.php</li>
<li>vendor/yiisoft/yii2/base/Application.php</li>
</ul>
</li>
<li>controller</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="数据缓存的使用"><a class="header-anchor" href="#数据缓存的使用"></a>数据缓存的使用</h2>
<h3 id="数据缓存的基础使用"><a class="header-anchor" href="#数据缓存的基础使用"></a>数据缓存的基础使用</h3>
<p>如何配置缓存服务器</p>
<p>如何将数据写入缓存</p>
<p>如何将缓存数据读出</p>
<p>如何修改缓存的数据</p>
<p>如何删除缓存的数据</p>
<p>如何清空缓存中数据</p>
<p>如何设置缓存有效期</p>
<h3 id="数据缓存的依赖关系详解"><a class="header-anchor" href="#数据缓存的依赖关系详解"></a>数据缓存的依赖关系详解</h3>
<p>可以用来解决缓存实时更新的问题</p>
<p>文件依赖<br>
yii框架缓存的DB依赖,跟其他缓存依赖一样,如果依赖中的sql取出的数据发生了改变,相关联的缓存就会消失</p>
<p>表达式依赖</p>
<p>1、文件依赖(FileDependency)：一旦文件改变，缓存将失效<br>
$dependency=new \yii\caching\FileDependency([‘filename’=&gt;‘hw.txt’]);<br>
$cache-&gt;add(‘file_key’,‘hello word!’,3000,$dependency);<br>
2、表达式依赖(ExpressionDependency)：一旦表达式改变，缓存将失效，即参数发生了变化<br>
$dependency=new \yii\caching\ExpressionDependency([‘expression’=&gt;’\YII::$app-&gt;request-&gt;get[“name”]’]);<br>
3、DB依赖(DbDependency)：一旦数据改变，缓存将失效<br>
$dependency=new \yii\caching\ExpressionDependency(<br>
[‘sql’=&gt;‘select count(*) from user’]);</p>
<p>4.链式依赖<br>
5.组依赖</p>
<p>Yii 框架是如何监听文件改变、表达式改变和数据改变？</p>
<h2 id="片段缓存的使用"><a class="header-anchor" href="#片段缓存的使用"></a>片段缓存的使用</h2>
<p>//片段缓存介绍(主要负责把前端界面的一些区域[不会经常变动的区域：如京东商品分类]缓存起来[缓存到内存或文件中]，下次访问时直接从缓存里把数据拿出来，而不用再从数据库抓取信息，提高了程序的执行效率)。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 使用视图组件($this)里的beginCache(&apos;缓存数据的名字&apos;)方法把cache_div给缓存起来;这个方法开启会检查当前有没有缓存，如果没有返回false --&gt;</span><br><span class="line">&lt;!-- 如何证明cache_div的代码片段被缓存了呢？ 在两个div里都添加上相同的内容。如果cache_div被缓存起来将会使用缓存里的内容，而不会使用修改后的内容。提高了程序的运行效率。 --&gt;</span><br><span class="line">&lt;?php if($this-&gt;beginCache(&apos;cache_div&apos;))&#123;?&gt;</span><br><span class="line">&lt;div id=&apos;cache_div&apos;&gt;</span><br><span class="line">	&lt;div&gt;这里待会会被缓存(这里是缓存过后添加的)&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">	$this-&gt;endCache();//结束缓存</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&apos;no_cache_div&apos;&gt;</span><br><span class="line">	&lt;div&gt;这里不会被缓存(这里是缓存过后添加的)&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>片段缓存的设置</p>
<p>片段缓存的时间<br>
$this-&gt;beginCache(‘cache_div’,[‘duration’=&gt;$duration]);<br>
$this-&gt;endCache();</p>
<p>片段缓存的依赖<br>
$this-&gt;beginCache(‘cache_div’,[‘dependency’=&gt;$dependency]);<br>
$this-&gt;endCache();</p>
<p>片段缓存的开关<br>
$this-&gt;beginCache(‘cache_div’,[‘enabled’=&gt;$enabled’]);<br>
$this-&gt;endCache();</p>
<p>片段缓存的嵌套使用</p>
<p>谨慎使用：外层的失效时间应该短于内层，外层的依赖条件应该低于内层，以确保最小的片段，返回的是最新的数据。</p>
<p>片段嵌套缓存  外面的缓存时间大于里面的  那么里面的数据即使超过了缓存时间后有修改也不会被执行</p>
<h2 id="页面缓存的使用"><a class="header-anchor" href="#页面缓存的使用"></a>页面缓存的使用</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function actionIndex()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//页面访问index()方法之前会先访问behavior()方法行为。</span><br><span class="line">public function behavior()</span><br><span class="line">&#123;</span><br><span class="line">    return [</span><br><span class="line">        [</span><br><span class="line">            &apos;class&apos;      =&gt; &apos;yii\filters\PageCache&apos;,//页面缓存类</span><br><span class="line">            &apos;duration&apos;   =&gt; 1000,//缓存时间</span><br><span class="line">            &apos;only&apos;       =&gt; [&apos;index&apos;, &apos;test&apos;],//仅仅缓存index和test方法的数据]</span><br><span class="line">            &apos;dependency&apos; =&gt; [&apos;class&apos; =&gt; &apos;yii\caching\FileDependency&apos;, &apos;fileName&apos; =&gt; &apos;hw.txt&apos;]//文件缓存依赖</span><br><span class="line">        ],</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="http-缓存的使用"><a class="header-anchor" href="#http-缓存的使用"></a>HTTP 缓存的使用</h2>
<p>如何校验服务器与浏览器的数据一致</p>
<p>用矩形L代表浏览器，矩形F代表服务器。<br>
1.当用户到F浏览网站或一个页面时，就会用L给F发送一个请求，然后F就会处理这个请求，处理完之后会把处理的结果作为一个响应返回给L，然后L从这个响应里拿数据，再显示出来，这样用户就可以看到他想看到的页面了。<br>
2.但这时会遇到一个小问题，如果用户从F拿过来的数据不是他想要的数据(比如12306订票页面想订的票没有了)，这时用户猛刷新L，那么L就会给F发送很多的请求，实际上F的数据是没有发生变化的，F收到这么多请求后都会照常的处理，但处理的结果没有发生变化，所以处理的结果跟第一次返回出去的数据是一样的。所以这样对F来说，很浪费资源、时间。<br>
3.F想了一个办法，当F第一次把数据(小圆表示)发送给L时，它让L把数据缓存到L里面，也就是把它缓存起来，缓存起来以后如果下一次L发送了请求到了F这边之后，F会对比F这边的数据和L那边的数据是不是一样的(F是如何校验的呢？)，如果是一样的那就没必要再把这个数据发送回给L了，就让L使用缓存里的数据就行了。<br>
4.F如何校验F和L的数据是一样的，F就想了一个办法。当F第一次发送数据给L时，会在数据中塞入一个last-modified字段(记录了F这边数据的修改时间)，那么L也有了这个字段。那么当L下一次发送请求时，会把这个修改时间也带上，也就是把lm(last-modified字段)发送回给F，F会校验lm和F里的那个数据的修改时间是否是一样的，如果是一样的那么这个数据肯定没有被修改过，那就没必要再发送回给L了，直接告诉L去使用缓存里的数据就行了。<br>
5.另一种校验方式是基于last-modified的小缺陷设计出来的(开发人员把F的数据@改为#，然后又改回@，那么数据@虽然没变化，但它的修改时间改变了。那么L发送过来的lm和数据@的修改时间是对不上的，然后F又把@发送给L，但实际上@没有发生变化，这样也会造成一些问题)。所以F想了一个办法，F第一次发送@数据包时，会根据@里的内容生成一个标志etag，通过etag可以大概了解数据包@里的内容。F会把etag和last-modified一起发送给L，那么L下一次访问F时，会传lm和etag。那么F先验证lm(两边数据修改时间是否一样)，一样则使用L的缓存；如果不一样，F则验证etag是否一样，如果一样证明@没有被修改，则让L使用缓存</p>
<p>服务器响应304，not modifired</p>
<p>服务器怎么告诉浏览器缓存起来？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function behaviors()&#123;</span><br><span class="line">	return [</span><br><span class="line">		[</span><br><span class="line">			&apos;class&apos;=&gt;&apos;yii\filters\HttpCache&apos;,</span><br><span class="line">			&apos;lastModified&apos;=&gt;function()&#123;</span><br><span class="line">				return 1432817564;</span><br><span class="line">			&#125;,</span><br><span class="line">			&apos;etagSeed&apos;=&gt;function()&#123;</span><br><span class="line">				return &apos;etagseed2f;&apos;</span><br><span class="line">			&#125;</span><br><span class="line">		]</span><br><span class="line">	];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>//使用 HttpCache 之后再请求头部header会多了一个Cache-Control:last-modified 来作为标志</p>
<p>在服务器修改数据之后如何让浏览器更新缓存</p>
<p>httpCache的依赖:<br>
lastModified: 时间标识<br>
etagSeed：内容标识<br>
当二者同时存时，需要两个均发生变化才会发送200并返回新数据</p>
<h2 id="gii-工具简介"><a class="header-anchor" href="#gii-工具简介"></a>gii 工具简介</h2>
<ul>
<li>Model Generator（数据模型的代码生成器）</li>
<li>Form Generator（表单的代码生成器）</li>
<li>Module Generator（模块的代码生成器）</li>
<li>CRUD Generator（增删改查的代码生成器）</li>
<li>Controller Generator（控制器的代码生成器）</li>
<li>Extension Generator（扩展的代码生成器）</li>
</ul>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii</tag>
      </tags>
  </entry>
  <entry>
    <title>打造扛得住的 MySQL 数据库架构</title>
    <url>/2016/10/20/%E6%89%93%E9%80%A0%E6%89%9B%E5%BE%97%E4%BD%8F%E7%9A%84-MySQL-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h2 id="第1章-实例和故事"><a class="header-anchor" href="#第1章-实例和故事"></a>第1章 实例和故事</h2>
<h3 id="1-1-什么决定了电商双11大促的成败"><a class="header-anchor" href="#1-1-什么决定了电商双11大促的成败"></a>1-1 什么决定了电商双11大促的成败</h3>
<p>电商公司的服务器能够承受住双十一期间高并发的访问量，为用户提供稳定高速的购物体验。</p>
<h3 id="1-2-在双11大促中的数据库服务器"><a class="header-anchor" href="#1-2-在双11大促中的数据库服务器"></a>1-2 在双11大促中的数据库服务器</h3>
<p>数据库架构：</p>
<ul>
<li>1 台 MySQL 主服务器</li>
<li>15 台 MySQL 从服务器</li>
</ul>
<p>当时没有部署主从复制组件，一旦主服务器出现故障，很难自动进行故障切换，必须由 DBA 进行手动操作。过多的从服务器，对主服务器的网卡容量也是一个不小的挑战。</p>
<p>数据库性能依据参数：</p>
<ul>
<li>QPS</li>
<li>TPS</li>
<li>并发量</li>
<li>CPU 使用率</li>
<li>磁盘 IO</li>
</ul>
<h3 id="1-3-在大促中什么影响了数据库性能"><a class="header-anchor" href="#1-3-在大促中什么影响了数据库性能"></a>1-3 在大促中什么影响了数据库性能</h3>
<p>影响数据库性能的因素</p>
<ul>
<li>SQL 查询速度</li>
<li>服务器硬件</li>
<li>网卡流量</li>
<li>磁盘 IO</li>
</ul>
<p>数据库性能常见的风险：</p>
<ul>
<li>效率低下的 SQL
<ul>
<li>QPS：每秒钟处理的查询量
<ul>
<li>10ms 处理 1个 SQL，1s 处理 100个 SQL，QPS &lt;= 100</li>
<li>100ms 处理 1个 SQL，1s 处理 10个 SQL，QPS &lt;= 10</li>
</ul>
</li>
<li>TPS：每秒钟处理的事务数</li>
</ul>
</li>
<li>大量的并发和超高的 CPU 使用率
<ul>
<li>大量的并发会导致数据库连接数被占满</li>
<li>超高的 CPU 使用率会导致服务器因 CPU 资源耗尽而出现宕机</li>
</ul>
</li>
<li>磁盘 IO
<ul>
<li>磁盘 IO 性能突然下降（使用更快的磁盘设备）</li>
<li>其它大量消耗磁盘性能的计划任务（调整计划任务，做好磁盘维护）</li>
</ul>
</li>
<li>网卡 IO
<ul>
<li>当网卡 IO 被占满时，（千兆网卡 1000 Mb/8=100 MB）会出现无法连接数据库的情况。</li>
<li>如何避免无法连接数据库的情况
<ul>
<li>减少从服务器的数量</li>
<li>进行分级缓存</li>
<li>避免使用 <code>select *</code> 进行查询</li>
<li>分离业务网络和服务器网络</li>
</ul>
</li>
</ul>
</li>
<li>大表
<ul>
<li>什么样的表可以称之为大表
<ul>
<li>记录行数巨大，单表超过千万行</li>
<li>表数据文件巨大，表数据文件超过 10 G</li>
</ul>
</li>
<li>大表对查询的影响
<ul>
<li>慢查询：很难在一定的时间内过滤出所需要的数据
<ul>
<li>区分度低的数据在查询的时候会产生大量的磁盘 IO，会降低磁盘的效率，导致查询效率低下,出现大量的慢查询。</li>
</ul>
</li>
</ul>
</li>
<li>大表对 DDL 操作的影响
<ul>
<li>建立索引需要很长的时间
<ul>
<li>MySQL 版本 &lt; 5.5，建立索引会锁表</li>
<li>MySQL 版本 &gt;= 5.5，虽然不会锁表但会引起主从延迟</li>
</ul>
</li>
<li>修改表结构需要长时间锁表
<ul>
<li>会造成长时间的主从延迟</li>
<li>影响正常的数据操作</li>
</ul>
</li>
</ul>
</li>
<li>解决方案
<ul>
<li>分库分表，把一张大表分成多个小表
<ul>
<li>难点
<ul>
<li>分表主键的选择</li>
<li>分表后跨分区数据的查询和统计</li>
</ul>
</li>
</ul>
</li>
<li>大表的历史数据归档（减少对前后端业务的影响）
<ul>
<li>难点
<ul>
<li>归档时间点的选择</li>
<li>如何进行归档操作</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>大事务
<ul>
<li>事务的概念
<ul>
<li>事务是数据库系统区别于其它一切文件系统的重要特性之一</li>
<li>事务是一组具有原子性的 SQL 语句，或是一个独立的工作单元</li>
</ul>
</li>
<li>事务的特性
<ul>
<li>原子性
<ul>
<li>一个事务必须被视为一个不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败，对于一个事务来说，不可能只执行其中的一部分操作。</li>
</ul>
</li>
<li>一致性
<ul>
<li>一致性是指事务将数据库从一种一致性状态转换到另外一种一致性状态。在事务开始之前和事务结束后，数据库中的数据完整性没有被破坏。</li>
</ul>
</li>
<li>隔离性
<ul>
<li>隔离性要求一个事务对数据库中数据的修改，在未提交完成前对于其它事务是不可见的。</li>
<li>隔离性的类型
<ul>
<li>未提交读（Read Uncommited）</li>
<li>已提交读（Read Commited）</li>
<li>可重复读（Repeatable Read）</li>
<li>可串行化（Serialization）</li>
</ul>
</li>
</ul>
</li>
<li>持久性
<ul>
<li>一旦事务提交，则其所做的修改就会永久保存到数据库中。此时即使系统崩溃，已经提交的修改数据也不会丢失</li>
</ul>
</li>
</ul>
</li>
<li>什么是大事务
<ul>
<li>定义：运行时间比较长，操作的数据比较多的事务</li>
<li>风险：
<ul>
<li>锁定太多的数据，造成大量的阻塞和锁超时</li>
<li>回滚时所需时间比较长</li>
<li>执行时间长，容易造成主从延迟</li>
</ul>
</li>
<li>处理：
<ul>
<li>避免一次处理太多的数据</li>
<li>移出不必要在事务中的 SELECT 操作</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="第2章-什么影响了mysql性能"><a class="header-anchor" href="#第2章-什么影响了mysql性能"></a>第2章 什么影响了MySQL性能</h2>
<h2 id="第3章-mysql基准测试"><a class="header-anchor" href="#第3章-mysql基准测试"></a>第3章 MySQL基准测试</h2>
<h2 id="第4章-mysql数据库结构优化"><a class="header-anchor" href="#第4章-mysql数据库结构优化"></a>第4章 MySQL数据库结构优化</h2>
<h2 id="第5章-mysql高可用架构设计"><a class="header-anchor" href="#第5章-mysql高可用架构设计"></a>第5章 MySQL高可用架构设计</h2>
<h2 id="第6章-数据库索引优化"><a class="header-anchor" href="#第6章-数据库索引优化"></a>第6章 数据库索引优化</h2>
<h2 id="第7章-sql查询优化"><a class="header-anchor" href="#第7章-sql查询优化"></a>第7章 SQL查询优化</h2>
<h2 id="第8章-数据库的分库分表"><a class="header-anchor" href="#第8章-数据库的分库分表"></a>第8章 数据库的分库分表</h2>
<h2 id="第9章-数据库监控"><a class="header-anchor" href="#第9章-数据库监控"></a>第9章 数据库监控</h2>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 性能优化</title>
    <url>/2016/10/13/MySQL-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h2 id="可以进行优化的层面"><a class="header-anchor" href="#可以进行优化的层面"></a>可以进行优化的层面</h2>
<ul>
<li>硬件</li>
<li>系统配置</li>
<li>数据库表结构</li>
<li>SQL 语句和索引</li>
</ul>
<h2 id="进行优化前的数据准备"><a class="header-anchor" href="#进行优化前的数据准备"></a>进行优化前的数据准备</h2>
<p>打开以下链接下载数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://downloads.mysql.com/docs/sakila-db.zip</span><br></pre></td></tr></table></figure>
<p>打开终端，执行以下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 登录 MySQL Cli 模式</span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 创建数据库</span><br><span class="line">SOURCE /Users/LuisEdware/Downloads/sakila-db/sakila-schema.sql.sql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 填充数据到数据库</span><br><span class="line">SOURCE /Users/LuisEdware/Downloads/sakila-db/sakila-data.sql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 使用 sakila 数据库</span><br><span class="line">USE sakila;</span><br></pre></td></tr></table></figure>
<h2 id="sql-语句和索引"><a class="header-anchor" href="#sql-语句和索引"></a>SQL 语句和索引</h2>
<h3 id="mysql-慢查询日志"><a class="header-anchor" href="#mysql-慢查询日志"></a>MySQL 慢查询日志</h3>
<p>如何发现有问题的 SQL？答案是使用 MySQL 慢查询日志对有效率问题的 SQL 进行监控，执行命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 查看是否开启慢查询日志</span><br><span class="line">show variables like "slow_query_log";</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看是否设置了把没有索引的记录到慢查询日志</span><br><span class="line">show variables like "log_queries_not_using_indexes";</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看是否设置慢查询的 SQL 执行时间</span><br><span class="line">show variables like "long_query_time";</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看慢查询日志记录位置</span><br><span class="line">show variables like "slow_query_log_file";</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 开启慢查询日志</span><br><span class="line">set global slow_query_log=on</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 设置没有索引的记录到慢查询日志</span><br><span class="line">set global log_queries_not_using_indexes=on</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 设置到慢查询日志的 SQL 执行时间</span><br><span class="line">set global long_query_time=0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看慢查询日志（在 Linux 终端下执行）</span><br><span class="line">tail -50 /usr/local/var/mysql/luyiyuandeMacBook-Pro-slow.log;</span><br></pre></td></tr></table></figure>
<p>慢查询日志所包含的内容</p>
<ul>
<li>SQL 的执行时间：<strong># Time: 2016-10-13T10:01:45.914267Z</strong></li>
<li>SQL 的执行主机：<strong># User@Host: root[root] @ localhost []  Id:   949</strong></li>
<li>SQL 的执行信息：<strong># Query_time: 0.000227  Lock_time: 0.000099 Rows_sent: 2  Rows_examined: 2</strong></li>
<li>SQL 的执行时间：<strong>SET timestamp=1476352905;</strong></li>
<li>SQL 的执行内容：<strong>select * from store;</strong></li>
</ul>
<p>慢查询日志分析工具</p>
<ul>
<li>mysqldumpslow
<ul>
<li>安装：MySQL 数据库自带</li>
<li>使用：<code>mysqldumpslow /usr/local/var/mysql/luyiyuandeMacBook-Pro-slow.log;</code></li>
<li>选项</li>
<li>参数</li>
</ul>
</li>
<li>pt-query-digest
<ul>
<li>安装：<code>brew install brew install percona-toolkit</code></li>
<li>使用：<code>pt-query-digest /usr/local/var/mysql/luyiyuandeMacBook-Pro-slow.log | more;</code></li>
<li>选项</li>
<li>参数</li>
</ul>
</li>
</ul>
<p>如何通过慢查询日志发现有问题的 SQL？</p>
<ul>
<li>查询次数多且每次查询占用时间长的 SQL</li>
<li>IO 大的 SQL</li>
<li>未命中索引的 SQL</li>
</ul>
<h3 id="explain-分析-sql-的执行计划"><a class="header-anchor" href="#explain-分析-sql-的执行计划"></a>EXPLAIN 分析 SQL 的执行计划</h3>
<p>使用 EXPLAIN 分析 SQL 的执行计划的例子如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> staff;</span><br></pre></td></tr></table></figure>
<p>使用 EXPLAIN 分析 SQL 的各列参数含义如下：</p>
<ul>
<li>id：SQL 语句执行顺序编号</li>
<li>select_type：SQL 语句执行的类型，主要区别普通查询、联合查询和子查询之类的复杂查询</li>
<li>table：SQL 语句执行所引用的数据表</li>
<li>type：显示连接使用的类型</li>
<li>possible_keys：指出 MySQL 能在该数据表中使用哪些索引有助于查询</li>
<li>key：SQL 语句执行时所使用的索引</li>
<li>key_len：SQL 语句执行时所使用的索引的长度。在不损失精确性的情况下，长度越短越好</li>
<li>ref：显示索引的哪一列被使用了</li>
<li>rows：MySQL 认为必须检查的用来返回请求数据的行数</li>
<li>Extra：提供 MySQL 优化器一系列额外信息</li>
</ul>
<h3 id="max-和-count-的优化"><a class="header-anchor" href="#max-和-count-的优化"></a>MAX() 和 COUNT() 的优化</h3>
<h4 id="max"><a class="header-anchor" href="#max"></a>MAX()</h4>
<p>分析 SQL 语句：使用 MAX() 方法查询最后一笔交易的时间</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">EXPLAIN SELECT MAX(payment_date) FROM payment_date</span><br></pre></td></tr></table></figure>
<p>执行结果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span><br><span class="line">           id: 1</span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        table: payment</span><br><span class="line">   partitions: NULL</span><br><span class="line">         type: ALL</span><br><span class="line">possible_keys: NULL</span><br><span class="line">          key: NULL</span><br><span class="line">      key_len: NULL</span><br><span class="line">          ref: NULL</span><br><span class="line">         rows: 16086</span><br><span class="line">     filtered: 100.00</span><br><span class="line">        Extra: NULL</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>如果数据表的数据非常大，查询频率又非常高，那么服务器的 IO 消耗也会非常高，所以这条 SQL 语句需要优化。可以通过建立索引进行优化。执行代码如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> idx_paydate <span class="keyword">ON</span> payment(payment_date);</span><br></pre></td></tr></table></figure>
<p>然后再分析 SQL 语句，执行结果如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span><br><span class="line">           id: 1</span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        table: NULL</span><br><span class="line">   partitions: NULL</span><br><span class="line">         type: NULL</span><br><span class="line">possible_keys: NULL</span><br><span class="line">          key: NULL</span><br><span class="line">      key_len: NULL</span><br><span class="line">          ref: NULL</span><br><span class="line">         rows: NULL</span><br><span class="line">     filtered: NULL</span><br><span class="line">        Extra: Select tables optimized away</span><br><span class="line">1 row in set, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure>
<p>经过优化之后，由于索引是按顺序排列的，MySQL 不需要查询表中的数据，而是通过查询索引最后的一个数据，就可以得知执行结果了。而且这个时候，不管表的数据量多大，查询 MAX() 所需要的时间都是基本固定的，这样就尽可能地减少了 IO 操作。</p>
<h4 id="count"><a class="header-anchor" href="#count"></a>COUNT()</h4>
<p>分析 SQL 语句：使用 COUNT() 函数在一条 SQL 中同时查出 2006 年和 2007 年电影的数量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">	count(release_year = &apos;2006&apos; OR NULL) AS &apos;2006 年电影数量&apos; ,</span><br><span class="line">	count(release_year = &apos;2007&apos; OR NULL) AS &apos;2007 年电影数量&apos;</span><br><span class="line">FROM</span><br><span class="line">	film;</span><br></pre></td></tr></table></figure>
<p>count(*) 包含空值，count(id) 不包含空值。上述语句就是优化 Count() 函数取值</p>
<h3 id="子查询"><a class="header-anchor" href="#子查询"></a>子查询</h3>
<p>分析 SQL 语句：查询 sandra 出演的所有影片</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	title ,</span><br><span class="line">	release_year ,</span><br><span class="line">	<span class="keyword">LENGTH</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	film</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	film_id <span class="keyword">IN</span>(</span><br><span class="line">		<span class="keyword">SELECT</span></span><br><span class="line">			film_id</span><br><span class="line">		<span class="keyword">FROM</span></span><br><span class="line">			film_actor</span><br><span class="line">		<span class="keyword">WHERE</span></span><br><span class="line">			actor_id <span class="keyword">IN</span>(</span><br><span class="line">				<span class="keyword">SELECT</span></span><br><span class="line">					actor_id</span><br><span class="line">				<span class="keyword">FROM</span></span><br><span class="line">					actor</span><br><span class="line">				<span class="keyword">WHERE</span></span><br><span class="line">					first_name = <span class="string">'sandra'</span></span><br><span class="line">			)</span><br><span class="line">	)</span><br></pre></td></tr></table></figure>
<p>通常情况下，需要把子查询优化为 join 查询，但在优化时要注意关联键是否有一对多的关系，要注意重复数据。</p>
<h3 id="group-by"><a class="header-anchor" href="#group-by"></a>GROUP BY</h3>
<p>group by 可能会出现临时表、文件排序等，影响效率。可以通过关联的子查询，来避免产生临时表和文件排序，可以节省 IO。</p>
<p>group by 查询优化前：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span></span><br><span class="line">	actor.first_name ,</span><br><span class="line">	actor.last_name ,</span><br><span class="line">	<span class="keyword">Count</span>(*)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	sakila.film_actor</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> sakila.actor <span class="keyword">USING</span>(actor_id)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">	film_actor.actor_id;</span><br></pre></td></tr></table></figure>
<p>执行结果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span><br><span class="line">           id: 1</span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        table: actor</span><br><span class="line">   partitions: NULL</span><br><span class="line">         type: ALL</span><br><span class="line">possible_keys: PRIMARY</span><br><span class="line">          key: NULL</span><br><span class="line">      key_len: NULL</span><br><span class="line">          ref: NULL</span><br><span class="line">         rows: 200</span><br><span class="line">     filtered: 100.00</span><br><span class="line">        Extra: Using temporary; Using filesort</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">           id: 1</span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        table: film_actor</span><br><span class="line">   partitions: NULL</span><br><span class="line">         type: ref</span><br><span class="line">possible_keys: PRIMARY,idx_fk_film_id</span><br><span class="line">          key: PRIMARY</span><br><span class="line">      key_len: 2</span><br><span class="line">          ref: sakila.actor.actor_id</span><br><span class="line">         rows: 27</span><br><span class="line">     filtered: 100.00</span><br><span class="line">        Extra: Using index</span><br><span class="line">2 rows in set, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure>
<p>group by 查询优化后：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">EXPLAIN SELECT</span><br><span class="line">	actor.first_name ,</span><br><span class="line">	actor.last_name ,</span><br><span class="line">	c.cnt</span><br><span class="line">FROM</span><br><span class="line">	sakila.actor</span><br><span class="line">INNER JOIN(</span><br><span class="line">	SELECT</span><br><span class="line">		actor_id ,</span><br><span class="line">		count(*) AS cnt</span><br><span class="line">	FROM</span><br><span class="line">		sakila.film_actor</span><br><span class="line">	GROUP BY</span><br><span class="line">		actor_id</span><br><span class="line">) AS c USING(actor_id);</span><br></pre></td></tr></table></figure>
<p>执行结果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span><br><span class="line">           id: 1</span><br><span class="line">  select_type: PRIMARY</span><br><span class="line">        table: actor</span><br><span class="line">   partitions: NULL</span><br><span class="line">         type: ALL</span><br><span class="line">possible_keys: PRIMARY</span><br><span class="line">          key: NULL</span><br><span class="line">      key_len: NULL</span><br><span class="line">          ref: NULL</span><br><span class="line">         rows: 200</span><br><span class="line">     filtered: 100.00</span><br><span class="line">        Extra: NULL</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">           id: 1</span><br><span class="line">  select_type: PRIMARY</span><br><span class="line">        table: &lt;derived2&gt;</span><br><span class="line">   partitions: NULL</span><br><span class="line">         type: ref</span><br><span class="line">possible_keys: &lt;auto_key0&gt;</span><br><span class="line">          key: &lt;auto_key0&gt;</span><br><span class="line">      key_len: 2</span><br><span class="line">          ref: sakila.actor.actor_id</span><br><span class="line">         rows: 27</span><br><span class="line">     filtered: 100.00</span><br><span class="line">        Extra: NULL</span><br><span class="line">*************************** 3. row ***************************</span><br><span class="line">           id: 2</span><br><span class="line">  select_type: DERIVED</span><br><span class="line">        table: film_actor</span><br><span class="line">   partitions: NULL</span><br><span class="line">         type: index</span><br><span class="line">possible_keys: PRIMARY,idx_fk_film_id</span><br><span class="line">          key: PRIMARY</span><br><span class="line">      key_len: 4</span><br><span class="line">          ref: NULL</span><br><span class="line">         rows: 5462</span><br><span class="line">     filtered: 100.00</span><br><span class="line">        Extra: Using index</span><br><span class="line">3 rows in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure>
<h3 id="limit"><a class="header-anchor" href="#limit"></a>LIMIT</h3>
<p>LIMIT 常用于分页处理，时常会伴随 ORDER BY 从句使用，因此大多时候会使用 Filesorts ，这样会造成大量的 IO 问题</p>
<p>优化步骤1：使用有索引的列或主键进行 Order By 操作<br>
优化步骤2：记录上次返回的主键，在下次查询时使用主键过滤（保证主键是自增且有索引）</p>
<h3 id="索引优化"><a class="header-anchor" href="#索引优化"></a>索引优化</h3>
<h4 id="1-为合适的列建立索引"><a class="header-anchor" href="#1-为合适的列建立索引"></a>1.为合适的列建立索引</h4>
<ul>
<li>在 where 从句，group by 从句，order by 从句，on 从句中出现的列</li>
<li>索引字段越小越好</li>
<li>离散度的列放到联合索引的前面</li>
</ul>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT * FROM payment WHERE staff_id = 2 AND customer_id = 584;</span><br></pre></td></tr></table></figure>
<p>上述 SQL 语句，是 <code>index(staff_id,customer_id)</code> 合理，还是 <code>index(customer_id,staff_id)</code> 合理。执行语句如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT count(DISTINCT customer_id) , count(DISTINCT staff_id) FROM payment;</span><br><span class="line"></span><br><span class="line">-- 结果是 599	2</span><br></pre></td></tr></table></figure>
<p>由于 customer_id 的离散度更大，所以应该使用 <code>index(customer_id,staff_id)</code></p>
<h4 id="2-找到重复和冗余的索引"><a class="header-anchor" href="#2-找到重复和冗余的索引"></a>2.找到重复和冗余的索引</h4>
<p>之所以要找到重复和冗余的索引，是因为过多的索引不但影响写入，而且影响查询，索引越多，分析越慢。那么为何重复索引、冗余索引？概念如下：</p>
<p>重复索引是指相同的列以相同的顺序建立的同类型的索引，如下表中 primary key 和 ID 列上的索引就是重复索引，例子如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">test</span>(</span><br><span class="line">	<span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span> ,</span><br><span class="line">	<span class="keyword">NAME</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">	title <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">	<span class="keyword">UNIQUE</span>(<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">INNODB</span>;</span><br></pre></td></tr></table></figure>
<p><code>UNIQUE(ID)</code> 和 <code>PRIMARY KEY</code> 重复了。</p>
<p>冗余索引是指多个索引的前缀列相同，或是在联合索引中包含了主键的索引，例子如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">test</span>(</span><br><span class="line">	<span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span> ,</span><br><span class="line">	<span class="keyword">NAME</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">	title <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">	<span class="keyword">KEY</span>(<span class="keyword">NAME</span> , <span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">INNODB</span>;</span><br></pre></td></tr></table></figure>
<p>查找重复及冗余索引的 SQL 语句如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE information_schema;</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">	a.TABLE_SCHEMA AS &apos;数据名&apos; ,</span><br><span class="line">	a.table_name AS &apos;表名&apos; ,</span><br><span class="line">	a.index_name AS &apos;索引1&apos; ,</span><br><span class="line">	b.INDEX_NAME AS &apos;索引2&apos; ,</span><br><span class="line">	a.COLUMN_NAME AS &apos;重复列名&apos;</span><br><span class="line">FROM</span><br><span class="line">	STATISTICS a</span><br><span class="line">JOIN STATISTICS b ON a.TABLE_SCHEMA = b.TABLE_SCHEMA</span><br><span class="line">AND a.TABLE_NAME = b.table_name</span><br><span class="line">AND a.SEQ_IN_INDEX = b.SEQ_IN_INDEX</span><br><span class="line">AND a.COLUMN_NAME = b.COLUMN_NAME</span><br><span class="line">WHERE</span><br><span class="line">	a.SEQ_IN_INDEX = 1</span><br><span class="line">AND a.INDEX_NAME &lt;&gt; b.INDEX_NAME</span><br></pre></td></tr></table></figure>
<p>也可以使用工具 <code>pt-duplicate-key-checker</code> 检查重复索引和冗余索引,使用例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pt-duplicate-key-checker -uroot -p &apos;123456&apos; -h 127.0.0.1 -d sakila</span><br></pre></td></tr></table></figure>
<p>执行结果如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ########################################################################</span></span><br><span class="line"><span class="comment"># Summary of indexes</span></span><br><span class="line"><span class="comment"># ########################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Size Duplicate Indexes   118425374</span></span><br><span class="line"><span class="comment"># Total Duplicate Indexes  24</span></span><br><span class="line"><span class="comment"># Total Indexes            1439</span></span><br></pre></td></tr></table></figure>
<h4 id="3-删除不用的索引"><a class="header-anchor" href="#3-删除不用的索引"></a>3.删除不用的索引</h4>
<p>目前 MySQL 中还没有记录索引的使用情况，但是在 PerconMySQL 和 MariaDB 中可以通过 INDEX_STATISTICS 表来查看哪些索引未使用，但在 MySQL 中目前只能通过慢查询日志配合共组 <code>pt-index-usage</code> 来进行索引使用情况的分析。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pt-index-usage -uroot -p &apos;123456&apos; /usr/local/var/mysql/luyiyuandeMacBook-Pro-slow.log;</span><br></pre></td></tr></table></figure>
<h2 id="数据库结构优化"><a class="header-anchor" href="#数据库结构优化"></a>数据库结构优化</h2>
<h3 id="选择合适的数据类型"><a class="header-anchor" href="#选择合适的数据类型"></a>选择合适的数据类型</h3>
<ul>
<li>使用可以存下你的数据的最小的数据类型</li>
<li>使用简单的数据类型。Integer 要比 varchar 类型在 MySQL 中处理更高效</li>
<li>尽可能使用 not null 定义字段</li>
<li>尽量少用 text 类型，非用不可时最好考虑分表</li>
</ul>
<h3 id="数据库表的范式化优化与反范式化优化"><a class="header-anchor" href="#数据库表的范式化优化与反范式化优化"></a>数据库表的范式化优化与反范式化优化</h3>
<p>略</p>
<h3 id="数据库表的垂直拆分"><a class="header-anchor" href="#数据库表的垂直拆分"></a>数据库表的垂直拆分</h3>
<p>垂直拆分，就是把原来一个有很多列的表拆分成多个表，这解决了表的宽度问题。通常垂直拆分就可以按以下原则进行：</p>
<ul>
<li>把不太常用的字段单独存放到一个表中</li>
<li>把大字段独立存放到一个表中</li>
<li>把经常一起使用的字段放到一起</li>
</ul>
<h3 id="数据库表的水平拆分"><a class="header-anchor" href="#数据库表的水平拆分"></a>数据库表的水平拆分</h3>
<p>当单表的数据量过大，导致增删查改等操作过慢，这时候需要对表进行水平拆分。水平拆分的表，每一张表的结构都是完全一致的。</p>
<p>常用的水平拆分方法为：</p>
<ol>
<li>对 customer_id 进行 hash 运算，如果要拆分成 5 个表则使用 mod(customer_id,5) 取出 0-4 个值</li>
<li>针对不同的 hashID 把数据存到不同的表中</li>
</ol>
<p>挑战：</p>
<ul>
<li>跨分区表进行数据查询</li>
<li>统计及后台报表操作</li>
</ul>
<h2 id="系统配置优化"><a class="header-anchor" href="#系统配置优化"></a>系统配置优化</h2>
<h3 id="数据库系统配置优化"><a class="header-anchor" href="#数据库系统配置优化"></a>数据库系统配置优化</h3>
<p>数据库是基于操作系统的，目前大多数 MySQL 都是安装在Linux 系统之上，所以对于操作系统的一些参数配置也会影响到 MySQL 的性能，下面列举一些常用到的系统配置。</p>
<p>网络方面的配置，要修改文件 <code>/etc/sysctl.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 增加 tcp 支持的队列数</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 65535</span><br><span class="line"></span><br><span class="line"># 减少断开连接时，资源回收</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 8000</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.tcp_fin_timeout = 10</span><br></pre></td></tr></table></figure>
<p>打开文件数的限制，可以使用 ulimit -a 查看目录的各项限制，可以修改文件 <code>/etc/security/limits.conf</code> ，增加以下内容以修改打开文件数量的限制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">soft nofile 65535</span><br><span class="line">hard nofile 65535</span><br></pre></td></tr></table></figure>
<p>除此之外最好在 MySQL 服务器上关闭 iptables，selinux 等防火墙软件。</p>
<h3 id="mysql-配置文件"><a class="header-anchor" href="#mysql-配置文件"></a>MySQL 配置文件</h3>
<p>MySQL 可以通过启动时指定配置参数和使用配置文件两种方法进行配置，在一般情况下，配置文件位于 <code>/etc/my.cnf</code> 或是 <code>/etc/mysql/my.cnf</code>，MySQL 查询配置文件的顺序是可以通过以下方法过的</p>
<p>常用参数说明</p>
<ul>
<li>innodb_buffer_pool_size：用于配置 Innodb 的缓冲池
<ul>
<li>如果数据库中只有 Innodb 表，则推荐配置量为总内存的 75%</li>
<li>Innodb_buffer_pool_size &gt;= Total MB</li>
</ul>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ENGINE</span> ,</span><br><span class="line"><span class="keyword">round</span>(</span><br><span class="line">  <span class="keyword">sum</span>(data_length + index_length) / <span class="number">1024</span> / <span class="number">1024</span> ,</span><br><span class="line">  <span class="number">1</span></span><br><span class="line">) <span class="keyword">AS</span> <span class="string">'Total MB'</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">information_schema. <span class="keyword">TABLES</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">table_schema <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line">  <span class="string">"information_schema"</span> ,</span><br><span class="line">  <span class="string">"performance_schema"</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">ENGINE</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>innodb_buffer_pool_instances</strong>：MySQL 5.5 中新增参数，可以控制缓冲池的个数，默认情况下只有一个缓冲池。</li>
<li><strong>innodb_log_buffer_size</strong>：Innodb 日志缓冲的大小，由于日志最长，每秒钟就会刷新，所以一般不用太大。</li>
<li><strong>innodb_flush_log_at_trx_commit</strong>：对 Innodb 的 IO 效率影响很大。</li>
<li><strong>innodb_file_per_table</strong>：控制 Innodb 每一个表都使用独立的表空间，默认为 OFF，也就是所有表都会建立在共享表空间中。</li>
<li><strong>innodb_stats_on_metadata</strong>：决定 MySQL 在什么情况下会刷新 innodb 表的统计信息。</li>
</ul>
<h3 id="第三方配置工具使用"><a class="header-anchor" href="#第三方配置工具使用"></a>第三方配置工具使用</h3>
<p><strong><code>percona：https://tools.percona.com/</code></strong></p>
<h2 id="服务器硬件优化"><a class="header-anchor" href="#服务器硬件优化"></a>服务器硬件优化</h2>
<ul>
<li>如何选择 CPU
<ul>
<li>MySQL 有一些工作只能使用到单核 CPU，选择高频</li>
<li>MySQL 对 CPU 核数的支持并不是越多越快，MySQL 5.5 版本不要超过 32 个核</li>
</ul>
</li>
<li>硬盘 IO 优化
<ul>
<li>RAID 级别简介
<ul>
<li>RAID 0：也称为条带，就是把多个磁盘链接成一个硬盘使用，这个级别 IO 最好</li>
<li>RAID 1：也成为镜像，要求至少两个磁盘，每组磁盘存储的数据相同</li>
<li>RAID 1 + 0：就是 RAID 1 和 RAID 0的结合。同时具备两个级别的优缺点。一般建议数据库使用这个级别。</li>
<li>RAID 5：把多个（最少 3 个）硬盘合并成 1 个逻辑盘使用，数据读写时会建立奇偶校验信息，并且奇偶校验信息和相对应的数据分别存储在不同的磁盘上。当 RAID 5 的一个磁盘数据发生损坏后，利用剩下的数据和相应的奇偶校验信息去恢复被损坏的数据。</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Shell 基础之条件判断语句</title>
    <url>/2016/10/04/Linux-Shell-%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h2 id="shell-条件判断式语句"><a class="header-anchor" href="#shell-条件判断式语句"></a>Shell 条件判断式语句</h2>
<h3 id="按文件类型判断"><a class="header-anchor" href="#按文件类型判断"></a>按文件类型判断</h3>
<table>
<thead>
<tr>
<th>测试选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>-b 文件</td>
<td>判断该文件是否存在，并且是否为块设备文件</td>
</tr>
<tr>
<td>-c 文件</td>
<td>判断该文件是否存在，并且是否为字符设备文件</td>
</tr>
<tr>
<td>-d 文件</td>
<td>判断该文件是否存在，并且是否为目录文件</td>
</tr>
<tr>
<td>-e 文件</td>
<td>判断该文件是否存在（存在为真）</td>
</tr>
<tr>
<td>-f 文件</td>
<td>判断该文件是否存在，并且是否为普通文件</td>
</tr>
<tr>
<td>-L 文件</td>
<td>判断该文件是否存在，并且是否为符号链接文件</td>
</tr>
<tr>
<td>-p 文件</td>
<td>判断该文件是否存在，并且是否为管道文件</td>
</tr>
<tr>
<td>-s 文件</td>
<td>判断该文件是否存在，并且是否为非空</td>
</tr>
<tr>
<td>-S 文件</td>
<td>判断该文件是否存在，并且是否为套接字文件</td>
</tr>
</tbody>
</table>
<p>两种判断格式</p>
<ul>
<li><code>test -e /root/install.log</code></li>
<li><code>[ -e /root/install.log ]</code></li>
<li><code>[ -e /root/install.log ] &amp;&amp; echo yes || echo no</code></li>
</ul>
<h3 id="按文件权限判断"><a class="header-anchor" href="#按文件权限判断"></a>按文件权限判断</h3>
<table>
<thead>
<tr>
<th>测试选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>-r 文件</td>
<td>判断该文件是否存在，并且是否该文件拥有读权限</td>
</tr>
<tr>
<td>-w 文件</td>
<td>判断该文件是否存在，并且是否该文件拥有写权限</td>
</tr>
<tr>
<td>-x 文件</td>
<td>判断该文件是否存在，并且是否该文件拥有执行权限</td>
</tr>
<tr>
<td>-u 文件</td>
<td>判断该文件是否存在，并且是否该文件拥有 SUID 权限</td>
</tr>
<tr>
<td>-g 文件</td>
<td>判断该文件是否存在，并且是否该文件拥有 SGID 权限</td>
</tr>
<tr>
<td>-k 文件</td>
<td>判断该文件是否存在，并且是否该文件拥有 SBit 权限</td>
</tr>
</tbody>
</table>
<h3 id="两个文件之间的比较"><a class="header-anchor" href="#两个文件之间的比较"></a>两个文件之间的比较</h3>
<table>
<thead>
<tr>
<th>测试选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>文件1 -nt 文件2</td>
<td>判断文件 1 的修改时间是否比文件 2 的新</td>
</tr>
<tr>
<td>文件1 -ot 文件2</td>
<td>判断文件 1 的修改时间是否比文件 2 的旧</td>
</tr>
<tr>
<td>文件1 -ef 文件2</td>
<td>判断文件 1 是否和文件 2 的 Inode 号一致，可以理解为两个文件是否为同一个文件，这个判断用于硬链接判断是很好的方法</td>
</tr>
</tbody>
</table>
<p>例子</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 创建一个硬链接</span><br><span class="line">ln /root/student.txt/tmp/stu.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 测试</span><br><span class="line">[/root/student.txt -ef /tmp/stu.txt] &amp;&amp; echo "yes" || echo "no"</span><br></pre></td></tr></table></figure>
<h3 id="两个整数之间的比较"><a class="header-anchor" href="#两个整数之间的比较"></a>两个整数之间的比较</h3>
<table>
<thead>
<tr>
<th>测试选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>整数1 -eq 整数2</td>
<td>判断整数 1 是否和整数 2 相等</td>
</tr>
<tr>
<td>整数1 -ne 整数2</td>
<td>判断整数 1 是否和整数 2 不相等</td>
</tr>
<tr>
<td>整数1 -gt 整数2</td>
<td>判断整数 1 是否大于整数 2</td>
</tr>
<tr>
<td>整数1 -lt 整数2</td>
<td>判断整数 1 是否小于整数 2</td>
</tr>
<tr>
<td>整数1 -ge 整数2</td>
<td>判断整数 1 是否大于等于整数 2</td>
</tr>
<tr>
<td>整数1 -le 整数2</td>
<td>判断整数 1 是否小于等于整数 2</td>
</tr>
</tbody>
</table>
<p>例子</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ 23 -ge 22 ] &amp;&amp; echo "yes" || echo "no"</span><br><span class="line">[ 23 -le 22 ] &amp;&amp; echo "yes" || echo "no"</span><br></pre></td></tr></table></figure>
<h3 id="字符串的判断"><a class="header-anchor" href="#字符串的判断"></a>字符串的判断</h3>
<table>
<thead>
<tr>
<th>测试选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>-z</td>
<td>判断字符串是否为空</td>
</tr>
<tr>
<td>-n</td>
<td>判断字符串是否为非空</td>
</tr>
<tr>
<td>字符串1==字符串2</td>
<td>判断字符串 1 是否和字符串 2 相等</td>
</tr>
<tr>
<td>字符串1!=字符串2</td>
<td>判断字符串 1 是否和字符串 2 不相等</td>
</tr>
</tbody>
</table>
<p>例子</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 给 name 变量赋值</span><br><span class="line">name=fengj</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 判断 name 变量是否为空</span><br><span class="line">[ -z "$name" ] &amp;&amp; echo "yes" || echo "no"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 给变量 aa 和变量 bb 赋值</span><br><span class="line">aa=11</span><br><span class="line">bb=22</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 判断两个变量的值是否相等</span><br><span class="line">[ "$aa" == "$bb" ] &amp;&amp; echo yes || echo no</span><br></pre></td></tr></table></figure>
<h3 id="多重条件判断"><a class="header-anchor" href="#多重条件判断"></a>多重条件判断</h3>
<table>
<thead>
<tr>
<th>测试选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>判断1 -a 判断2</td>
<td>逻辑与，判断 1 和判断 2 都成立，最终的结果才为真</td>
</tr>
<tr>
<td>判断1 -o 判断2</td>
<td>逻辑或，判断 1 和判断 2 有一个成立，最终的结果就为真</td>
</tr>
<tr>
<td>! 判断</td>
<td>逻辑非，使原始的判断式取反</td>
</tr>
</tbody>
</table>
<p>例子</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 给变量 aa 赋值</span><br><span class="line">aa=11</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 判断变量 aa 是否有值，同时判断变量 aa 是否大于 23</span><br><span class="line">[ -n "$aa" -a "$aa" -gt 23 ] &amp;&amp; echo "yes" || echo "no"</span><br></pre></td></tr></table></figure>
<h2 id="shell-单分支if语句"><a class="header-anchor" href="#shell-单分支if语句"></a>Shell 单分支if语句</h2>
<h3 id="概述"><a class="header-anchor" href="#概述"></a>概述</h3>
<p>如何 “背” 程序</p>
<ol>
<li>抄写目标程序并能正确运行</li>
<li>为目标程序补全注释</li>
<li>删掉注释，为代码重新加注释</li>
<li>删除代码，看注释写代码</li>
<li>删除注释和代码，从头开始写</li>
</ol>
<h3 id="单分支-if-语句"><a class="header-anchor" href="#单分支-if-语句"></a>单分支 if 语句</h3>
<p>语法支持</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ 条件判断式 ];then</span><br><span class="line">	程序</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ 条件判断式 ]</span><br><span class="line">	then</span><br><span class="line">	程序</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>例子1：判断登录的用户是否为 root</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">test=$(env|grep "USER" |cut -d "=" -f2)</span><br><span class="line"></span><br><span class="line">if [ "$test" == root ]</span><br><span class="line">	then</span><br><span class="line">	echo "Current user is root."</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h3 id="单分支-if-语句例子：判断分区使用率"><a class="header-anchor" href="#单分支-if-语句例子：判断分区使用率"></a>单分支 if 语句例子：判断分区使用率</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 统计根分区使用率，把根分区使用率作为变量值赋予变量 rate</span><br><span class="line">rate=$(df -h | grep "/dev/disk1" | awk '&#123;print $5&#125;' | cut -d "%" -f 1)</span><br><span class="line"></span><br><span class="line">if [ $rate -ge 70 ]</span><br><span class="line">then</span><br><span class="line">	echo "Warning! /dev/disk1 is full!!"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h2 id="shell-双分支if语句"><a class="header-anchor" href="#shell-双分支if语句"></a>Shell 双分支if语句</h2>
<p>语法支持</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ 条件判断式 ]</span><br><span class="line">	then</span><br><span class="line">		条件成立时，执行的程序</span><br><span class="line">	else</span><br><span class="line">		条件不成立时，执行的另一个程序</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h3 id="双分支-if-语句例子：判断输入的是否是一个目录"><a class="header-anchor" href="#双分支-if-语句例子：判断输入的是否是一个目录"></a>双分支 if 语句例子：判断输入的是否是一个目录</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">read -t 30 -p "Please input a dir:" dir</span><br><span class="line"></span><br><span class="line">if [ -d "$dir" ]</span><br><span class="line">then</span><br><span class="line">    echo "is a Dir"</span><br><span class="line">else</span><br><span class="line">    echo "is not a Dir"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h3 id="双分支-if-语句例子：判断apache服务是否启动"><a class="header-anchor" href="#双分支-if-语句例子：判断apache服务是否启动"></a>双分支 if 语句例子：判断Apache服务是否启动</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 列出所有进程，选取 httpd 进程，反选 grep</span><br><span class="line">test=$(ps aux | grep httpd | grep -v grep)</span><br><span class="line"></span><br><span class="line">if [ -n "$test" ]</span><br><span class="line">	then</span><br><span class="line">		echo "$(date) httpd is ok!" &gt;&gt; /tmp/autostart-acc.log</span><br><span class="line">	else</span><br><span class="line">		sudo apachectl restart  &amp;&gt; /dev/null</span><br><span class="line">		echo "$(date) restart httpd !!" &gt;&gt; /tmp/autostart-err.log</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h2 id="shell-多分支-if-语句"><a class="header-anchor" href="#shell-多分支-if-语句"></a>Shell 多分支 if 语句</h2>
<p>语言支持：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ 条件判断式 1 ]</span><br><span class="line">	then</span><br><span class="line">		条件成立 1 时，执行的程序</span><br><span class="line">elif [ 条件判断式 2 ]</span><br><span class="line">	then</span><br><span class="line">		条件成立 2 时，执行的程序</span><br><span class="line">else</span><br><span class="line">		条件不成立时，执行的另一个程序</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h3 id="多分支-if-语句例子：判断用户输入的是什么文件"><a class="header-anchor" href="#多分支-if-语句例子：判断用户输入的是什么文件"></a>多分支 if 语句例子：判断用户输入的是什么文件</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"><span class="meta">#</span> 判断用户输出的是什么文件</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 接受键盘的输入，并赋予变量file</span><br><span class="line">read -p "Please input a filename:" file</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 判断变量是否为空</span><br><span class="line">if [ -z "$file" ]</span><br><span class="line">then</span><br><span class="line">	echo "Error,Please input a filename"</span><br><span class="line">	exit 1</span><br><span class="line"><span class="meta">#</span> 判断 file 的值是否存在</span><br><span class="line">elif [ ! -e "$file" ]</span><br><span class="line">then</span><br><span class="line">	echo "Your input is not a file!"</span><br><span class="line">	exit 2</span><br><span class="line"><span class="meta">#</span> 判断 file 的值是否为普通文件</span><br><span class="line">elif [ -f "$file" ]</span><br><span class="line">then</span><br><span class="line">	echo "$file is a regulare file!"</span><br><span class="line"><span class="meta">#</span> 判断 file 的值是否为目录文件</span><br><span class="line">then</span><br><span class="line">	echo "$file is a directory!"</span><br><span class="line">else</span><br><span class="line">	echo "$file is an other file!"</span><br></pre></td></tr></table></figure>
<h2 id="shell-多分支case语句"><a class="header-anchor" href="#shell-多分支case语句"></a>Shell 多分支case语句</h2>
<p>语法支持</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">case $变量名 in</span><br><span class="line">	"值1")</span><br><span class="line">		如果变量的值等于值 1，则执行程序1</span><br><span class="line">	;;</span><br><span class="line">	"值2")</span><br><span class="line">		如果变量的值等于值 2，则执行程序2</span><br><span class="line">	;;</span><br><span class="line">	*)</span><br><span class="line">		如果变量的值都不是以上的值，则执行此程序</span><br><span class="line">	;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Shell 基础之运算符</title>
    <url>/2016/10/04/Linux-Shell-%E5%9F%BA%E7%A1%80%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h2 id="shell-运算符"><a class="header-anchor" href="#shell-运算符"></a>Shell 运算符</h2>
<ul>
<li>declare 声明变量
<ul>
<li><code>declare [+/-][选项] 变量名</code>
<ul>
<li>- 给变量设定类型属性
<ul>
<li>-a 将变量声明为数组型</li>
<li>-i 将变量声明为整数型</li>
<li>-x 将变量声明为环境变量</li>
<li>-r 将变量声明为只读变量</li>
<li>-p 显示指定变量的被声明的类型</li>
</ul>
</li>
<li>+ 取消变量的类型属性</li>
</ul>
</li>
<li><code>declare -x test=123</code> 声明环境变量</li>
</ul>
</li>
<li>declare -p 查询变量的属性
<ul>
<li><code>declare -p</code> 查询所有变量的属性</li>
<li><code>declare -p 变量名</code> 查询指定变量的属性</li>
</ul>
</li>
<li>expr 或 let 数值运算工具</li>
</ul>
<h2 id="shell-运算符-例子"><a class="header-anchor" href="#shell-运算符-例子"></a>Shell 运算符 例子</h2>
<h3 id="shell-declare-例子"><a class="header-anchor" href="#shell-declare-例子"></a>Shell declare 例子</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 给变量 aa 和 bb 赋值</span><br><span class="line">aa=11</span><br><span class="line">bb=22</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 声明变量 cc 的类型是整数型，它的值是 aa 和 bb 的和</span><br><span class="line">declare -i cc=$aa+$bb</span><br></pre></td></tr></table></figure>
<h3 id="声明数组变量例子"><a class="header-anchor" href="#声明数组变量例子"></a>声明数组变量例子</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 定义数组</span><br><span class="line">movie[0]=zp</span><br><span class="line">movie[1]=tp</span><br><span class="line">declare -a movie[2]=live</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看数组</span><br><span class="line">echo $&#123;movie&#125;</span><br><span class="line">echo $&#123;movie[2]&#125;</span><br><span class="line">echo $&#123;movie[*]&#125;</span><br></pre></td></tr></table></figure>
<h2 id="shell-环境变量配置文件"><a class="header-anchor" href="#shell-环境变量配置文件"></a>Shell 环境变量配置文件</h2>
<p>环境变量配置文件中主要是定义对系统操作环境生效的系统默认环境变量，如 PATH 等</p>
<ul>
<li>source 命令
<ul>
<li><code>source 配置文件</code></li>
<li><code>. 配置文件</code></li>
</ul>
</li>
<li>常用的环境变量配置文件
<ul>
<li>/etc/profile
<ul>
<li>USER 变量</li>
<li>LOGNAME 变量</li>
<li>MAIL 变量</li>
<li>PATH 变量</li>
<li>HOSTNAME 变量</li>
<li>HISTSIZE 变量</li>
<li>umask 查看系统默认权限
<ul>
<li>文件最高权限为 666</li>
<li>目录最高权限为 777</li>
<li>权限不能使用数字进行换算，而必须使用字母</li>
<li>umask 定义的权限，是系统默认权限中准备丢弃的权限</li>
</ul>
</li>
<li>调用 /etc/profile.d/*sh 文件</li>
</ul>
</li>
<li>/etc/profile.d/*sh</li>
<li>~/.bash_profile</li>
<li>~/.bashrc</li>
<li>/etc/bashrc</li>
</ul>
</li>
<li>其他配置文件
<ul>
<li><code>~/.bash_logout</code> 注销时生效的环境变量配置文件</li>
</ul>
</li>
<li>Shell 登录信息
<ul>
<li><code>cat /etc/issue</code> 本地终端欢迎信息</li>
<li><code>cat /etc/issue.net</code> 远程终端欢迎信息
<ul>
<li>转义符在 <code>/etc/issue.net</code> 文件中不能使用</li>
<li>是否显示此欢迎信息，由 SSH 的配置文件 <code>/etc/ssh/sshd_config</code> 决定，加入 “Banner /etc/issue.net” 行才能显示（需要重启 SSH 服务）</li>
</ul>
</li>
<li><code>/etc/motd</code> 登陆后欢迎信息，不管是本地登录，还是远程登录，都可以显示此欢迎信息</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Shell 基础之变量</title>
    <url>/2016/10/04/Linux-Shell-%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h2 id="shell-变量概述"><a class="header-anchor" href="#shell-变量概述"></a>Shell 变量概述</h2>
<p>Shell 与其他语言的对比</p>
<ul>
<li>PHP 和 JAVA 主要实现功能</li>
<li>Shell 简化管理操作</li>
</ul>
<p>什么是变量</p>
<ul>
<li>变量是计算机内存的单元，其中存放的值可以改变</li>
<li>变量让你能够把程序中准备使用的每一段数据都赋给一个简短、易于记忆的名字，因此它们十分有用</li>
</ul>
<p>变量命名规则</p>
<ul>
<li>变量名必须以字母或下划线开头，名字中间只能由字母、数字和下划线组成</li>
<li>变量名的长度不得超过 255 个字符</li>
<li>变量名在有效的范围内必须是唯一的</li>
<li>在 Bash 中，变量的默认类型都是字符串型</li>
</ul>
<p>变量存储类型</p>
<ul>
<li>整型</li>
<li>浮点型</li>
<li>日期型</li>
<li>字符串型</li>
</ul>
<p>变量定义分类</p>
<ul>
<li>用户自定义变量：用户自定义的变量</li>
<li>环境变量：这种变量中主要保存的是和系统操作环境相关的数据。变量可以自定义，但是对系统生效的环境变量名和变量作用是固定的。</li>
<li>位置参数变量：这种变量主要是用来向脚本当中传递参数或数据的。变量名不能自定义，变量作用固定。</li>
<li>预定义变量：是 Bash 中已经定义好的变量，变量名不能自定义，变量作用也是固定的。</li>
</ul>
<h2 id="shell-变量与变量分类"><a class="header-anchor" href="#shell-变量与变量分类"></a>Shell 变量与变量分类</h2>
<ul>
<li>
<p>用户自定义变量</p>
<ul>
<li>变量定义
<ul>
<li><code>变量名=变量值</code>
<ul>
<li><code>x=5</code></li>
<li><code>name=&quot;Luis&quot;</code></li>
</ul>
</li>
<li>变量赋值时候，变量名与变量值之间不能有空格</li>
</ul>
</li>
<li>变量调用
<ul>
<li><code>echo $x</code></li>
<li><code>echo $name</code></li>
</ul>
</li>
<li>变量叠加
<ul>
<li>x=123</li>
<li>x=&quot;$x&quot;456</li>
<li>x=${x}789</li>
</ul>
</li>
<li>变量查看
<ul>
<li>set
<ul>
<li>-u 如果设定此选项，调用未声明变量时会报错（默认无任何显示）</li>
</ul>
</li>
</ul>
</li>
<li>变量删除
<ul>
<li><code>unset 变量名</code></li>
</ul>
</li>
</ul>
</li>
<li>
<p>环境变量</p>
<ul>
<li>用户自定义环境变量
<ul>
<li>设置环境变量
<ul>
<li><code>export 变量名=变量值</code></li>
<li><code>变量名=变量值;export 变量名</code></li>
</ul>
</li>
<li>查看环境变量
<ul>
<li><code>set</code> 查看所有变量</li>
<li><code>env</code> 查看环境变量</li>
</ul>
</li>
<li>删除环境变量
<ul>
<li><code>unset 变量名</code></li>
</ul>
</li>
</ul>
</li>
<li>系统常用的环境变量
<ul>
<li>HOSTNAME 主机名</li>
<li>SHELL 当前的 Shell</li>
<li>TERM 终端环境</li>
<li>HISTSIZE 历史命令条数</li>
<li>SSH_CLIENT 当前操作环境是用 ssh 连接的，这里记录客户端 IP</li>
<li>SSH_TTY ssh 连接的终端时 pts/1</li>
<li>USER 当前登录的用户</li>
<li>PATH 系统查找命令的路径
<ul>
<li><code>echo $PATH</code> 查看 PATH 环境变量</li>
<li><code>PATH=&quot;$PATH&quot;:/root/sh</code> 增加 PATH 变量的值</li>
</ul>
</li>
<li>PS1 变量 命令提示符设置
<ul>
<li>\d 显示日期，格式为&quot;星期 月 日&quot;</li>
<li>\H 显示完整的主机名，如默认主机名 “localhost.localdomain”</li>
<li>\t 显示 24 小时制时间，格式为 “HH:MM:SS”</li>
<li>\A 显示 24 小时制时间，格式为 “HH:MM”</li>
<li>\u 显示当前用户名</li>
<li>\w 显示当前所在目录的完整名称</li>
<li>\W 显示当前所在目录的最后一个目录</li>
<li>\$ 提示符。如果是 root 用户会显示提示符为 “#”，如果是普通用户会显示提示符为 “$”</li>
<li>例子 <code>PS1='[\u@\A \w]\$ '</code></li>
</ul>
</li>
</ul>
</li>
<li>语系变量
<ul>
<li><code>locale</code> 查询当前系统语系（<code>echo $LANG</code>）
<ul>
<li>LANG 定义系统主语系的变量</li>
<li>LC_ALL 定义整体语系的变量</li>
</ul>
</li>
<li><code>locale -a | more</code> 查看 Linux 支持的所有语系</li>
<li><code>cat /etc/sysconfig/i18n</code> 查询系统默认语系（下次开机语系变量）</li>
</ul>
</li>
</ul>
</li>
<li>
<p>位置参数变量</p>
<table>
<thead>
<tr>
<th>置参数变量</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>n</td>
<td>n 为数字，$0 代表命令本身，$1-$9 代表第一到第九个参数，十以上的参数需要用大括号包含，如 ${10}</td>
</tr>
<tr>
<td>*</td>
<td>这个变量代表命令行中所有的参数，$* 把所有的参数看成一个整体</td>
</tr>
<tr>
<td>@</td>
<td>这个变量代表命令行中所有的参数，不过 $@ 把每个参数区分对待</td>
</tr>
<tr>
<td>#</td>
<td>这个变量代表命令行中所有参数的个数</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>预定义变量</p>
<table>
<thead>
<tr>
<th>定义变量</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>?</td>
<td>最后一次执行的命令的返回状态。如果这个变量的值为 0，证明上一个命令正确执行；如果这个变量的值为非 0(具体是哪个数，由命令自己决定，则证明上一个命令执行不正确)</td>
</tr>
<tr>
<td>$</td>
<td>当前进程的进程号</td>
</tr>
<tr>
<td>!</td>
<td>后台运行的最后一个进程的进程号</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>接收键盘输入</p>
<ul>
<li><code>read [选项] [变量名]</code>
<ul>
<li>-p 提示信息：在等待 read 输入时，输出提示信息</li>
<li>-t 秒数：read 命令会一直等待用户输入，使用此选项可以指定等待时间</li>
<li>-n 字符数：read 命令只接受指定的字符数，就会执行</li>
<li>-s 隐藏输入的数据，适用于机密信息的输入</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="shell-变量例子"><a class="header-anchor" href="#shell-变量例子"></a>Shell 变量例子</h2>
<p>位置参数例子 1</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">num1=$1</span><br><span class="line">num2=$2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 变量 sum 的和是 num1 加 num2</span><br><span class="line">sum=$(($num1+$num2))</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 打印变量 sum 的值</span><br><span class="line">echo $sum</span><br></pre></td></tr></table></figure>
<p>位置参数例子 2</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 使用 $# 代表所有参数的个数</span><br><span class="line">echo "A total of $# parameters"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 使用 $* 代表所有的参数</span><br><span class="line">echo "The parameters is:$*"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 使用 $@ 也代表所有参数</span><br><span class="line">echo "The parameters is:$@"</span><br></pre></td></tr></table></figure>
<p>位置参数例子 3（$* 与 $@ 的区别）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">for i in "$*"</span><br><span class="line"><span class="meta">#</span> $* 中的所有参数看成是一个整体，所以这个 for 循环只会循环一次</span><br><span class="line">do</span><br><span class="line">	echo "The parameters is: $i"</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for y in "$@"</span><br><span class="line"><span class="meta">#</span> $@ 中的每个参数都看成是独立的，所以 "$@" 中有几个参数，就会循环几次</span><br><span class="line">do</span><br><span class="line">	echo "Parameter:$y"</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>接收键盘输入例子 1</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">read -p "Please input your name: " -t 30 name</span><br><span class="line">echo $name</span><br><span class="line"></span><br><span class="line">read -p "Please input your passwd: " -s passed</span><br><span class="line">echo -e "\n"</span><br><span class="line">echo $passwd</span><br><span class="line"></span><br><span class="line">read -p "Please input your sex [M/F]: " -n 1 sex</span><br><span class="line">echo -e "\n"</span><br><span class="line">echo $sex</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Shell 实战</title>
    <url>/2016/10/03/Linux-Shell-%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<h2 id="monitor-man-sh"><a class="header-anchor" href="#monitor-man-sh"></a>monitor_man.sh</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">resettem=$(tput sgr0)</span><br><span class="line">declare -A ssharray</span><br><span class="line">i=0</span><br><span class="line">numbers=""</span><br><span class="line"></span><br><span class="line">for script_file in `ls -I "monitor_man.sh" ./`</span><br><span class="line">do</span><br><span class="line">  echo -e "\e[1;35m" "The Script:" $&#123;i&#125; '==&gt;' $&#123;resettem&#125; $&#123;script_file&#125;</span><br><span class="line"><span class="meta">  ssharray[$</span>i]=$&#123;script_file&#125;</span><br><span class="line">  numbers="$&#123;numbers&#125; | $&#123;i&#125;"</span><br><span class="line"></span><br><span class="line">  i=$((i+1))</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">  read -p "Please input a number [ $&#123;numbers&#125; ]:" execshell</span><br><span class="line">  if [[ ! $&#123;execshell&#125; =~ ^[0-9]+ ]];then</span><br><span class="line">        exit 0</span><br><span class="line">  fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h2 id="system-monitor-sh"><a class="header-anchor" href="#system-monitor-sh"></a>system_monitor.sh</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">clear</span><br><span class="line"></span><br><span class="line">if [[ $# -eq 0 ]]</span><br><span class="line">then</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Define Variable reset_terminal</span><br><span class="line">reset_terminal=$(tput sgr0)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check OS Type</span><br><span class="line">os=$(uname -o)</span><br><span class="line">echo -e '\E[32m' "Check OS Type" $reset_terminal $os</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check OS Release Version and Name</span><br><span class="line">os_name=$(cat /etc/issue|grep -e "Server")</span><br><span class="line">echo -e '\E[32m' "Check OS Release Version and Name" $reset_terminal $os_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check Architecture</span><br><span class="line">architecture=$(uname -m)</span><br><span class="line">echo -e '\E[32m' "Check Architecture" $reset_terminal $architecture</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check Kernel Release</span><br><span class="line">kernel_release=$(uname -r)</span><br><span class="line">echo -e '\E[32m' "Check Kernel Release" $reset_terminal $kernel_release</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check Hostname $HOSTNAME</span><br><span class="line">host_name=$(uname -n)</span><br><span class="line">echo -e '\E[32m' "Check Hostname" $reset_terminal $host_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check Internal IP</span><br><span class="line">internal_ip=$(hostname -I)</span><br><span class="line">echo -e '\E[32m' "Check Internal IP" $reset_terminal $internal_ip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check External IP</span><br><span class="line">external_ip=$(curl -s http://ipecho.net/plain)</span><br><span class="line">echo -e '\E[32m' "Check External IP" $reset_terminal $external_ip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check DNS</span><br><span class="line">name_servers=$(cat /etc/resolv.conf | grep -E "\&lt;nameserver[ ]+" | awk '&#123;print $NF&#125;')</span><br><span class="line">echo -e '\E[32m' "Check DNS" $reset_terminal $name_servers</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check if connected to Internet or not</span><br><span class="line">ping -c 2 baidu.com &amp;&gt; /dev/null &amp;&amp; echo "Internet:Connected" || echo "Internet:Disconnected"</span><br><span class="line">echo -e '\E[32m' "Check if connected to Internet or not" $reset_terminal $ping</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check Logged In Users</span><br><span class="line"><span class="meta">who&gt;</span>/tmp/who</span><br><span class="line">echo -e '\E[32m' "Logged In Users" &amp;&amp; cat /tmp/who</span><br><span class="line">rm -f /tmp/who</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Check System Memory Usages</span><br><span class="line">system_men_usages=$(awk '/MemTotal/&#123;total=$2&#125;/MemFree/&#123;free=$2&#125;END&#123;print (total-free)/1024&#125;' /proc/meminfo)</span><br><span class="line">apps_mem_usages=$(awk '/MemTotal/&#123;total=$2&#125;/MemFree/&#123;free=$2&#125;/^Cached/&#123;cached=$2&#125;/Buffers/&#123;buffers=$2&#125;END&#123;print (total-free-cached-buffers)/1024&#125;' /proc/meminfo)</span><br><span class="line"></span><br><span class="line">echo -e '\E[32m' "System Memuserages" $reset_terminal $system_men_usages</span><br><span class="line">echo -e '\E[32m' "Apps Memuserages" $reset_terminal $apps_mem_usages</span><br><span class="line"></span><br><span class="line">load_average=$(top -n 1 -b | grep "load average:" | awk '&#123;print $12 $13 $14&#125;')</span><br><span class="line">echo -e '\E[32m' "load averages" $reset_terminal $load_average</span><br><span class="line"></span><br><span class="line">disk_average=$(df -hP | grep -vE 'Filesystem|tmpfs' | awk '&#123;print $1 " " $5&#125;')</span><br><span class="line">echo -e '\E[32m' "disk averages" $reset_terminal $disk_average</span><br><span class="line"></span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h2 id="check-server-sh"><a class="header-anchor" href="#check-server-sh"></a>check_server_sh</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">resettem=$(tput sgr0)</span><br><span class="line"></span><br><span class="line">nginx_server='http://10.170.22.217'</span><br><span class="line"></span><br><span class="line">check_nginx_server()</span><br><span class="line">&#123;</span><br><span class="line">	status_code=curl -m 5 -s -w %&#123;http_code&#125; $&#123;nginx_server&#125; -o /dev/null</span><br><span class="line"></span><br><span class="line">	if [ $status_code -eq 000 -o $status_code -ge 500 ];then</span><br><span class="line">		echo -e '\E[32m' "Check http server error! Response status code is " $resettem $status_code</span><br><span class="line">	else</span><br><span class="line">		http_content=$(curl -s $&#123;nginx_server&#125;)</span><br><span class="line">		echo -e '\E[32m' "Check http server ok! \n" $resettem $http_content</span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check_nginx_server</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 权限管理</title>
    <url>/2016/09/30/Linux-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="基本权限"><a class="header-anchor" href="#基本权限"></a>基本权限</h2>
<ul>
<li><code>drwxrw-r--</code>
<ul>
<li>d 文件类型</li>
<li>r 读</li>
<li>w 写</li>
<li>x 执行</li>
<li>rwx 代表所有者权限</li>
<li>rw- 代表所属组权限</li>
<li>r-- 代表其他人权限</li>
</ul>
</li>
<li>权限作用
<ul>
<li>权限对文件的作用：
<ul>
<li>r 读取文件内容</li>
<li>w 编辑、新增、修改文件内容，但是不能删除文件</li>
<li>x 可执行</li>
</ul>
</li>
<li>权限对目录的作用：
<ul>
<li>r 可以查询目录下文件名（ls）</li>
<li>w 具有修改目录结构的权限。如新建文件和目录，删除此目录下文件和目录，重命名此目录下文件和目录，剪切（touch rm mv cp）</li>
<li>x 可以进入目录（cd）</li>
</ul>
</li>
<li>区别：
<ul>
<li>对文件来讲，最高权限是 x</li>
<li>对目录来讲，最高权限是 w</li>
</ul>
</li>
</ul>
</li>
<li>权限命令
<ul>
<li>chmod</li>
<li><code>chmod [选项] 模式 文件名</code>
<ul>
<li>选项：
<ul>
<li>-R 递归</li>
</ul>
</li>
<li>模式：
<ul>
<li><code>[ugoa] [+.=] [rwx]</code></li>
<li><code>[mode=421]</code></li>
</ul>
</li>
<li>例子：
<ul>
<li><code>chmod u+x cangls.av</code></li>
<li><code>chmod a=rwx fengjie.av</code></li>
<li><code>chmod g+w,o+w furong.av</code></li>
</ul>
</li>
<li>权限的数字表示
<ul>
<li>r 4</li>
<li>w 2</li>
<li>x 1</li>
</ul>
</li>
</ul>
</li>
<li>chgrp
<ul>
<li><code>chgrp 组名 文件名</code> 修改文件的所属组</li>
</ul>
</li>
<li>chown
<ul>
<li><code>chown 用户名 文件名</code> 修改文件的所有者</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="默认权限"><a class="header-anchor" href="#默认权限"></a>默认权限</h2>
<ul>
<li>umask 查看默认权限
<ul>
<li>0022
<ul>
<li>第一位 0：文件特殊权限</li>
<li>022：文件默认权限</li>
</ul>
</li>
</ul>
</li>
<li>修改 umask 值
<ul>
<li>临时修改
<ul>
<li>umask 0002</li>
</ul>
</li>
<li>永久修改
<ul>
<li>vim /etc/profile</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>文件的默认权限特点</p>
<ul>
<li>文件默认不能建立为执行文件，必须手工赋予执行权限</li>
<li>文件默认权限最大为 666</li>
<li>默认权限需要换算成字母再相减</li>
<li>建立文件之后的默认权限，为 666 减去 umask 值
<ul>
<li>例子：
<ul>
<li>文件默认最大权限 666，umask 值 022</li>
<li><code>-rw-rw-rw- 减去 -----w--w- 等于 -rw-r--r--</code>，结果为 644</li>
<li><code>-rw-rw-rw- 键入 -----wx-wx 等于 -rw-r--r--</code>，结果为 644</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>目录的默认权限特点</p>
<ul>
<li>目录默认权限最大为 777</li>
<li>默认权限需要换算成字母再相减</li>
<li>建立文件之后的默认权限，为 777 减去 umask 值
<ul>
<li>例子：
<ul>
<li>目录默认最大权限为 777，umask 值 022</li>
<li><code>-rwxrwxrwx 减去 -----w--w- 等于 -rwxr-xr-x</code>，结果为 755</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 软件安装</title>
    <url>/2016/09/27/Linux-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="软件包管理简介"><a class="header-anchor" href="#软件包管理简介"></a>软件包管理简介</h2>
<ul>
<li>软件包分类
<ul>
<li>源码包
<ul>
<li>优点：
<ul>
<li>开源，如果有足够的能力，可以修改代码</li>
<li>可以自由选择所需的功能</li>
<li>软件是编译安装，所以更加适合自己的系统，更加稳定也效率更高</li>
<li>卸载方便</li>
</ul>
</li>
<li>缺点：
<ul>
<li>安装步骤较多，尤其安装较大的软件集合时，容易出现拼写错误</li>
<li>编译过程时间较长，安装比二进制安装时间长</li>
<li>编译安装一旦报错，新手很难解决安装错误</li>
</ul>
</li>
</ul>
</li>
<li>二进制包（RPM 包、系统默认包）
<ul>
<li>优点：
<ul>
<li>包管理系统简单，只通过几个命令就可以实现包的安装、升级、查询和卸载</li>
<li>安装速度比源码包安装快得多</li>
</ul>
</li>
<li>缺点：
<ul>
<li>经过编译，不再可以看到源代码</li>
<li>功能选择不如源码包灵活</li>
<li>依赖性</li>
</ul>
</li>
</ul>
</li>
<li>脚本安装包（本质是源码包和二进制包）
<ul>
<li>优点：安装简单、快捷</li>
<li>缺点：完全丧失了自定义性</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="rpm-命令管理"><a class="header-anchor" href="#rpm-命令管理"></a>RPM 命令管理</h2>
<h3 id="rpm-包命令规则"><a class="header-anchor" href="#rpm-包命令规则"></a>RPM 包命令规则</h3>
<ul>
<li><code>httpd-2.2.15-15.el6.centos.1.i686.rpm</code>
<ul>
<li>httpd：软件包名</li>
<li>2.2.15：软件版本</li>
<li>15：软件发布的次数</li>
<li>el6.centos：适合的 Linux 平台</li>
<li>i686：适合的硬件平台</li>
<li>rpm：rpm 包扩展名</li>
</ul>
</li>
</ul>
<p>RPM 包依赖性</p>
<ul>
<li>树形依赖：a-&gt;b-&gt;c</li>
<li>环形依赖：a-&gt;b-&gt;c-&gt;a</li>
<li>模块依赖：查询网站：<a href="http://www.rpmfind.net" target="_blank" rel="noopener">www.rpmfind.net</a></li>
</ul>
<h3 id="rpm-安装命令"><a class="header-anchor" href="#rpm-安装命令"></a>RPM 安装命令</h3>
<p>包全名与包名</p>
<ul>
<li>包全名：操作的包是没有安装的软件包时，使用包全名。而且要注意路径。</li>
<li>包名：操作已经安装的软件包时，使用包名，是搜索 /var/lib/rpm/ 中的数据库</li>
</ul>
<p>RPM 包安装</p>
<ul>
<li>安装
<ul>
<li><code>rpm [选项] 包全名</code>
<ul>
<li>选项：
<ul>
<li>-i（install）安装</li>
<li>-v（verbose）显示详细信息</li>
<li>-h（hash）显示进度</li>
<li>–nodeps 不检测依赖性</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>升级
<ul>
<li><code>rpm -Uvh  包全名</code>
<ul>
<li>选项：
<ul>
<li>-U 升级</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>卸载
<ul>
<li><code>rpm -e 包名</code>
<ul>
<li>选项：
<ul>
<li>-e 卸载</li>
<li>–nodeps 不检查依赖性</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>查询
<ul>
<li><code>rpm -qa</code> 查询所有已经安装的 RPM 包</li>
<li><code>rpm -q 包名</code> 查询包是否安装</li>
<li><code>rpm -qi 包名</code> 查询软件包详细信息</li>
<li><code>rpm -ql 包名</code> 查询包中文件安装位置
<ul>
<li>RPM 包默认安装路径
<ul>
<li>/etc 配置文件安装目录</li>
<li>/usr/bin 可执行命令安装目录</li>
<li>/usr/lib 程序所使用的函数库保存位置</li>
<li>/usr/share/doc 基本的软件使用手册保存位置</li>
<li>/usr/share/man/ 帮助文件保存位置</li>
</ul>
</li>
</ul>
</li>
<li><code>rpm -qf 系统文件名</code>
<ul>
<li>选项：
<ul>
<li>-f 查询系统文件属于哪个软件包（file）</li>
</ul>
</li>
</ul>
</li>
<li><code>rpm -qR 包名</code>
<ul>
<li>选项：
<ul>
<li>-R 查询软件包的依赖性</li>
<li>-p 查询未安装包信息</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="yum-命令管理"><a class="header-anchor" href="#yum-命令管理"></a>Yum 命令管理</h2>
<ul>
<li>查询
<ul>
<li><code>yum list</code> 查询所有可用软件包列表</li>
<li><code>yum search 关键字</code> 搜索服务器上所有和关键字相关的包</li>
</ul>
</li>
<li>安装
<ul>
<li><code>yum -y install 包名</code>
<ul>
<li>选项：
<ul>
<li>install 安装</li>
<li>-y 自动回答 yes</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>升级
<ul>
<li><code>yum -y update 包名</code>
<ul>
<li>选项：
<ul>
<li>update 升级</li>
<li>-y 自动回答 yes</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>卸载
<ul>
<li><code>yum -y remove 包名</code>
<ul>
<li>选项：
<ul>
<li>remove 卸载</li>
<li>-y 自动回答 yes</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>组管理
<ul>
<li><code>yum grouplist</code> 列出所有可用的软件组列表</li>
<li><code>yum groupinstall 软件组名</code> 安装指定软件组，组名可以由 grouplist 查询出来</li>
<li><code>yum groupremove 软件组名</code> 卸载指定软件组</li>
</ul>
</li>
</ul>
<h2 id="源码包安装"><a class="header-anchor" href="#源码包安装"></a>源码包安装</h2>
<p>源码包安装位置需要手动指定，一般安装在 <code>/usr/local/软件名</code></p>
<p>安装源码包之前需要安装 C 语言编译器</p>
<p>源码包安装过程</p>
<ul>
<li>下载源码包</li>
<li>解压缩下载的源码包</li>
<li>进入解压缩目录</li>
<li><code>./configure 软件配置与检查</code>
<ul>
<li>定义需要的功能选项</li>
<li>检测系统环境是否符合安装要求</li>
<li>把定义好的功能选项和检测系统环境的信息都写入 Makefile 文件，用于后续的编辑</li>
</ul>
</li>
<li><code>make</code> 编译
<ul>
<li><code>make clean</code> 如果编译错误，尝试执行 <code>make clean</code></li>
</ul>
</li>
<li><code>make install</code> 编译安装</li>
</ul>
<p>源码包不需要卸载命令，直接删除安装目录即可。不会遗留垃圾文件</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 定时任务</title>
    <url>/2016/09/26/Linux-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="linux-定时任务"><a class="header-anchor" href="#linux-定时任务"></a>Linux 定时任务</h2>
<ul>
<li>at 一次性定时任务</li>
<li>crontab 循环定时任务</li>
<li>crontab 设置</li>
<li>anacron 配置</li>
</ul>
<h2 id="at-一次性定时任务"><a class="header-anchor" href="#at-一次性定时任务"></a>at 一次性定时任务</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> at 服务是否安装</span><br><span class="line">chkconfig --list | grep atd</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> at 服务的启动</span><br><span class="line">service atd restart</span><br></pre></td></tr></table></figure>
<p>at 的访问控制</p>
<ul>
<li>如果系统中有 /etc/at.allow 文件，那么只有写入 /etc/at.allow （白名单）文件中的用户可以使用 at 命令（/etc/at.deny 文件会被忽略）</li>
<li>如果系统中没有 /etc/at.allow 文件，只有 /etc/at.deny 文件，那么写入 /etc/at.deny （黑名单）文件中的用户不能使用 at 命令。对 root 不起作用</li>
<li>如果系统中这两个文件都不存在，那么只有 root 用户可以使用 at 命令</li>
</ul>
<p>at 命令</p>
<ul>
<li>at
<ul>
<li><code>at [选项] 时间</code>
<ul>
<li>选项：
<ul>
<li>-m 当 at 工作完成后，无论命令是否有输出，都用 email 通知执行 at 命令的用户</li>
<li>-c 工作号：显示该 at 工作的实际内容</li>
</ul>
</li>
<li>时间：
<ul>
<li>HH:MM 02:30</li>
<li>HH:MM YYYY-MM-DD 02:30 2013-07-25</li>
<li>HH:MM[am|pm] [month] [date] 02:30 July 25</li>
<li>HH:MM[am|pm] + [minutes|hours|days|weeks] now + 5 minutes</li>
</ul>
</li>
<li>例子：
<ul>
<li><code>at now + 2 minutes</code> &amp;&amp; <code>/root/hello.sh &gt;&gt; /root/hello.log</code></li>
<li><code>at 02:00 2013-07-26</code> &amp;&amp; <code>/bin/sync</code> &amp;&amp; <code>/sbin/shutdown -r now</code></li>
</ul>
</li>
<li>其他：
<ul>
<li><code>atq</code> 查询当前服务器上的 at 工作</li>
<li><code>atrm [工作号]</code> 删除指定的 at 任务</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="anncron"><a class="header-anchor" href="#anncron"></a>anncron</h2>
<p>anacron 是用来保证在系统关机的时候错过的定时任务，可以在系统开机之后再执行</p>
<p>anacron 检测周期</p>
<ul>
<li>anacron 会使用一天，七天，一个月作为检测周期</li>
<li>在系统的 /var/spool/anacron/ 目录中存在 cron.{daily，weekly，monthly} 文件，用于记录上次执行的 cron 的时间</li>
<li>和当前时间做比较，如果两个时间的差值超过了 anacron 的指定时间差值，证明有 cron 任务被漏执行</li>
</ul>
<p>anacron 配置文件</p>
<ul>
<li>vim /etc/anacrontab
<ul>
<li><code>RANDOM_DELAY=45</code> 最大随机延迟</li>
<li><code>START_HOURS_RANGE=3-22</code> anacron 的执行时间范围是 3:00 - 22:00</li>
<li><code>1	5	cron.daily 		nice run-parts /etc/cron.daily</code> 天数 强制延迟（分钟） 工作名称 实际执行的命令</li>
</ul>
</li>
</ul>
<p>anacron 执行过程（以 cron.daily 为例）</p>
<ul>
<li>首先读取 /var/spool/anacron/cron.daily 中的上一次 anacron 执行的时间</li>
<li>和当前时间比较，如果两个时间的差值超过 1 天，就执行 cron.daily 工作</li>
<li>执行这个工作只能在 03:00-22:00 之间</li>
<li>执行工作时强制延迟时间为 5 分钟，再随机延迟 0-45 分钟时间</li>
<li>使用 nice 命令指定默认优先级，使用 run-parts 脚本执行 /etc/cron.daily 目录中的所有可执行文件</li>
</ul>
<h2 id="crontab-简介"><a class="header-anchor" href="#crontab-简介"></a>Crontab 简介</h2>
<p>业务场景</p>
<ul>
<li>每分钟需要执行一个程序检查系统运行状态</li>
<li>每天凌晨需要对过去一天的业务数据进行统计</li>
<li>每个星期需要把日志文件备份</li>
<li>每个月需要把数据库进行备份</li>
</ul>
<p>概念理解</p>
<p><strong>Crontab 是一个用于设置周期性被执行的任务的工具。</strong></p>
<h2 id="crontab-实践"><a class="header-anchor" href="#crontab-实践"></a>Crontab 实践</h2>
<ul>
<li>相关工具
<ul>
<li>Mac OS 自带 SSH</li>
</ul>
</li>
<li>安装并检查 Crontab 服务
<ul>
<li>检查 cron 服务
<ul>
<li>检查 Crontab 工具是否安装：<code>crontab -l</code></li>
<li>检查 Crontab 可执行的命令：<code>service crond</code></li>
<li>检查 Crontab 服务是否启动：<code>service crond status</code></li>
<li>删除当前用户所有的定时任务： <code>crontab -r</code></li>
<li>打开定时任务列表，进行编辑：<code>crontab -e</code>
<ul>
<li>实际上在修改目录 <code>/var/spool/cron/root</code> 下用户对应的文件</li>
<li><code>crontab 文件名</code> 会把（crontab -e）文件里的内容都覆盖，使用时需要注意</li>
</ul>
</li>
<li>启动 Crontab 服务：<code>service crond start</code></li>
</ul>
</li>
<li>安装 Crontab 服务（依次执行）
<ul>
<li><code>yum install vixie-cron</code></li>
<li><code>yum install crontabs</code></li>
</ul>
</li>
<li><code>tail</code> 命令
<ul>
<li>作用：按照要求将指定的文件的最后部分输出到标准设备，如果文件有更新，tail 会主动刷新，确保你看到最新的文件内容</li>
<li>选项
<ul>
<li>-f 循环读取</li>
<li>-q 不显示处理信息</li>
<li>-v 显示详细的处理信息</li>
<li>-c [数目] 显示的字节数</li>
<li>-n [行数] 显示行数</li>
<li>-s 与-f合用,表示在每次反复的间隔休眠 s 秒</li>
<li>-q 从不输出给出文件名的首部</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Crontab 的基本组成
<ul>
<li>配置文件</li>
<li>系统服务 Crond</li>
<li>配置工具 Crontab</li>
</ul>
</li>
<li>Crontab 的配置文件格式
<ul>
<li><code>* * * * * Command</code>
<ul>
<li>第一个星号：分钟 0~59</li>
<li>第二个星号：小时 0~23</li>
<li>第三个星号：日期 1~31</li>
<li>第四个星号：月份 1~12</li>
<li>第五个星号：星期 0~7（0、7 都是星期天）</li>
</ul>
</li>
<li>用法：
<ul>
<li>每晚的 21:30 重启 apache
<ul>
<li><strong><code>30 21 * * * service httpd restart</code></strong></li>
</ul>
</li>
<li>每月 1 到 10 日的 4:45 重启 apache
<ul>
<li><strong><code>45 4 1-10 * * service httpd restart</code></strong></li>
</ul>
</li>
<li>每月 1、10、22 日的 4:45 重启 apache
<ul>
<li><strong><code>45 4 1,10,22 * * service httpd restart</code></strong></li>
</ul>
</li>
<li>每隔两分钟重启 apache 服务器
<ul>
<li><strong><code>*/2 * * * * service httpd restart</code></strong></li>
</ul>
</li>
<li>晚上 11 点到早上 7 点之间，每隔一小时重启 apache
<ul>
<li><strong><code>0 23-7/1 * * * service httpd restart</code></strong></li>
</ul>
</li>
<li>每天 18:00 至 23:00 之间每隔 30 分钟重启 apache
<ul>
<li><strong><code>0,30 18-23 * * * service httpd restart</code></strong></li>
<li><strong><code>0-59/30 18-23 * * * service httpd restart</code></strong></li>
</ul>
</li>
</ul>
</li>
<li>总结：
<ul>
<li>* 表示任何时候都匹配</li>
<li>可以用 “A,B,C” 表示 A 或者 B 或者 C 时执行命令</li>
<li>可以用 “A-B” 表示 A 到 B 之间时执行命令</li>
<li>可以用 “*/A” 表示每 A 时间执行一次命令</li>
</ul>
</li>
</ul>
</li>
<li>Crontab 配置文件
<ul>
<li>全局配置文件
<ul>
<li><code>/etc/crontab</code> 查看系统级别的 Crontab</li>
</ul>
</li>
<li>用户配置文件
<ul>
<li><code>/var/spool/cron/用户名称</code> 查看用户级别的 Crontab</li>
</ul>
</li>
</ul>
</li>
<li>Crontab 的日志
<ul>
<li>监听 Crontab 执行日志：<code>tail -f /var/log/cron</code>，可以看到用户级别和系统级别的 Crontab</li>
<li>查看每天的 Crontab 日志：<code>ls /var/log/cron*</code></li>
</ul>
</li>
<li>Crontab 常见错误
<ul>
<li>环境变量：涉及到文件路径时写全局路径。注意声明 <code>#!/bin/bash</code> 确保脚本中环境变量能够被识别</li>
<li>第三和第五个域之间执行的是 “或” 操作
<ul>
<li>四月的第一个星期日早晨 1 时 59 分运行 <a href="http://a.sh" target="_blank" rel="noopener">a.sh</a>：<code>59 1 1-7 4 * test 'date + \%w -eq 0 &amp;&amp; /root/a.sh'</code></li>
</ul>
</li>
<li>两个小时运行一次
<ul>
<li>错误例子：<code>* 0,2,4,6,8,10,12,14,16,18,20,22 * * * date</code></li>
<li>正确例子：<code>0 */2 * * * date</code></li>
</ul>
</li>
</ul>
</li>
<li>Crontab 补充
<ul>
<li>半分钟执行命令
<ul>
<li><code>date &amp;&amp; sleep 0.5s &amp;&amp; date</code></li>
</ul>
</li>
<li>Crontab 最小时间是 1 分钟，控制 1 分钟执行多次，本应该是同时执行，但第二条被推迟了30s执行，效果就是1分钟执行了2次
<ul>
<li><code>*/1 * * * * date &gt;&gt; /root/test/half.log</code></li>
<li><code>*/1 * * * * sleep 30s; date &gt;&gt; /root/test/half.log</code></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 系统管理</title>
    <url>/2016/09/24/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="进程简介"><a class="header-anchor" href="#进程简介"></a>进程简介</h2>
<p>进程是正在执行的一个程序或命令，每一个进程都是一个运行的实体，都有自己的地址空间，并占用一定的系统资源</p>
<h2 id="进程管理的作用"><a class="header-anchor" href="#进程管理的作用"></a>进程管理的作用</h2>
<ul>
<li>判断服务器健康状态</li>
<li>查看系统中所有进程</li>
<li>杀死进程</li>
</ul>
<h2 id="进程的查看"><a class="header-anchor" href="#进程的查看"></a>进程的查看</h2>
<ul>
<li>
<h4 id="ps"><a class="header-anchor" href="#ps"></a>ps</h4>
<ul>
<li><code>ps aux</code> 查看系统中所有进程，使用 BSD 操作系统格式</li>
<li><code>ps -le</code> 查看系统中所有进程，使用 Linux 标准命令模式</li>
<li>选项：
<ul>
<li>a 显示一个终端的所有进程，除了会话引线</li>
<li>u 显示进程的归属用户及内存的使用情况</li>
<li>x 显示没有控制终端的进程</li>
<li>-l 长格式显示。显示更加详细的信息</li>
<li>-e 显示所有进程，和 -A 作用一致</li>
</ul>
</li>
<li>ps 命令输出
<ul>
<li>USER 该进程是由哪个用户产生的</li>
<li>PID 该进程的 ID 号</li>
<li>%CPU 该进程占用 CPU 资源的百分比，占用越高，进程越耗费资源</li>
<li>%MEN 该进程占用物理内存的百分比，占用越高，进程越耗费资源</li>
<li>VSZ 该进程占用虚拟内存大小，单位 KB</li>
<li>RSS 该进程占用实际物理内存的大小，单位 KB</li>
<li>TTY 该进程是在哪个终端中运行的。其中 tty1-tty7 代表本地控制台终端，tty1-tty6 是本地的字符界面终端，tty7 是图形终端。pts/0-255 代表虚拟终端，？ 代表内核运行</li>
<li>STAT 进程状态
<ul>
<li>R 运行</li>
<li>S 睡眠</li>
<li>T 停止状态</li>
<li>
<ul>
<li>位于后台</li>
</ul>
</li>
<li>s 包含子进程</li>
</ul>
</li>
<li>START 该进程的启动时间</li>
<li>TIME 该进程占用 CPU 的运算时间，注意不是系统时间</li>
<li>COMMAND 产生此进程的命令名</li>
</ul>
</li>
</ul>
</li>
<li>
<h4 id="pstree"><a class="header-anchor" href="#pstree"></a>pstree</h4>
<ul>
<li><code>pstree [选项]</code>
<ul>
<li>-p 显示进程的 PID</li>
<li>-u 显示进程的所属用户</li>
</ul>
</li>
</ul>
</li>
<li>
<h4 id="top"><a class="header-anchor" href="#top"></a>top</h4>
<ul>
<li><code>top [选项]</code></li>
<li><code>top -b -n 1 &gt; top.log</code> 把每秒的 top 信息写进 <code>top.log</code> 文件中</li>
<li>选项：
<ul>
<li>-d 秒数 指定 top 命令每隔几秒更新。默认是 3 秒</li>
<li>-b 使用批处理模式输出。一般和 “-n” 选项合用</li>
<li>-n 次数 指定 top 命令执行的次数。一般和 “-b” 选项合用</li>
</ul>
</li>
<li>top 命令交互模式可以执行命令
<ul>
<li>? 或 h 显示帮助</li>
<li>M 以内存使用率排序</li>
<li>P 以 CPU 使用率排序，默认此项</li>
<li>N 以 PID 排序</li>
<li>q 退出 top</li>
</ul>
</li>
<li>top 参数意义
<ul>
<li>第一行系统信息：
<ul>
<li><code>12:26:46</code> 系统当前时间</li>
<li><code>up 1 day,13:32</code> 系统运行时间，本机已运行了 1 天 13 小时 32 分钟</li>
<li><code>2 users </code>  当前系统登录了用户</li>
<li><code>load average: 0.00,0.00,0.00</code> 系统在之前 1 分钟，5 分钟，15 分钟的平均负载。一般认为小于1时，负载较小。如果大于 1，系统已经超出负荷</li>
</ul>
</li>
<li>第二行进程信息：
<ul>
<li><code>Tasks: 95 total</code> 系统中的进程总数</li>
<li><code>1 running</code> 正在运行的进程数</li>
<li><code>94 sleeping </code> 睡眠的进程</li>
<li><code>0 stopped</code> 正在停止的进程</li>
<li><code>0 zombie</code> 僵尸进程。如果不是 0，需要手工检查僵尸进程</li>
</ul>
</li>
<li>第三行 CPU 信息：
<ul>
<li><code>Cpu(s) 0.1%us</code> 用户模式占用的 CPU 百分比</li>
<li><code>0.1%sy</code> 系统模式占用的 CPU 百分比</li>
<li><code>0.0%ni</code> 改变过优先级的用户进程占用的 CPU 百分比</li>
<li><code>99.7%id</code> 空闲 CPU 的 CPU 百分比</li>
<li><code>0.1%wa</code> 等待输入 / 输出的进程的占用 CPU 百分比</li>
<li><code>0.0%hi</code> 硬中断请求服务占用的 CPU 百分比</li>
<li><code>0.1%si</code> 软中断请求服务占用的 CPU 百分比</li>
<li><code>0,0%st</code> 虚拟时间百分比</li>
</ul>
</li>
<li>第四行内存信息：
<ul>
<li><code>Mem: 635344k total</code> 物理内存的总量，单位 KB</li>
<li><code>571504k used</code> 已经使用的物理内存数量</li>
<li><code>53840k free</code> 空闲的物理内存数量</li>
<li><code>65800k buffers</code> 作为缓冲的内存数量</li>
</ul>
</li>
<li>第五行交换分区信息：
<ul>
<li><code>Swap: 524280k total</code> 交换分区（虚拟内存）的总大小</li>
<li><code>Ok used</code> 已经使用的交互分区的大小</li>
<li><code>524280k free</code> 空闲交换分区的大小</li>
<li><code>409280k cached</code> 作为缓存的交互分区的大小</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="杀死进程"><a class="header-anchor" href="#杀死进程"></a>杀死进程</h2>
<ul>
<li>kill
<ul>
<li><code>kill -l</code> 查看可用的进程信号</li>
<li><code>kill -1 进程 ID</code> 重启进程</li>
<li><code>kill -9 进程 ID</code> 强制杀死进程</li>
</ul>
</li>
<li>killall
<ul>
<li><code>killall [选项] [信号] 进程名</code>
<ul>
<li>选项：
<ul>
<li>-i 交互式，询问是否要杀死某个进程</li>
<li>-I 忽略进程名的大小写</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>pkill
<ul>
<li><code>pkill [选项] [信号] 进程名</code>
<ul>
<li>选项：
<ul>
<li>-t 终端号：按照终端号踢出用户</li>
</ul>
</li>
<li>用法：
<ul>
<li><code>pkill -9 -t tty1</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="修改进程优先级"><a class="header-anchor" href="#修改进程优先级"></a>修改进程优先级</h2>
<p>Linux 操作系统是一个多用户、多任务的操作系统，Linux 系统中通知运行着非常多的进程。但是 CPU 在同一个时钟周期内只能运算一个指令。进程优先级决定了每个进程处理的先后顺序呢。</p>
<p>执行命令 <code>ps -le</code> 返回的结果中，PRI 代表 Priority，NI 代表 Nice。这两个值都是优先级，数字越少代表改进程优先级越高。</p>
<p>用户可以修改 NI 值，注意事项如下：</p>
<ul>
<li>NI 值的范围是 -20 到 19</li>
<li>普通用户调整 NI 值的范围是 0 到 19，而且只能调整自己的进程</li>
<li>普通用户只能调高 NI 值，而不能降低，如原本 NI 值为0，则只能调整为大于 0</li>
<li>root 用户才能设定进程 NI 值为负值，而且可以调整任何用户的进程</li>
<li>PRI（最终值）= PRI（原始值）+ NI</li>
<li>用户只能修改 NI 的值，不能直接修改 PRI</li>
</ul>
<p>修改进程优先级的命令如下：</p>
<ul>
<li>nice
<ul>
<li><code>nice [选项] 命令</code> nice 的命令可以给新执行的命令直接赋予 NI 值，但是不能修改已经存在进程的 NI 值
<ul>
<li>选项：
<ul>
<li>-n NI 值：给命令赋予 NI 值</li>
</ul>
</li>
<li>用法：
<ul>
<li><code>nice -n -5 service httpd start</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>renice
<ul>
<li><code>renice [优先级] 进程 ID</code> renice 命令是修改已经存在进程的 NI 值的命令
<ul>
<li>用法：
<ul>
<li><code>renice -10 2125</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="工作管理"><a class="header-anchor" href="#工作管理"></a>工作管理</h2>
<p>工作管理指的是在单个登录终端中（也就是登录的 Shell 界面中）同时管理多个工作的行为</p>
<p>工作管理注意事项如下：</p>
<ul>
<li>当前的登录终端，只能管理当前终端的工作，而不能管理其他登录终端的工作</li>
<li>放入后台的命令必须可以持续运行一段时间，这样我们才能扑捉和操作这个工作</li>
<li>放入后台执行的命令不能和前台用户有交互或需要前台输入，否则放入后台只能暂停，而不能执行</li>
</ul>
<h2 id="工作管理方法"><a class="header-anchor" href="#工作管理方法"></a>工作管理方法</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 把命令放入后台，并在后台执行</span><br><span class="line">top &amp;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 按下 ctrl + z 快捷键，放在后台暂停</span><br><span class="line">top</span><br></pre></td></tr></table></figure>
<ul>
<li>jobs
<ul>
<li><code>josb [选项]</code>
<ul>
<li>选项：
<ul>
<li>-l 显示工作的 PID</li>
</ul>
</li>
<li>+ 号代表最近一个放入后台的工作，也是工作恢复时，默认恢复的工作；- 号代表倒数第二个放入后台的工作</li>
</ul>
</li>
</ul>
</li>
<li>fg
<ul>
<li><code>fg %工作号</code> 将后台暂停的工作恢复到前台执行，注意 % 号可以省略，但是注意工作号和 PID 的区别</li>
</ul>
</li>
<li>bg
<ul>
<li><code>bg %工作号</code> 后台恢复执行的命令，是不能和前台有交互的，否则不能恢复到后台执行</li>
</ul>
</li>
</ul>
<h2 id="后台命令脱离登录终端执行的方法"><a class="header-anchor" href="#后台命令脱离登录终端执行的方法"></a>后台命令脱离登录终端执行的方法</h2>
<ul>
<li>第一种方法是把需要后台执行的命令加入 /etc/rc.local 文件</li>
<li>第二种方法是使用系统定时任务，让系统在指定的时间执行某个后台命令</li>
<li>第三种方法是使用 nohup 命令</li>
</ul>
<h2 id="系统资源查看"><a class="header-anchor" href="#系统资源查看"></a>系统资源查看</h2>
<ul>
<li>vmstat
<ul>
<li><code>vmstat [刷新延时 刷新次数]</code></li>
<li>用法：
<ul>
<li><code>vmstat 1 3</code></li>
</ul>
</li>
<li>参数：
<ul>
<li>procs：进程信息字段
<ul>
<li>r 等待运行的进程数，数量越大，系统越繁忙</li>
<li>b 不可被唤醒的进程数量，数量越大，系统越繁忙</li>
</ul>
</li>
<li>memory：内存信息字段
<ul>
<li>free 空闲的内存容量，单位 KB</li>
<li>buff 缓冲的内存容量，单位 KB</li>
<li>cache 缓存的内存容量，单位 KB</li>
<li>swpd 虚拟内存的使用情况，单位 KB</li>
<li>缓冲和缓存的区别：缓存是用来加速数据读取的，缓冲是用来加速数据写入的</li>
</ul>
</li>
<li>swap：交换分区的信息字段
<ul>
<li>si 从磁盘中交换到内存中数据的数量，单位 KB</li>
<li>so 从内存中交换到磁盘中数据的数量，单位 KB。此两个数越大，证明数据需要经常在磁盘和内存之间交换，系统性能越差。</li>
</ul>
</li>
<li>io：磁盘读写信息字段
<ul>
<li>bi 从块设备读入数据的总量，单位是块</li>
<li>bo 写到块设备的数据的总量，单位是块。此两个数越大，代表系统的 I/O 越繁忙</li>
</ul>
</li>
<li>system：系统信息字段
<ul>
<li>in 每秒被中断的进程次数</li>
<li>cs 每秒进行的事件切换次数。此两个数越大，代表系统与接口设备的通信非常繁忙</li>
</ul>
</li>
<li>CPU：CPU 信息字段
<ul>
<li>us 非内核进程消耗 CPU 运算时间的百分比</li>
<li>sy 内核进程消耗 CPU 运算时间的百分比</li>
<li>id 空闲 CPu 的百分比</li>
<li>wa 等待 I/O 所消耗的 CPU 百分比</li>
<li>st 被虚拟机消耗的 CPU 百分比</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>dmesg
<ul>
<li><code>dmesg</code> 显示系统内核信息</li>
</ul>
</li>
<li>free
<ul>
<li><code>free [选项]</code> 查看内存使用状态
<ul>
<li>选项：
<ul>
<li>-\b 以字节为单位显示</li>
<li>-\k 以 KB 为单位显示，默认就是以 KB 为单位显示</li>
<li>-\m 以 MB 为单位显示</li>
<li>-\g 以 GB 为单位显示</li>
</ul>
</li>
<li>参数：
<ul>
<li>第一行：total 是总内存数，used 是已经使用的内存数，free 是空闲的内存数，shared 是多个进程共享的内存总数，buffers 是缓冲内存数，cached 是缓存内存数。默认单位是 KB</li>
<li>第二行：-/buffers/cache 的内存数，相当于第一行的 used-buffers-cached。+/buffers/cache 的内存数，相当于第一行的 free + buffers + cached</li>
<li>第三行：total 是 swap 的总数；used 是已经使用的 swap 数，free 是空闲的 swap 数。默认单位是 KB</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>cat /proc/cpuinfo
<ul>
<li>查看 CPU 信息</li>
</ul>
</li>
<li>uptime
<ul>
<li>显示系统的启动时间和平均负载，也就是 top 命令的第一行。</li>
</ul>
</li>
<li>uname
<ul>
<li><code>uname [选项]</code>
<ul>
<li>选项：
<ul>
<li>-a 查看系统所有相关信息</li>
<li>-r 查看内核版本</li>
<li>-s 查看内核名称</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>file /bin/ls
<ul>
<li>查看系统操作位数</li>
</ul>
</li>
<li>lsb_release -a
<ul>
<li>查询当前 Linxu 系统的发行版本</li>
</ul>
</li>
<li>lsof
<ul>
<li><code>lsof	[选项]</code>
<ul>
<li>选项：
<ul>
<li>-c 字符串：只列出以字符串开头的进程打开的文件</li>
<li>-u 用户名：只列出某个用户的进程打开的文件</li>
<li>-p PID：列出某个 PID 进程打开的文件</li>
</ul>
</li>
<li>例子：
<ul>
<li><code>lsof | more</code></li>
<li><code>lsof /sbin/init</code></li>
<li><code>lsof -c httpd</code></li>
<li><code>lsof -u root</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 服务管理</title>
    <url>/2016/09/23/Linux-%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="linux-服务管理"><a class="header-anchor" href="#linux-服务管理"></a>Linux 服务管理</h2>
<h3 id="简介与分类"><a class="header-anchor" href="#简介与分类"></a>简介与分类</h3>
<ul>
<li>
<h4 id="系统的运行级别"><a class="header-anchor" href="#系统的运行级别"></a>系统的运行级别</h4>
<ul>
<li>查看运行级别命令：<code>runlevel</code></li>
<li>修改运行级别命令：<code>init 运行级别</code></li>
<li>系统开机进入级别：<code>vim /etc/inittab</code> ~ <code>id:3initdefault:</code></li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>运行级别</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>关机</td>
</tr>
<tr>
<td>1</td>
<td>单用户模式，主要用于系统修复</td>
</tr>
<tr>
<td>2</td>
<td>不完全的命令行模式，不含 NFS 服务</td>
</tr>
<tr>
<td>3</td>
<td>完全的命令行模式，就是标准字符界面</td>
</tr>
<tr>
<td>4</td>
<td>系统保留</td>
</tr>
<tr>
<td>5</td>
<td>图形模式</td>
</tr>
<tr>
<td>6</td>
<td>重启动</td>
</tr>
</tbody>
</table>
<ul>
<li>
<h4 id="服务的分类"><a class="header-anchor" href="#服务的分类"></a>服务的分类</h4>
<ul>
<li>Linux 服务
<ul>
<li>PRM 包默认安装的服务
<ul>
<li>独立的服务
<ul>
<li>默认配置文件位置
<ul>
<li>/etc/init.d/ 启动脚本位置</li>
<li>/etc/sysconfig/ 初始化环境配置文件位置</li>
<li>/etc/ 配置文件位置</li>
<li>/etc/xinetd.conf xinetd 配置文件</li>
<li>/etc/xinetd.d/ 基于 xineted 服务的启动脚本</li>
<li>/var/lib/ 服务产生的数据放在这里</li>
<li>/var/log/ 日志</li>
</ul>
</li>
</ul>
</li>
<li>基于 xinetd 服务</li>
</ul>
</li>
<li>源码包安装的服务
<ul>
<li>源码包安装位置，一般是 <code>/usr/local</code> 下</li>
</ul>
</li>
<li>PRM 包安装和源码包安装的区别：两者服务安装的位置不同</li>
</ul>
</li>
</ul>
</li>
<li>
<h4 id="服务与端口"><a class="header-anchor" href="#服务与端口"></a>服务与端口</h4>
<ul>
<li>概念：如果把 IP 地址比作一间房子，端口就是出入这间房子的门。真正的房子只有几个门，但是一个 IP 地址的端口可以有 65536 个</li>
<li>服务与端口的对应：<code>cat /etc/services</code></li>
<li>查询系统中开启的服务：<code>netstat [选项]</code>
<ul>
<li>-t 列出 TCP 数据</li>
<li>-u 列出 UDP 数据</li>
<li>-l 列出正在监听的网络服务（不包含已经连接的网络服务）</li>
<li>-n 用端口号来显示服务，而不是用服务名</li>
<li>-p 列出该服务的进程 ID</li>
</ul>
</li>
<li>chkconfig 和 netstat 的区别
<ul>
<li><code>chkconfig</code> 查看自启动命令</li>
<li><code>netstat</code> 查看启动命令</li>
</ul>
</li>
</ul>
</li>
<li>
<h4 id="服务启动与自启动"><a class="header-anchor" href="#服务启动与自启动"></a>服务启动与自启动</h4>
<ul>
<li>独立服务的自启动
<ul>
<li><code>ntsysv</code> 命令图形界面管理自启动</li>
<li><code>/etc/rc.d/rc.local</code> 文件修改管理自启动</li>
<li><code>chkconfig --list</code> 查看服务自启动状态，可以看到所有 RPM 包安装的服务</li>
<li><code>chkconfig [--level 运行级别] [独立服务名] [on|off]</code> 修改服务自启动状态</li>
</ul>
</li>
<li>独立服务的启动
<ul>
<li><code>/etc/init.d/独立服务名 start、stop、status、restart</code></li>
<li><code>service 独立服务名 start、stop、status、restart</code></li>
</ul>
</li>
<li>源码包安装服务的启动
<ul>
<li>使用绝对路径，调用启动脚本来启动。不同的源码包的启动脚本不同。可以查看源码包的安装说明，查看启动脚本的方法。</li>
<li>用法：<code>/usr/local/apache2/bin/apachectl start</code></li>
</ul>
</li>
<li>源码包服务的自启动
<ul>
<li><code>vi /etc/rc.d/rc.local</code> 加入 <code>/usr/local/apache2/bin/apachectl start</code></li>
</ul>
</li>
<li>源码包的 Apache 服务能被 Service 命令管理启动
<ul>
<li><code>ln -s /usr/local/apache2/bin/apachectl /etc/init.d/apache</code></li>
</ul>
</li>
<li>源码包的 Apache 服务能被 chkconfig 与 ntsysv 命令管理自启动
<ul>
<li><code>vi /etc/init.d/apache</code> 加入 <code># chkconfig:35 86 76</code> 和 <code>description:source package apache</code></li>
<li><code>chkconfig --add apache</code> 把源码包 apache 加入 chkconfig 命令</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux-Shell-基础之正则表达式</title>
    <url>/2016/09/22/Linux-Shell-%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="第1章-正则表达式"><a class="header-anchor" href="#第1章-正则表达式"></a>第1章 正则表达式</h2>
<h3 id="1-1-什么是正则表达式"><a class="header-anchor" href="#1-1-什么是正则表达式"></a>1-1 什么是正则表达式</h3>
<p>正则表达式是用于描述字符排列和匹配模式的一种语法规则。它主要用于字符串的模式分割、匹配、查找及替换操作。</p>
<h3 id="1-2-正则表达式与通配符"><a class="header-anchor" href="#1-2-正则表达式与通配符"></a>1-2 正则表达式与通配符</h3>
<ul>
<li>正则表达式用来在文件中匹配符合条件的字符串，正则是包含匹配。grep、awk、sed 等命令可以支持正则表达式（字符串）</li>
<li>通配符用来匹配符合条件的文件名，通配符是完全匹配。ls、find、cp 这些命令不支持正则表达式，所以只能使用 Shell 自己的通配符来进行匹配了。（文件）
<ul>
<li>* 匹配任意内容</li>
<li>? 匹配任意一个内容</li>
<li>[] 匹配括号中的一个字符</li>
</ul>
</li>
</ul>
<h3 id="1-3-基础正则表达式"><a class="header-anchor" href="#1-3-基础正则表达式"></a>1-3 基础正则表达式</h3>
<table>
<thead>
<tr>
<th>元字符</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>前一个字符匹配 0 次或任意多次</td>
</tr>
<tr>
<td>.</td>
<td>匹配除了换行符外任意一个字符</td>
</tr>
<tr>
<td>^</td>
<td>匹配行首，例如：^hello 会匹配以 hello 开头的行</td>
</tr>
<tr>
<td>$</td>
<td>匹配行尾，例如：hello&amp; 会匹配以 hello 结尾的行</td>
</tr>
<tr>
<td>[]</td>
<td>匹配中括号中指定的任意一个字符，只匹配一个字符。</td>
</tr>
<tr>
<td>[^]</td>
<td>匹配除中括号的字符以外的任意一个字符</td>
</tr>
<tr>
<td>\</td>
<td>转义符，用于取消讲特殊符号的含义取消</td>
</tr>
<tr>
<td>\{n\}</td>
<td>表示其前面的字符恰好出现 n 次</td>
</tr>
<tr>
<td>\{n,\}</td>
<td>表示其前面的字符出现不小于 n 次</td>
</tr>
<tr>
<td>\{n,m\}</td>
<td>表示其前面的字符至少出现 n 次，最多出现 m 次</td>
</tr>
</tbody>
</table>
<h2 id="第2章-字符截取命令"><a class="header-anchor" href="#第2章-字符截取命令"></a>第2章 字符截取命令</h2>
<ul>
<li>cut 列提取字符串
<ul>
<li><code>cut [选项] 文件名</code>
<ul>
<li>-f 列号：提取第几列
<ul>
<li><code>cut -f 2 student.txt</code> 截取第二列</li>
<li><code>cut -f 2,4 student.txt</code> 截取第二、第四列</li>
</ul>
</li>
<li>-d 分隔符：按照指定分隔符分割列
<ul>
<li><code>grep &quot;/bin/bash&quot; /etc/passwd |grep -v &quot;root&quot; | cut -f 1 -d &quot;:&quot;</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>printf 格式化输出命令
<ul>
<li><code>printf '输出类型输出格式' 输出内容</code>
<ul>
<li>输出类型
<ul>
<li>%ns 输出字符串。n 是数字指代输出几个字符</li>
<li>%ni 输出整数。n 是数字指代输出几个数字</li>
<li>%<a href="http://m.nf" target="_blank" rel="noopener">m.nf</a> 输出浮点数。m 和 n 是数字，指代输出的整数位数和小数位数。如 %8.2f 代表共输出 8 位数，其中 2 位是小数，6 位是整数。</li>
</ul>
</li>
<li>输出格式
<ul>
<li>\a 输出警告声音</li>
<li>\b 输出退格键</li>
<li>\f 清除屏幕</li>
<li>\n 换行</li>
<li>\r 回车</li>
<li>\t 水平输出 Tab 键</li>
<li>\v 垂直输出 Tab 键</li>
</ul>
</li>
</ul>
</li>
<li>在 <code>awk</code> 命令的输出中支持 <code>print</code> 和 <code>printf</code> 命令</li>
</ul>
</li>
<li>awk 字符截取命令
<ul>
<li><code>awk '条件1{动作1}条件2{动作2}...' 文件名</code></li>
<li>条件
<ul>
<li>一般使用关系表达式作为条件</li>
<li>x&gt;10 判断变量 x 是否大于 10</li>
<li>x&gt;=10 大于等于</li>
<li>x&lt;=10 小于等于</li>
</ul>
</li>
<li>动作
<ul>
<li>格式化输出</li>
<li>流程控制语句</li>
</ul>
</li>
<li>例子
<ul>
<li><code>awk '{printf $2 &quot;\t&quot; $4 &quot;\n&quot;}' student.txt</code></li>
<li><code>awk '{print $2 &quot;\t&quot; $4 }' student.txt</code></li>
<li><code>df -h | awk '{print $1 &quot;\t&quot; $3}'</code></li>
<li><code>akw 'BEGIN{printf &quot;This is a transcript \n&quot;}{printf $2 &quot;\t&quot; $4 &quot;\n&quot;}' student.txt</code></li>
<li><code>cat /etc/passwd |grep &quot;/bin/bash&quot; | awk 'BEGIN{FS=&quot;:&quot;}{printf $1 &quot;\t&quot; $3 &quot;\n&quot;}'</code></li>
</ul>
</li>
</ul>
</li>
<li>sed 字符替换命令
<ul>
<li>sed 是一个几乎包括在所有 UNIX 平台（包括 Linux）的轻量级编辑器。sed 主要是用来将数据进行选取、替换、删除、新增的命令</li>
<li><code>sed [选项] '[动作]' 文件名</code>
<ul>
<li>选项
<ul>
<li>-n 一般 sed 命令会把所有数据都输出到屏幕，如果加入此选择则只会把经过 sed 命令处理的行输出到屏幕</li>
<li>-e 允许对输入数据应用多条 sed 命令编辑</li>
<li>-i 用 sed 的修改结果直接修改读取数据的文件，而不是由屏幕输出</li>
</ul>
</li>
<li>动作
<ul>
<li>a 追加，在当前行后添加一行或多行</li>
<li>c 行替换，用 c 后面的字符串替换原数据行</li>
<li>i 插入，在当期行前插入一行或多行</li>
<li>d 删除，删除指定行</li>
<li>p 打印，输出指定的行</li>
<li>s 字符串替换，用一个字符串替换另外一个字符串，格式为 “行范围s/旧字符串g”</li>
</ul>
</li>
<li>例子
<ul>
<li><code>sed '2p' student.txt</code> 查看文件的第二行</li>
<li><code>sed '2,4d' student.txt</code> 表示删除【第2-4行】，但是不改变文件本身</li>
<li><code>sed '2a piaoliangdecxiaoguniang' student.txt</code> 在第2行之后添加字符串，但是不改变字符串本身</li>
<li><code>sed '4c xxwmpg' student.txt</code> 将第二行的整行替换为xxwmpg</li>
<li><code>sed '6s/70/100/g' student.txt</code> 将第7行的所有70全部替换为100，如果不指定行的话会替换所有的指定字符串</li>
<li><code>sed -e 's/fengj//g';s/cang//g' student.txt</code> 同时把fengj和cang替换为空</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="第3章-字符处理命令"><a class="header-anchor" href="#第3章-字符处理命令"></a>第3章 字符处理命令</h2>
<ul>
<li>sort 排序命令
<ul>
<li><code>sort [选项] 文件名</code>
<ul>
<li>选项
<ul>
<li>-f 忽略大小写</li>
<li>-n 以数值型进行排序，默认使用字符串型排序</li>
<li>-r 反向排序</li>
<li>-t 指定分隔符，默认的分隔符是制表符</li>
<li>-k n[,m] 按照指定的字段范围排序。从第 n 字段开始，m 字段结束（默认到行尾）</li>
</ul>
</li>
<li>用法
<ul>
<li><code>sort /etc/passwd</code> 用户信息正向排序</li>
<li><code>sort -r /etc/passwd</code> 用户信息反向排序</li>
<li><code>sort -t &quot;:&quot; -k 3,3 /etc/passwd</code> 指定分隔符是 “:”，用第三字段开头，第三字段结尾排序，就是只用第三字段排序</li>
<li><code>sort -n -t &quot;:&quot; -k 3,3 /etc/passwd</code> 作用同上，但把指定字符串排序改为数字排序</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>wc 统计命令
<ul>
<li><code>wc [选项] 文件名</code>
<ul>
<li>选项：
<ul>
<li>-l 只统计行数</li>
<li>-w 只统计单词数</li>
<li>-m 只统计字符数</li>
</ul>
</li>
<li>用法：
<ul>
<li><code>wc /etc/passwd</code></li>
<li><code>wc -l /etc/passwd</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 网络基础</title>
    <url>/2016/09/20/Linux-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="网络基础"><a class="header-anchor" href="#网络基础"></a>网络基础</h2>
<h3 id="iso-osi-七层模型简介"><a class="header-anchor" href="#iso-osi-七层模型简介"></a>ISO / OSI 七层模型简介</h3>
<ul>
<li>ISO：国际标准化组织</li>
<li>OSI：开放系统互联模型
<ul>
<li>OSI 的七层模型
<ul>
<li>应用层 - APDU
<ul>
<li>APDU 是应用协议数据单元</li>
</ul>
</li>
<li>表示层 - PPDU
<ul>
<li>PPDU 是表示层协议数据单元</li>
</ul>
</li>
<li>会话层 - SPDU
<ul>
<li>SPDU 是会话协议数据单元</li>
</ul>
</li>
<li>传输层 - TPDU
<ul>
<li>TPDU 是传输协议数据单元</li>
</ul>
</li>
<li>网络层 - 报文
<ul>
<li>IP 地址负责外网通信</li>
</ul>
</li>
<li>数据链路层 - 帧
<ul>
<li>MAC 地址负责局域网通信</li>
</ul>
</li>
<li>物理层 - 比特</li>
</ul>
</li>
<li>数据发送时候，从上层向下层传递；数据接收时候，从下层向上层传递。</li>
</ul>
</li>
</ul>
<h3 id="iso-osi-七层模型详解"><a class="header-anchor" href="#iso-osi-七层模型详解"></a>ISO / OSI 七层模型详解</h3>
<ul>
<li>应用层 - APDU
<ul>
<li>用户接口</li>
</ul>
</li>
<li>表示层 - PPDU
<ul>
<li>数据的表现形式、特定功能的实现如-加密</li>
</ul>
</li>
<li>会话层 - SPDU
<ul>
<li>对应用会话的管理、同步</li>
</ul>
</li>
<li>传输层 - TPDU
<ul>
<li>可靠与不可靠的传输、传输前的错误检测、流控</li>
</ul>
</li>
<li>网络层 - 报文
<ul>
<li>提供逻辑地址、选路</li>
</ul>
</li>
<li>数据链路层 - 帧
<ul>
<li>城帧、用 MAC 地址访问媒介、错误检测与修正</li>
</ul>
</li>
<li>物理层 - 比特
<ul>
<li>设备之间的比特流的传输、物理接口、电器特征等</li>
</ul>
</li>
</ul>
<h3 id="tcp-ip-四层模型"><a class="header-anchor" href="#tcp-ip-四层模型"></a>TCP / IP 四层模型</h3>
<ul>
<li>TCP / IP 四层模型
<ul>
<li>应用层 （对应 OSI 模型的应用层、表示层、会话层）
<ul>
<li>应用层对应于 OSI 参考模型的应用层、表示层、会话层，为用户提供所需要的各种服务，例如：FTP、Telnet、DNS、SMTP 等</li>
</ul>
</li>
<li>传输层 （对应 OSI 模型的传输层）
<ul>
<li>传输层对应于 OSI 模型的传输层，为应用层实体提供端到端的通信功能，保证了数据包的顺序传送及数据的完整性。该层定义了两个主要的协议：传输控制协议（TCP）和用户数据协议（UDP）</li>
</ul>
</li>
<li>网际互联层（对应 OSI 模型的网络层）
<ul>
<li>网际互联对应于 OSI 模型的网络层，主要解决主机到主机的通信问题。它所包含的协议涉及数据包在整个网络上的逻辑传输。该层有三个主要协议：网际协议（IP）、互联网组管理协议（IGMP）和互联网控制报文协议（ICMP）。</li>
</ul>
</li>
<li>网络接口层（对应 OSI 模型的数据链路层、物理层）
<ul>
<li>网络接口层与 OSI 模型中的物理层和数据链路层相对应。它负责监视数据在主机和网络之间的交换。事实上，TCP /IP 本身并未定义该层的协议，而由参与互连的各网络使用自己的物理层和数据链路层协议，然后与 TCP / IP 的网络接口层进行连接。地址解析协议（ARP）工作在此层，即 OSI 参考模型的数据链路层。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>TCP / IP 三次握手（两军问题）</p>
<p>数据封装过程</p>
<table>
<thead>
<tr>
<th>应用数据</th>
<th>字节流（数据）</th>
</tr>
</thead>
<tbody>
<tr>
<td>应用层</td>
<td>FTP + 数据</td>
</tr>
<tr>
<td>传输层</td>
<td>TCP 头 + FTP + 数据</td>
</tr>
<tr>
<td>网络层</td>
<td>IP 头 + TCP 头 + FTP + 数据</td>
</tr>
<tr>
<td>数据链路层</td>
<td>以太帧头 + (IP 头 + TCP 头 + FTP + 数据) = IP 数据报</td>
</tr>
<tr>
<td>最后</td>
<td>以太帧头 + 目的地址 + 源地址 + 包类型 + 包数据（IP 数据报） + CRC</td>
</tr>
</tbody>
</table>
<h3 id="ip地址详解"><a class="header-anchor" href="#ip地址详解"></a>IP地址详解</h3>
<ul>
<li>IP 包头
<ul>
<li>第一行
<ul>
<li>版本（4）</li>
<li>头部长度（4）</li>
<li>优先级和服务类型（8）</li>
<li>总长度（16）</li>
</ul>
</li>
<li>第二行
<ul>
<li>标识（16）</li>
<li>标志（3）</li>
<li>片偏移（13）</li>
</ul>
</li>
<li>第三行
<ul>
<li>生存时间（8）</li>
<li>协议（8）</li>
<li>头部校验和（16）</li>
</ul>
</li>
<li>第四行
<ul>
<li>源 IP 地址（32）</li>
</ul>
</li>
<li>第五行
<ul>
<li>目的 IP 地址（32）</li>
</ul>
</li>
<li>第六行
<ul>
<li>选项</li>
</ul>
</li>
<li>第七行
<ul>
<li>数据</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>IP 地址分类</p>
<table>
<thead>
<tr>
<th>网络类别</th>
<th>最大网络数</th>
<th>IP 地址范围</th>
<th>最大主机数</th>
<th>私有 IP 地址范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>126</td>
<td>1.0.0.0 – 126.255.255.255</td>
<td>2^24-2</td>
<td>10.0.0.0 – 10.255.255.255</td>
</tr>
<tr>
<td>B</td>
<td>16384</td>
<td>128.0.0.0 – 191.255.255.255</td>
<td>2^16-2</td>
<td>172.16.0.0 – 172.31.255.255</td>
</tr>
<tr>
<td>C</td>
<td>2098152</td>
<td>192.0.0.0 – 223.255.255.255</td>
<td>2^8-2</td>
<td>192.168.0.0 – 192.168.255.255</td>
</tr>
</tbody>
</table>
<h3 id="子网掩码"><a class="header-anchor" href="#子网掩码"></a>子网掩码</h3>
<h3 id="网关作用"><a class="header-anchor" href="#网关作用"></a>网关作用</h3>
<ul>
<li>网关（Gateway）又称为网间连接器、协议转换器</li>
<li>网关在网络层以上实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连</li>
<li>网关既可以用于广域网互连，也可以用于局域网互连</li>
<li>网关是一种充当转换重任的服务器或路由器</li>
</ul>
<h3 id="端口作用"><a class="header-anchor" href="#端口作用"></a>端口作用</h3>
<ul>
<li>TCP 协议包头
<ul>
<li>第一行
<ul>
<li>源端口（16）</li>
<li>目的端口（16）</li>
</ul>
</li>
<li>第二行
<ul>
<li>序列号（32）</li>
</ul>
</li>
<li>第三行
<ul>
<li>确认号（32）</li>
</ul>
</li>
<li>第四行
<ul>
<li>数据偏移（4）</li>
<li>保留（6）</li>
<li>标志（6）</li>
<li>窗口（16）</li>
</ul>
</li>
<li>第五行
<ul>
<li>校验和（16）</li>
<li>紧急指针（16）</li>
</ul>
</li>
<li>第六行
<ul>
<li>选项</li>
</ul>
</li>
<li>第七行
<ul>
<li>数据</li>
</ul>
</li>
</ul>
</li>
<li>UDP 协议包头
<ul>
<li>第一行
<ul>
<li>源端口（16）</li>
<li>目的端口（16）</li>
</ul>
</li>
<li>第二行
<ul>
<li>长度（16）</li>
<li>校验和（16）</li>
</ul>
</li>
<li>第三行
<ul>
<li>数据</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>常见端口号</p>
<ul>
<li>FTP（文件传输协议）：20 21</li>
<li>SSH（安全 Shell 协议）：22</li>
<li>TELNET（远程登录协议）：23</li>
<li>DNS（域名系统）：53</li>
<li>HTTP（超文本传输协议）：80</li>
<li>SMTP（简单邮件传输协议）：25</li>
<li>POP3（邮局协议 3 代）：110</li>
</ul>
<p>查看本机启用的端口</p>
<ul>
<li>netstat -an
<ul>
<li>-a 查看所有连接和监听端口</li>
<li>-n 显示 IP 地址和端口号，而不显示域名和服务名</li>
</ul>
</li>
</ul>
<h3 id="dns-作用"><a class="header-anchor" href="#dns-作用"></a>DNS 作用</h3>
<ul>
<li>DNS 的作用：将域名解析为 IP 地址
<ul>
<li>客户机向 DNS 服务器发送域名查询请求</li>
<li>DNS 服务器告知客户机 Web 服务器的 IP 地址</li>
<li>客户机与 Web 服务器通信</li>
</ul>
</li>
<li>DNS 的查询类型
<ul>
<li>从查询方式上分
<ul>
<li>递归查询
<ul>
<li>要么做出查询成功响应，要么做出查询失败的响应，一般客户机和服务器之间属于递归查询，即当客户机向 DNS 服务器发出请求后，若 DNS 服务器本身不能解析，则会向另外的 DNS 服务器发出查询请求，得到结果后转交给客户机。</li>
</ul>
</li>
<li>迭代查询
<ul>
<li>服务器收到一次迭代查询回复一次结果，这个结果不一定是目标 IP 与域名的映射关系，也可以是其他 DNS 服务器的地址</li>
</ul>
</li>
</ul>
</li>
<li>从查询内容上分
<ul>
<li>正向查询由域名查找 IP 地址</li>
<li>反向查询由 IP 地址查找域名</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="linux-网络配置"><a class="header-anchor" href="#linux-网络配置"></a>Linux 网络配置</h2>
<h3 id="ip-地址配置"><a class="header-anchor" href="#ip-地址配置"></a>IP 地址配置</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> 查看与配置网络状态命令</span><br><span class="line">ifconfig</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 临时设置 eth0 网卡的 IP 地址与子网掩码</span><br><span class="line">ifconfig eth0 192.168.0.200 netmask 255.255.255.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> setup 图形界面（红帽专用）</span><br><span class="line">setup</span><br></pre></td></tr></table></figure>
<h3 id="使用文件配置-ip-地址"><a class="header-anchor" href="#使用文件配置-ip-地址"></a>使用文件配置 IP 地址</h3>
<p>网卡信息文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure>
<p>主机名文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network</span><br></pre></td></tr></table></figure>
<h2 id="linux-网络命令"><a class="header-anchor" href="#linux-网络命令"></a>Linux 网络命令</h2>
<h3 id="网络环境查看命令"><a class="header-anchor" href="#网络环境查看命令"></a>网络环境查看命令</h3>
<ul>
<li><code>ifconfig</code> 查看与配置网络状态命令
<ul>
<li>只能看到 IP 和子网掩码，看不到网关和 DNS</li>
</ul>
</li>
<li><code>ifdown 网卡设备名称</code> 禁用指定网卡设备</li>
<li><code>ifup 网卡设置名称</code> 启用指定网卡设备</li>
<li><code>netstat 选项</code>
<ul>
<li>-t 列出 TCP 协议端口</li>
<li>-u 列出 UDP 协议端口</li>
<li>-n 不使用域名与服务名，而是用 IP 地址和端口号</li>
<li>-l 仅列出在监听状态网络服务</li>
<li>-a 列出所有的网络连接</li>
</ul>
</li>
<li><code>route -n</code> 查看路由列表</li>
<li><code>route add default gw 192.168.1.1</code> 临时设定网关</li>
<li><code>nslookup [主机名或 IP]</code> 进行域名与 IP 地址解析</li>
<li><code>nslookup &gt;server</code> 查看本机 DNS 服务器</li>
</ul>
<h3 id="网络测试命令"><a class="header-anchor" href="#网络测试命令"></a>网络测试命令</h3>
<ul>
<li><code>ping [选项] [IP 或域名]</code> 探测指定 IP 或域名的网络状况
<ul>
<li>-c 次数 指定 ping 包的次数</li>
</ul>
</li>
<li><code>telnet [域名或 IP] [端口]</code> 远程管理与端口探测命令</li>
<li><code>wget URL</code> 下载命令</li>
<li><code>tcpdump -i eth0 -nnX port 21</code>
<ul>
<li>-i 指定网卡接口</li>
<li>-X 以十六进制和 ASCII 码显示数据包内容</li>
<li>-nn 将数据包中的域名与服务转为 IP 和端口</li>
<li>port 指定监听的端口</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 命令基础</title>
    <url>/2016/09/19/Linux-%E5%91%BD%E4%BB%A4%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="命令基本格式及文件处理命令"><a class="header-anchor" href="#命令基本格式及文件处理命令"></a>命令基本格式及文件处理命令</h2>
<h3 id="命令提示符"><a class="header-anchor" href="#命令提示符"></a>命令提示符</h3>
<p>命令提示符例子：<code>[root@localhost ~]#</code>，参数意义如下：</p>
<ul>
<li>root：当前登录用户名称</li>
<li>@：分隔用户名称和主机名称</li>
<li>localhost：主机名称</li>
<li>~：当前所在目录</li>
<li>#：超级用户提示符，普通用户提示符是 $</li>
</ul>
<h3 id="命令格式"><a class="header-anchor" href="#命令格式"></a>命令格式</h3>
<blockquote>
<p>命令 [选项] [参数]</p>
</blockquote>
<ul>
<li>个别命令使用不遵循此格式</li>
<li>当有多个选项时，可以写在一起</li>
<li>简化选项与完整选项：-a 等于 --all</li>
</ul>
<h3 id="查询目录中内容：ls"><a class="header-anchor" href="#查询目录中内容：ls"></a>查询目录中内容：ls</h3>
<blockquote>
<p>ls [选项] [文件或目录]</p>
</blockquote>
<p>选项：</p>
<ul>
<li>-a：显示所有文件，包括隐藏文件</li>
<li>-l：显示详细信息</li>
<li>-d：查看目录属性</li>
<li>-h：人性化显示文件大小</li>
<li>-i：显示 inode</li>
</ul>
<p>命令 <code>ls -l</code> 等于命令 <code>ll</code></p>
<h3 id="目录处理命令"><a class="header-anchor" href="#目录处理命令"></a>目录处理命令</h3>
<ul>
<li>新建目录：mkdir
<ul>
<li><code>mkdir -p [目录名称]</code></li>
<li>-p 递归创建</li>
<li>命令英文原意：make directories</li>
</ul>
</li>
<li>切换所在目录：cd
<ul>
<li><code>cd [目录名称]</code>
<ul>
<li>cd ~ ：进入当前用户的家目录</li>
<li>cd - ：进入上次目录</li>
<li>cd . ：进入当前目录</li>
<li>cd … ：进入上一级目录</li>
</ul>
</li>
<li>命令英文原意：change directory</li>
<li>相对路径：参照当前所在目录，进行查找</li>
<li>绝对路径：从根目录开始制定，一级一级递归查找。在任何目录下，都能进入指定目录</li>
</ul>
</li>
<li>查询所在目录位置：pwd
<ul>
<li><code>pwd</code></li>
<li>命令英文原意：print working directory</li>
</ul>
</li>
<li>删除空目录：rmdir
<ul>
<li><code>rmdir [目录名称]</code></li>
<li>命令英文原意：remove empty directories</li>
</ul>
</li>
<li>删除文件或目录：rm
<ul>
<li><code>rm -rf [文件或目录]</code>
<ul>
<li>-r ：删除目录</li>
<li>-f ：强制</li>
</ul>
</li>
<li>命令英文原意：remove</li>
</ul>
</li>
<li>复制命令：cp
<ul>
<li><code>cp [选项] [原文件或目录] [目标目录]</code>
<ul>
<li>-r ：复制目录</li>
<li>-p ：连带文件属性复制</li>
<li>-d ：若源文件是链接文件，则复制链接属性</li>
<li>-a ：相当于 -pdr</li>
</ul>
</li>
<li>命令英文原意：copy</li>
</ul>
</li>
<li>剪切或重命名命令：mv
<ul>
<li><code>mv [原文件或目录] [目标目录]</code></li>
<li>命令英文原意：move</li>
</ul>
</li>
</ul>
<h3 id="常见目录作用"><a class="header-anchor" href="#常见目录作用"></a>常见目录作用</h3>
<ul>
<li>/ ：根目录</li>
<li>/bin ：命令保存目录</li>
<li>/dev ：设备文件保存目录</li>
<li>/etc ：配置文件保存目录</li>
<li>/lib ：系统保存目录</li>
<li>/mnt ：系统挂载目录</li>
<li>/tmp ：临时目录</li>
<li>/sys ：</li>
<li>/var ：系统相关文档内容</li>
<li>/usr ：系统软件资源目录
<ul>
<li>/usr/bin ：系统命令（普通用户）</li>
<li>/usr/sbin ：系统命令（超级用户）</li>
</ul>
</li>
<li>/boot ：启动目录，启动相关文件</li>
<li>/home ：普通用户的家目录</li>
<li>/root ：超级用户的家目录</li>
<li>/sbin ：命令保存目录</li>
<li>/proc ：直接写入内存的</li>
<li>/media ： 挂载目录</li>
</ul>
<h3 id="链接命令"><a class="header-anchor" href="#链接命令"></a>链接命令</h3>
<ul>
<li>链接命令：ln
<ul>
<li><code>ln [参数] [原文件] [目标文件]</code>
<ul>
<li>-s ：创建软链接</li>
<li>默认创建硬链接</li>
</ul>
</li>
<li>命令英文原意：link</li>
<li>功能描述：生成链接文件</li>
</ul>
</li>
<li>硬链接特征：
<ul>
<li>拥有相同的 I 节点和存储 Block 块，可以看做是同一个文件</li>
<li>可通过 I 节点识别</li>
<li>不能跨分区</li>
<li>不能针对目录使用</li>
</ul>
</li>
<li>软连接特征：
<ul>
<li>类似 Windows 快捷方式</li>
<li>软链接拥有自己的 I 节点和 Block 块，但是数据块中只保存原文件的文件名和 I 节点号，并没有实际的文件数据</li>
<li>软连接文件权限都为：rwxrwxrwx</li>
<li>修改任意文件，另一个都改变</li>
<li>删除原文件，软链接不能使用</li>
</ul>
</li>
</ul>
<h2 id="文件搜索命令"><a class="header-anchor" href="#文件搜索命令"></a>文件搜索命令</h2>
<h3 id="文件搜索命令-locate"><a class="header-anchor" href="#文件搜索命令-locate"></a>文件搜索命令 locate</h3>
<ul>
<li><code>locate 文件名</code>（只能搜索文件名）
<ul>
<li>在后台数据库中按文件名搜索，搜索速度更快</li>
</ul>
</li>
<li><code>/var/lib/mlocate</code>
<ul>
<li>locate 命令所搜索的后台数据库</li>
</ul>
</li>
<li><code>updatedb</code>
<ul>
<li>更新数据库</li>
</ul>
</li>
<li><code>/etc/updatedb.conf</code> 配置文件
<ul>
<li>PRUNE_BIND_MOUNTS = “yes” (开启搜索限制)</li>
<li>PRUNEFS = （搜索时，不搜索的文件系统）</li>
<li>PRUNENAMES = （搜索时，不搜索的文件类型）</li>
<li>PRUNEPATHS = （搜索时，不搜索的路径）</li>
</ul>
</li>
</ul>
<h3 id="命令搜索命令-whereis-与-which"><a class="header-anchor" href="#命令搜索命令-whereis-与-which"></a>命令搜索命令 whereis 与 which</h3>
<ul>
<li>whereis
<ul>
<li>搜索命令所在路径及帮助文档所在位置</li>
<li>选项
<ul>
<li>-b	只查找可执行文件</li>
<li>-m	只查找帮助文件</li>
</ul>
</li>
</ul>
</li>
<li>which （能看到命令的别名，只能看到命令的所在位置）</li>
</ul>
<h3 id="文件搜索命令-find"><a class="header-anchor" href="#文件搜索命令-find"></a>文件搜索命令 find</h3>
<ul>
<li><code>find [搜索范围] [搜索条件]</code>
<ul>
<li>搜索文件</li>
</ul>
</li>
<li><code>find / -name install.log</code>
<ul>
<li>避免大范围搜索，会非常耗费系统资源</li>
<li>find 是在系统当中搜索符合条件的文件名。如果需要匹配，使用通配符匹配，通配符是完全匹配</li>
<li>Linux 中的通配符
<ul>
<li>
<ul>
<li>匹配任意内容</li>
</ul>
</li>
<li>?  匹配任意一个字符</li>
<li>[] 匹配任意一个中括号内的字符</li>
</ul>
</li>
</ul>
</li>
<li><code>find /root -iname install.log</code> 不区分大小写</li>
<li><code>find /root -user root</code> 按照所有者搜索</li>
<li><code>find /root -nouser</code> 查找没有所有者的文件</li>
<li><code>find /var/log/ -mtime +10</code> 查找 10 天前修改的文件
<ul>
<li>10 10 天当天修改的文件</li>
<li>-10 10 天内修改文件</li>
<li>+10 10 天前修改的文件</li>
<li>atime 文件访问时间</li>
<li>ctime 改变文件属性</li>
<li>mtime 修改文件内容</li>
</ul>
</li>
<li><code>find . -size 25k</code> 查找文件大小是 25 KB 的文件
<ul>
<li>25K 等于 25 KB的文件</li>
<li>-25K 小于 25 KB的文件</li>
<li>+25K 大于 25KB 的文件</li>
</ul>
</li>
<li><code>find . -inum 262422</code> 查找 i 节点是 262422 的文件</li>
<li><code>find /etc -size +20k -a -size -50k</code> 查找 /etc/ 目录下，大于 20 KB 并且小于 50 KB 的文件
<ul>
<li>-a and 逻辑与，两个条件都满足</li>
<li>-o or 逻辑或，两个条件满足一个即可</li>
</ul>
</li>
<li><code>find /etc -size +20k -a -size -50k -exec ls -lh {} \;</code> 查找 /etc/，大于 20 KB 并且小于 50 KB 的文件，并显示详细信息，-exec/ -ok 命令 {}; 对搜索结果执行操作</li>
</ul>
<h3 id="字符串搜索命令-grep"><a class="header-anchor" href="#字符串搜索命令-grep"></a>字符串搜索命令 grep</h3>
<ul>
<li><code>grep [选项] 字符串 文件名</code> 在文件当中匹配符合条件的字符串
<ul>
<li>-i 忽略大小写</li>
<li>-v 排除指定字符串</li>
</ul>
</li>
</ul>
<h3 id="find-命令与-grep-命令的区别"><a class="header-anchor" href="#find-命令与-grep-命令的区别"></a>find 命令与 grep 命令的区别</h3>
<p>find 命令：在系统当中搜索符合条件的文件名，如果需要匹配，使用通配符匹配，通配符是完全匹配。</p>
<p>grep 命令：在文件当中搜索符合条件的字符串，如果需要匹配，使用正则表达式进行匹配，正则表达式时包含匹配。</p>
<h2 id="帮助命令"><a class="header-anchor" href="#帮助命令"></a>帮助命令</h2>
<h3 id="帮助命令-man"><a class="header-anchor" href="#帮助命令-man"></a>帮助命令 man</h3>
<ul>
<li><code>man 命令</code>  获取指定命令的帮助</li>
<li><code>man -f 命令</code> 相当于 <code>whatis 命令</code> 查看命令的帮助级别</li>
<li><code>man -k 命令</code> 相当于 <code>apropos 命令</code> 查看和命令相关的所有帮助</li>
<li>man 的级别
<ul>
<li>1 ： 查看命令的帮助</li>
<li>2 ： 查看可被内核调用的函数的帮助</li>
<li>3 ： 查看函数和函数库的帮助</li>
<li>4 ： 查看特殊文件的帮助（主要是 /dev 目录下的文件）</li>
<li>5 ： 查看配置文件的帮助</li>
<li>6 ： 查看游戏的帮助</li>
<li>7 ： 查看其他杂项的帮助</li>
<li>8 ： 查看系统管理员可用命令的帮助</li>
<li>9 ： 查看和内核相关文件的帮助</li>
</ul>
</li>
</ul>
<h3 id="其他帮助命令"><a class="header-anchor" href="#其他帮助命令"></a>其他帮助命令</h3>
<ul>
<li><code>命令 --help</code> 获取命令选项的帮助
<ul>
<li><code>ls --help</code></li>
</ul>
</li>
<li><code>help shell 内部命令</code> 获取 shell 内部命令的帮助
<ul>
<li><code>whereis cd</code> 确定是否是 shell 内部命令</li>
<li><code>help cd</code> 获取内部命令帮助</li>
</ul>
</li>
<li><code>info 命令</code>
<ul>
<li>回车 ： 进入子帮助页面</li>
<li>u ： 进入上层页面</li>
<li>n ： 进入下一个帮助小节</li>
<li>p ： 进入上一个帮助小节</li>
<li>q ： 退出</li>
</ul>
</li>
</ul>
<h2 id="压缩命令"><a class="header-anchor" href="#压缩命令"></a>压缩命令</h2>
<ul>
<li>常用的压缩格式：
<ul>
<li>.zip</li>
<li>.gz</li>
<li>.bz2</li>
<li>.tar.gz</li>
<li>.tar.bz2</li>
</ul>
</li>
<li>.zip 格式
<ul>
<li><code>zip 压缩文件名 源文件</code> 压缩文件</li>
<li><code>zip -r 压缩文件名 源目录</code> 压缩目录</li>
<li><code>unzip 压缩文件</code> 解压 <code>.zip</code> 文件</li>
</ul>
</li>
<li>.gz 格式
<ul>
<li><code>gzip 源文件</code> 压缩为 <code>.gz</code> 格式的压缩文件，源文件消失</li>
<li><code>gzip -c 源文件 &gt; 压缩文件</code> 压缩为 <code>.gz</code> 格式的压缩文件，源文件保留</li>
<li><code>gzip -r 目录</code> 压缩目录下所有的子文件，但是不能压缩目录</li>
<li><code>gzip -d 压缩文件</code> 解压文件</li>
<li><code>gunzip 压缩文件</code> 解压文件</li>
</ul>
</li>
<li>.bz2
<ul>
<li><code>bzip2 源文件</code> 压缩为 <code>.bz2</code> 格式的压缩文件，不保留源文件</li>
<li><code>bzip2 -k 源文件</code> 压缩为 <code>.bz2</code> 格式的压缩文件，保留源文件</li>
<li><code>bzip2</code> 命令不能压缩目录</li>
</ul>
</li>
<li>tar.gz
<ul>
<li><code>tar -cvf 打包文件名 源文件</code>
<ul>
<li>选项
<ul>
<li>-c ： 打包</li>
<li>-v ： 显示过程</li>
<li>-f	： 指定打包后的文件名</li>
</ul>
</li>
<li>举例：<code>tar -cvf longzls.tar longzls</code></li>
</ul>
</li>
<li><code>tar -xvf 打包文件名</code>
<ul>
<li>选项
<ul>
<li>-x ： 解打包</li>
</ul>
</li>
<li>举例：<code>tar -xvf longzls.tar</code></li>
</ul>
</li>
<li><code>tar -zcvf 压缩包名.tar.gz 源文件</code> 压缩为 <code>.tar.gz</code> 格式的压缩文件</li>
<li><code>tar -zxvf 压缩包名.tar.gz</code> 解压 <code>.tar.gz</code> 格式的文件</li>
<li><code>tar -jcvf 压缩包名.tar.bz2 源文件</code> 压缩为 <code>.tar.bz2</code> 格式的压缩文件</li>
<li><code>tar -jxvf 压缩包名.tar.bz2</code> 解压 <code>.tar.bz2</code> 格式的文件</li>
</ul>
</li>
</ul>
<h2 id="关机重启命令"><a class="header-anchor" href="#关机重启命令"></a>关机重启命令</h2>
<ul>
<li>shutdown 命令
<ul>
<li><code>shutdown [选项] 时间</code></li>
<li>选项
<ul>
<li>-c ：取消前一个关机命令</li>
<li>-h ：关机（尽可能少用）</li>
<li>-r ：重启</li>
</ul>
</li>
</ul>
</li>
<li>其他关机命令
<ul>
<li>halt</li>
<li>poweroff</li>
<li>init 0</li>
</ul>
</li>
<li>其他重启命令
<ul>
<li>reboot</li>
<li>init 6</li>
</ul>
</li>
<li>系统运行级别
<ul>
<li>0 关机</li>
<li>1 单用户</li>
<li>2 不完全多用户，不含 NFS 服务</li>
<li>3 完全多用户</li>
<li>4 未分配</li>
<li>5 图形界面</li>
<li>6 重启</li>
</ul>
</li>
<li><code>cat /etc/inittab</code> 可以修复系统默认运行级别</li>
<li><code>runlevel</code> 查询系统运行级别</li>
<li><code>logout</code> 退出登录命令</li>
</ul>
<h2 id="挂载命令"><a class="header-anchor" href="#挂载命令"></a>挂载命令</h2>
<ul>
<li>查询与自动挂载
<ul>
<li><code>mount [-t 文件系统] [-o 特殊选项] 设备 文件名 挂载点</code>
<ul>
<li>-t 文件系统：加入文件系统类型来指定挂载的类型，可以 ext3、ext4、iso 9660 等文件系统</li>
<li>-o 特殊选项：可以指定挂载的额外选项</li>
</ul>
</li>
<li><code>mount</code> 查询系统中已经挂载的设备</li>
<li><code>mount -a</code> 依据配置文件 /etc/fstab 的内容，自动挂载</li>
</ul>
</li>
<li>光盘的挂载
<ul>
<li>挂载光盘
<ul>
<li><code>mkdir /mnt/cdrom/</code> 建立挂载点</li>
<li><code>mount -t iso9660 /dev/cdrom /mnt/cdrom/</code> 挂载光盘</li>
<li><code>mount /dev/sr0 /mnt/cdrom/</code></li>
</ul>
</li>
<li>卸载命令
<ul>
<li><code>umount 设备文件名或挂载点</code></li>
<li><code>umount /mnt/cdrom</code></li>
</ul>
</li>
</ul>
</li>
<li>U 盘的挂载
<ul>
<li><code>fdisk -l</code> 查看存储设备文件名</li>
<li><code>mount -t vfat /dev/sdb1 /mnt/usb/</code></li>
</ul>
</li>
</ul>
<h2 id="用户登录查看命令"><a class="header-anchor" href="#用户登录查看命令"></a>用户登录查看命令</h2>
<ul>
<li>w
<ul>
<li>USER ：登录的用户名</li>
<li>TTY ：登录终端</li>
<li>FROM ：从哪个 IP 地址登录</li>
<li>LOGIN@ ：登录时间</li>
<li>IDLE ：用户闲置时间</li>
<li>JCPU ：指的是和该终端连接的所有进程占用的时间。这个时间里并不包括过去的后台作业时间，但却包括当前正在运行的后台作业所占用的时间；</li>
<li>PCPU ：是指当前进程所占用的时间；</li>
<li>WHAT ：当前正在运行的命令</li>
</ul>
</li>
<li>who
<ul>
<li>用户名</li>
<li>登录终端</li>
<li>登录时间（登录来源 IP 地址）</li>
</ul>
</li>
<li>last（查询当前登录和过去登录的用户信息）
<ul>
<li>last 命令默认是读取 /var/log/wtmp 文件数据</li>
<li>命令输出
<ul>
<li>用户名</li>
<li>登录终端</li>
<li>登录 IP</li>
<li>登录时间</li>
<li>退出时间（在线时间）</li>
</ul>
</li>
</ul>
</li>
<li>lastlog（查看所有用户的最后一次登录时间）
<ul>
<li>lastlog 命令默认是读取 /var/log/lastlog 文件内容</li>
<li>命令输出
<ul>
<li>用户名</li>
<li>登录终端</li>
<li>登录 IP</li>
<li>最后一次登录时间</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="shell-基础"><a class="header-anchor" href="#shell-基础"></a>Shell 基础</h2>
<h3 id="shell-概述"><a class="header-anchor" href="#shell-概述"></a>Shell 概述</h3>
<p>Shell 是一个命令行解释器，它为用户提供了一个向 Linux 内核发送请求以便运行程序的界面系统级程序，<br>
用户可以用 Shell 来启动、挂起、停止甚至是编写一些程序。</p>
<p>Shell 还是一个功能相当强大的编程语言，易编写，易调试，灵活性比较强。<br>
Shell 是解释执行的脚本语言，在 Shell 中可以直接调用 Linux 的系统命令</p>
<p>Shell 的分类</p>
<ul>
<li>Bourne Shell
<ul>
<li>sh、ksh、Bash、psh、zsh</li>
</ul>
</li>
<li>C Shell
<ul>
<li>csh、tcsh</li>
</ul>
</li>
</ul>
<h3 id="脚本执行方式"><a class="header-anchor" href="#脚本执行方式"></a>脚本执行方式</h3>
<ul>
<li>echo 输出命令
<ul>
<li><code>echo [选项] [输出内容]</code></li>
<li>选项
<ul>
<li>-e ：支持反斜线控制的字符转换</li>
</ul>
</li>
<li>字符转换
<ul>
<li>\a 输出警告音</li>
<li>\b 退格键，也就是向左删除键</li>
<li>\n 换行符</li>
<li>\r 回车键</li>
<li>\t 制表符</li>
<li>\v 垂直制表符</li>
<li>\0nnn 按照八进制 ASCII 码表输出字符。其中 0 为数字零，nnn 是三位八进制数</li>
<li>\xhh 按照十六进制 ASCII 码表输出字符。其中 hh 是两位十六进制数</li>
</ul>
</li>
<li>使用颜色
<ul>
<li>30m=黑色</li>
<li>31m=红色</li>
<li>32m=绿色</li>
<li>33m=黄色</li>
<li>34m=蓝色</li>
<li>35m=洋红</li>
<li>36m=青色</li>
<li>37m=白色</li>
<li>\e[1;31m \e[0m</li>
</ul>
</li>
<li>例子
<ul>
<li><code>echo -e &quot;hell\bo&quot;;</code></li>
<li><code>echo -e &quot;\x68\t\x65\t\x6c\n\x6c\t\x6f\t&quot;;</code></li>
<li><code>echo -e &quot;\e[1;31mHello World \e[0m&quot;;</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="命令别名与快捷键"><a class="header-anchor" href="#命令别名与快捷键"></a>命令别名与快捷键</h3>
<ul>
<li><code>alias</code> 查看系统中所有的命令别名</li>
<li><code>alias 别名='原命令'</code> 设定命令别名
<ul>
<li>例子：<code>alias vi='vim'</code></li>
</ul>
</li>
<li><code>vi ~/.bashrc</code> 写入环境变量配置文件</li>
<li><code>unalias 别名</code> 删除别名</li>
<li>命令生效顺序
<ul>
<li>第一顺位执行用绝对路径或相对路径执行的命令</li>
<li>第二顺位执行别名</li>
<li>第三顺位执行 Bash 的内部命令</li>
<li>第四顺位执行按照 $PATH 环境变量定义的目录查找顺序找到的第一个命令</li>
</ul>
</li>
<li>常用快捷键
<ul>
<li><code>Ctrl + c</code> 强制终止当前命令</li>
<li><code>Ctrl + l</code> 清屏</li>
<li><code>Ctrl + a</code> 光标移动到命令行首</li>
<li><code>Ctrl + e</code> 光标移动到命令行尾</li>
<li><code>Ctrl + u</code> 从光标所在位置删除到行首</li>
<li><code>Ctrl + z</code> 把命令放入后台</li>
<li><code>Ctrl + r</code> 在历史命令中搜索</li>
</ul>
</li>
</ul>
<h3 id="历史命令"><a class="header-anchor" href="#历史命令"></a>历史命令</h3>
<ul>
<li><code>history [选项] [历史命令保存文件]</code>
<ul>
<li>选项
<ul>
<li>-c ：清空历史缓存</li>
<li>-w ：把缓存中的历史命令写入历史命令保存文件 <code>~/.bash_history</code></li>
</ul>
</li>
<li>历史命令默认会保存 1000 条，可以在环境变量配置文件 <code>/etc/profile</code> 中的 <code>HISTSIZE</code> 进行修改</li>
<li>历史命令的调用
<ul>
<li>使用上、下箭头调用以前的历史命令</li>
<li>使用 <code>!n</code> 重复执行第 n 条历史命令</li>
<li>使用 <code>!!</code> 重复执行上一条命令</li>
<li>使用 <code>!字符</code> 重复执行最后一条以该字符串开头的命令</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="输出重定向"><a class="header-anchor" href="#输出重定向"></a>输出重定向</h3>
<p>1.标准输入输出</p>
<table>
<thead>
<tr>
<th>设备</th>
<th>设备文件名</th>
<th>文件描述符</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>键盘</td>
<td>/dev/stdin</td>
<td>0</td>
<td>标准输入</td>
</tr>
<tr>
<td>显示器</td>
<td>/dev/sdtout</td>
<td>1</td>
<td>标准输入</td>
</tr>
<tr>
<td>显示器</td>
<td>/dev/sdterr</td>
<td>2</td>
<td>标准错误输出</td>
</tr>
</tbody>
</table>
<p>2.输出重定向</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>符号</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>标准输出重定向</td>
<td>命令 &gt; 文件</td>
<td>以覆盖的方式，把命令的正确输出，输出到指定的文件或设备中</td>
</tr>
<tr>
<td>标准输出重定向</td>
<td>命令 &gt;&gt; 文件</td>
<td>以追加的方式，把命令的正确输出，输出到指定的文件或设备中</td>
</tr>
<tr>
<td>标准错误输出重定向</td>
<td>错误命令2&gt;文件</td>
<td>以覆盖的方式，把命令的错误输出，输出到指定的文件或设备中</td>
</tr>
<tr>
<td>标准错误输出重定向</td>
<td>错误命令2&gt;&gt;文件</td>
<td>以追加的方式，把命令的错误输出，输出到指定的文件或设备中</td>
</tr>
<tr>
<td>正确输出和错误输出同时保存</td>
<td>命令 &gt; 文件 2&gt;&amp;1</td>
<td>以覆盖的方式，把正确输出和错误输出都保存到同一个文件当中</td>
</tr>
<tr>
<td>正确输出和错误输出同时保存</td>
<td>命令 &gt;&gt; 文件 2&gt;&amp;1</td>
<td>以追加的方式，把正确输出和错误输出都保存到同一个文件当中</td>
</tr>
<tr>
<td>正确输出和错误输出同时保存</td>
<td>命令 &amp;&gt;文件</td>
<td>以覆盖的方式，把正确输出和错误输出都保存都同一个文件当中</td>
</tr>
<tr>
<td>正确输出和错误输出同时保存</td>
<td>命令 &amp;&gt;&gt;文件</td>
<td>以追加的方式，把正确输出和错误输出都保存到同一个文件当中</td>
</tr>
<tr>
<td>正确输出和错误输出同时保存</td>
<td>命令&gt;&gt;文件1 2&gt;&gt;文件2</td>
<td>把正确的输出追加到文件 1 中，把错误的输出追加到文件 2 中</td>
</tr>
</tbody>
</table>
<p>3.输入重定向</p>
<ul>
<li><code>wc [选项] [文件名]</code> 输入重定向
<ul>
<li>选项
<ul>
<li>-c ：统计字节数</li>
<li>-w ：统计单词数</li>
<li>-i ：统计行数</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="管道符"><a class="header-anchor" href="#管道符"></a>管道符</h3>
<p>1.多命令顺序执行</p>
<table>
<thead>
<tr>
<th>多命令执行符</th>
<th>格式</th>
<th>作用</th>
<th>例子</th>
</tr>
</thead>
<tbody>
<tr>
<td>;</td>
<td>命令1;命令2</td>
<td>多个命令顺序执行，命令之间没有任何逻辑联系，即使报错也会往下执行</td>
<td>date ; ls ; cd ~; history;</td>
</tr>
<tr>
<td>&amp;&amp;</td>
<td>命令1&amp;&amp;命令2</td>
<td>逻辑与，当命令 1 正确执行，则命令 2 才会执行，当命令 1 执行不正确，则命令 2 不会执行</td>
<td>ls &amp;&amp; echo yes</td>
</tr>
<tr>
<td>II</td>
<td>命令1 II 命令2</td>
<td>逻辑或，当命令 1 执行不正确，则命令 2 才会执行，当命令 1 正确执行，则命令 2 不会执行</td>
<td>lsls II echo no</td>
</tr>
</tbody>
</table>
<p>2.管道符</p>
<ul>
<li>格式：命令 1 | 命令 2</li>
<li>作用：命令 1 的正确输出作为命令 2 的操作对象</li>
</ul>
<h3 id="通配符"><a class="header-anchor" href="#通配符"></a>通配符</h3>
<p>1.通配符</p>
<table>
<thead>
<tr>
<th>通配符</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>?</td>
<td>匹配一个任意字符</td>
</tr>
<tr>
<td>*</td>
<td>匹配 0 个或任意多个任意字符，也就是可以匹配任何内容</td>
</tr>
<tr>
<td>[]</td>
<td>匹配中括号中任意一个字符，例如：[abc] 代表一定匹配一个字符，或是 a,或是 b,或是 c</td>
</tr>
<tr>
<td>[-]</td>
<td>匹配中括号中任意一个字符，- 代表一个范围，例如：[a-z] 代表匹配一个小写字母</td>
</tr>
<tr>
<td>[^]</td>
<td>逻辑非，表示匹配不是中括号内的一个字符，例如：[^0-9] 代表匹配一个不是数字的字符</td>
</tr>
</tbody>
</table>
<p>通配符执行例子</p>
<ul>
<li>存在文件夹<code>dzp</code>,<code>dzp2</code>,<code>dzp3</code>,<code>dzp34</code>,<code>dzpa</code>，<code>dzpbols</code>,<code>dzpcang</code></li>
<li>执行命令 <code>ls dzp</code>，显示文件夹 <code>dzp</code></li>
<li>执行命令 <code>ls dzp?</code>，显示文件夹 <code>dzp2</code>，<code>dzp3</code></li>
<li>执行命令 <code>ls dzp[0-9]</code>，显示文件夹 <code>dzp2</code>，<code>dzp3</code></li>
<li>执行命令 <code>ls dzp[0-9][0-9]</code>，显示文件夹 <code>dzp34</code></li>
<li>执行命令 <code>ls dzp[^0-9]</code>，显示文件夹 <code>dzpa</code></li>
<li>执行命令 <code>ls dzp[^0-9]*</code>，显示文件夹 <code>dzpa</code>，<code>dzpbols</code>，<code>dzpcang</code></li>
</ul>
<p>2.Bash 中其他特殊符号</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>‘’</td>
<td>单引号。在单引号中所有特殊符号，如 $ 和 ` 都没有特殊含义。</td>
</tr>
<tr>
<td>“”</td>
<td>双引号。在双引号中特殊符号都没有特殊含义，但是 $ 、`、\ 是例外，拥有<em>调用变量值</em>，<em>引用命令</em>，<em>转义符</em>的特殊含义</td>
</tr>
<tr>
<td>``</td>
<td>反引号。反引号包括起来的内容是系统命令，在 Bash 中会先执行它。和 $() 作用一样，不过推荐使用 $()，因为反引号非常容易看错。</td>
</tr>
<tr>
<td>$()</td>
<td>和反引号作用一样，用来引用系统命令</td>
</tr>
<tr>
<td>#</td>
<td>在 Shell 脚本中，# 开头的行代表注释</td>
</tr>
<tr>
<td>$</td>
<td>用于调用变量的值，如需要调用变量 name 的值时，需要用 $name 的方式得到变量的值</td>
</tr>
<tr>
<td>\</td>
<td>转义符，跟在 \ 之后的</td>
</tr>
</tbody>
</table>
<h2 id="用户管理"><a class="header-anchor" href="#用户管理"></a>用户管理</h2>
<h3 id="用户和用户组的概念"><a class="header-anchor" href="#用户和用户组的概念"></a>用户和用户组的概念</h3>
<ul>
<li>用户：使用操作系统的人</li>
<li>用户组：具有相同系统权限的一组用户</li>
<li><code>/etc/group</code> 存储当前系统中所有用户组信息
<ul>
<li>Group❌499:root,luis,daemon</li>
<li>组名称：组密码占位符：组编号：组中用户名列表</li>
</ul>
</li>
<li><code>/etc/gshadow</code> 存储当前系统中用户组的密码信息
<ul>
<li>Group:*:	:root,luis</li>
<li>组名称：组密码：组管理者：组中用户名列表</li>
</ul>
</li>
<li><code>/etc/passwd</code> 存储当前系统中所有用户的账号信息
<ul>
<li>root❌0:0:root:/root:/bin/bash</li>
<li>用户名：密码占位符：用户编号：用户组编号：用户注释信息：用户主目录：Shell 类型</li>
</ul>
</li>
<li><code>/etc/shadow</code> 存储当前系统中所有用户的密码信息
<ul>
<li>root:$6$tBDREHKV$JfcEQ/hTxaOWI8QKoRPARviOq3etqaE.szqFoqW8/Uxh6nAkCvlQzp8nRhg4kRM4ySRjpsfyS7kxXfa5cOlLa.:17044:0:99999:7:::</li>
<li>用户名:密码:::</li>
</ul>
</li>
</ul>
<h3 id="用户和用户组的基本命令"><a class="header-anchor" href="#用户和用户组的基本命令"></a>用户和用户组的基本命令</h3>
<ul>
<li>用户组基本命令
<ul>
<li>新增用户组：<code>groupadd 用户组名称</code></li>
<li>新增用户组并指定编号：<code>groupadd -g 数字编号 用户组名称</code></li>
<li>修改用户组名称：<code>groupmod -n 新名称 旧名称</code></li>
<li>修改用户组编号：<code>groupmod -g 数字编号 用户组名称</code></li>
<li>删除用户组：<code>groupdel 用户组名称</code></li>
</ul>
</li>
<li>用户基本命令
<ul>
<li>删除用户：<code>userdel 用户名称</code></li>
<li>删除用户并删除个人文件夹：<code>userdel -r 用户名称</code></li>
<li>新增用户并指定用户组：<code>useradd -g 用户组名称 用户名称</code></li>
<li>新增用户并指定用户个人文件夹：<code>useradd -d 目录路径 用户名称</code></li>
<li>修改用户名称：<code>usermod -l 新名称 旧名称</code></li>
<li>修改用户备注信息：<code>usermod -c 备注信息 用户名称</code></li>
<li>修改用户的用户组信息：<code>usermod -g 用户组名称 用户名称</code></li>
<li>指定用户新的个人文件夹：<code>usermod -d 目录路径 用户名称</code></li>
</ul>
</li>
<li>其他命令
<ul>
<li>切换用户：<code>su</code></li>
<li>锁定用户：<code>passwd -l 用户名称</code></li>
<li>解锁用户：<code>passwd -u 用户名称</code></li>
<li>无密码登录：<code>passwd -d 用户名称</code></li>
<li>设置组密码：<code>gpasswd 用户组名称</code></li>
<li>显示用户详情:
<ul>
<li>显示当前登录用户名：<code>whoami</code></li>
<li>显示用户信息和组信息：<code>id 用户名称</code></li>
<li>显示用户所在的所有组：<code>groups 用户名称</code></li>
</ul>
</li>
<li>设置用户资料：<code>chfn 用户名称</code></li>
<li>新增用户附属组：<code>gpasswd -a 用户名称 用户组名称</code>（在 Linux 当中，一个用户可以属于多个用户组，但只能有一个主要组，其余都是附属组）</li>
<li>删除用户附属组：<code>gpasswd -d 用户名称</code></li>
<li>切换用户附属组：<code>newgrp 用户组名称</code></li>
<li>新增用户指定主要组和附属组：<code>useradd -g 主要组名称 -G 附属组名称</code></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 5.7 版本新特性</title>
    <url>/2016/09/12/MySQL-5-7-%E7%89%88%E6%9C%AC%E6%96%B0%E7%89%B9%E6%80%A7/</url>
    <content><![CDATA[<h2 id="第-1-章-mysql-服务功能增强"><a class="header-anchor" href="#第-1-章-mysql-服务功能增强"></a>第 1 章 MySQL 服务功能增强</h2>
<h3 id="1-1-初始化方式变更"><a class="header-anchor" href="#1-1-初始化方式变更"></a>1-1 初始化方式变更</h3>
<p>MySQL 5.7 之前<br>
<code>scripts/mysql_install_db \ 	--datadir=/data/sql_data \ 	--user=mysql --basedir=/home/mysql</code></p>
<p>MySQL 5.7 之后<br>
<code>bin/mysql --initialize --user = mysql \ 	--basedir=/home/mysql \ 	--datadir=/home/mysql/data</code></p>
<h3 id="1-3-旧版本支持为表增加计算列演练"><a class="header-anchor" href="#1-3-旧版本支持为表增加计算列演练"></a>1-3 旧版本支持为表增加计算列演练</h3>
<p>MySQL 5.7 之前，需要增加一个插入触发器和更新触发器来实现计算列的功能，或者是一个视图来实现计算列的功能</p>
<p>MySQL 5.7 之后，在 <code>CREATE TABLE</code> 及 <code>ALTER TABLE</code> 语句中支持增加计算列的方式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">col_name data_type [GENERATED ALWAYS] AS (expression)</span><br><span class="line">[VIRTUAL | STORED] [UNIQUE [KEY]] [<span class="keyword">COMMENT</span> <span class="keyword">comment</span>]</span><br><span class="line">[[<span class="keyword">NOT</span>] <span class="literal">NULL</span>] [[PRIMARY] <span class="keyword">KEY</span>]</span><br></pre></td></tr></table></figure>
<h3 id="1-4-mysql5-7支持为表增加计算列实际演练"><a class="header-anchor" href="#1-4-mysql5-7支持为表增加计算列实际演练"></a>1-4 MySQL5.7支持为表增加计算列实际演练</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t(<span class="keyword">id</span> <span class="built_in">int</span> AUTO_INCREMENT <span class="keyword">not</span> <span class="literal">null</span>,c1 <span class="built_in">int</span>,c2 <span class="built_in">int</span>,c3 <span class="built_in">int</span> <span class="keyword">as</span> (c1+c2),PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t(c1,c2) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> t <span class="keyword">set</span> c1 = <span class="number">5</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> t;</span><br></pre></td></tr></table></figure>
<h3 id="1-5-引入json列类型及相关函数"><a class="header-anchor" href="#1-5-引入json列类型及相关函数"></a>1-5 引入JSON列类型及相关函数</h3>
<p>MySQL 5.7 之前</p>
<p>只能在 varchar 或是 text 等字符类型的列中存储 JSON 类型的字符串，并通过程序解析使用 JSON 字符串。</p>
<p>MySQL 5.7 之后</p>
<p>增加了 JSON 列类型及以 JSON 开头的相关处理函数，如 JSON_TYPE(),JSON_OBJECT()，JSON_MERGE() 等。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT JSON_ARRAY(1,2,3,now());</span><br><span class="line">SELECT JSON_OBJECT(&apos;keyA&apos;,1,&apos;keyB&apos;,2);</span><br></pre></td></tr></table></figure>
<h2 id="第-2-章-replication-相关增强"><a class="header-anchor" href="#第-2-章-replication-相关增强"></a>第 2 章 Replication 相关增强</h2>
<h3 id="2-1-支持多源复制"><a class="header-anchor" href="#2-1-支持多源复制"></a>2-1 支持多源复制</h3>
<p>略</p>
<h3 id="2-2-基于库或是逻辑锁的多线程复制"><a class="header-anchor" href="#2-2-基于库或是逻辑锁的多线程复制"></a>2-2 基于库或是逻辑锁的多线程复制</h3>
<p>MySQL 5.7 之前</p>
<p>从 MySQL 5.6 开始支持多线程复制，只不过是对于每一个库一个复制线程。</p>
<p>MySQL 5.7 之后</p>
<p>MySQL 5.7 后对多线程复制功能进行了加强，增加了 <code>slave_paraller_type</code> 参数可以控制并发同步是基于 <code>database</code> 还是 <code>logical_clock</code></p>
<h3 id="2-3-在线变更复制方式"><a class="header-anchor" href="#2-3-在线变更复制方式"></a>2-3 在线变更复制方式</h3>
<p>MySQL 5.7 之前</p>
<p>要把基于日志点的复制方式变为基于 gtid 的复制方式或是把基于 gtid 的复制方式变成基于日志点的复制方式必须要重启 master 的服务器</p>
<p>MySQL 5.7 之后</p>
<p>允许在线变列复制的方式，而不用重启 master 服务器</p>
<h2 id="第-3-章-innodb-引擎增强"><a class="header-anchor" href="#第-3-章-innodb-引擎增强"></a>第 3 章 InnoDB 引擎增强</h2>
<h3 id="3-1-支持缓冲池大小在线变更"><a class="header-anchor" href="#3-1-支持缓冲池大小在线变更"></a>3-1 支持缓冲池大小在线变更</h3>
<p>MySQL 5.7 之前</p>
<p>要变更 <code>innodb_buffer_pool</code> 大小必须更改 <code>my.cnf</code> 文件后重启数据库服务器</p>
<p>MySQL 5.7 之后</p>
<p><code>innodb_buffer_pool_size</code> 参数变为动态参数，可以在线调整 <code>innodb</code> 缓存池的大小</p>
<h3 id="3-2-增加-innodb-buffer-pool-导入导出功能"><a class="header-anchor" href="#3-2-增加-innodb-buffer-pool-导入导出功能"></a>3-2 增加 <code>innodb_buffer_pool</code> 导入导出功能</h3>
<p>MySQL 5.7 之后，新增以下参数控制 <code>innodb_buffer_pool</code> 的导入导出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">innodb_buffer_pool_dump_pct</span><br><span class="line">innodb_buffer_pool_dump_now</span><br><span class="line">innodb_buffer_pool_dump_at_shutdown</span><br><span class="line">innodb_buffer_pool_load_at_startup</span><br><span class="line">innodb_buffer_pool_load_now</span><br></pre></td></tr></table></figure>
<h3 id="3-3-支持为-innodb-表建立表空间"><a class="header-anchor" href="#3-3-支持为-innodb-表建立表空间"></a>3-3 支持为 <code>innodb</code> 表建立表空间</h3>
<p>MySQL 5.7 之前</p>
<p>具有系统表空间及可以为每个表建立一个独立的表空间</p>
<p>MySQL 5.7 之后</p>
<p>支持 <code>CREATE TABLESPACE</code> 语法为一个表或多个表建立共用的表空间</p>
<h2 id="第-4-章-安全及管理方面增强"><a class="header-anchor" href="#第-4-章-安全及管理方面增强"></a>第 4 章 安全及管理方面增强</h2>
<h3 id="4-1-不再支持old-password认证"><a class="header-anchor" href="#4-1-不再支持old-password认证"></a>4-1 不再支持old_password认证</h3>
<h3 id="4-2-增加账号默认过期时间"><a class="header-anchor" href="#4-2-增加账号默认过期时间"></a>4-2 增加账号默认过期时间</h3>
<p><code>show variables like 'default_password_lifetime';</code></p>
<h3 id="4-3-加强了对账号的管理功能"><a class="header-anchor" href="#4-3-加强了对账号的管理功能"></a>4-3 加强了对账号的管理功能</h3>
<h3 id="4-4-增加了-sys-管理数据库"><a class="header-anchor" href="#4-4-增加了-sys-管理数据库"></a>4-4 增加了 sys 管理数据库</h3>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>与 MySQL 的零距离接触（二）</title>
    <url>/2016/09/09/%E4%B8%8E-MySQL-%E7%9A%84%E9%9B%B6%E8%B7%9D%E7%A6%BB%E6%8E%A5%E8%A7%A6%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="第-6-章-运算符和函数"><a class="header-anchor" href="#第-6-章-运算符和函数"></a>第 6 章 运算符和函数</h2>
<ul>
<li>
<h3 id="6-1-回顾和概述"><a class="header-anchor" href="#6-1-回顾和概述"></a>6-1 回顾和概述</h3>
<ul>
<li>运算符</li>
<li>函数
<ul>
<li>字符函数</li>
<li>数值运算符和函数</li>
<li>比较运算符和函数</li>
<li>日期时间函数</li>
<li>信息函数</li>
<li>聚合函数</li>
<li>加密函数</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="6-2-字符函数"><a class="header-anchor" href="#6-2-字符函数"></a>6-2 字符函数</h3>
<ul>
<li>CONCAT() - 字符连接</li>
<li>CONCAT_WS() - 使用指定的分隔符进行字符连接</li>
<li>FORMAT() - 数字格式化</li>
<li>LOWER() - 转换成小写字母</li>
<li>UPPER() - 转换成大写字母</li>
<li>LEFT() - 获取左侧字符</li>
<li>RIGHT() - 获取右侧字符</li>
<li>LENGTH() - 获取字符串长度</li>
<li>LTRIM() - 删除前导空格</li>
<li>RTRIM() - 删除后续空壳</li>
<li>TRIM() - 删除前导和后续空格</li>
<li>SUBSTRING() - 字符串截取</li>
<li>[NOT] LIKE - 模式匹配
<ul>
<li>%（百分号）：代表任意个字符</li>
<li>_（下划线）：代表任意一个字符</li>
</ul>
</li>
<li>REPLACE() - 字符串替换</li>
</ul>
</li>
<li>
<h3 id="6-3-数值运算符和函数"><a class="header-anchor" href="#6-3-数值运算符和函数"></a>6-3 数值运算符和函数</h3>
<ul>
<li>CEIL() - 进一取整</li>
<li>DIV - 整数除法</li>
<li>FLOOR() - 舍一取整</li>
<li>MOD - 取余数</li>
<li>POWER() - 幂运算</li>
<li>ROUND() - 四舍五入</li>
<li>TRUNCATE() - 数字截取</li>
</ul>
</li>
<li>
<h3 id="6-4-比较运算符和函数"><a class="header-anchor" href="#6-4-比较运算符和函数"></a>6-4 比较运算符和函数</h3>
<ul>
<li>[NOT] BETWEEN…AND… - [不]在范围之内</li>
<li>[NOT] IN() - [不]在列出值范围内</li>
<li>IS [NOT] NULL - [不]为空</li>
</ul>
</li>
<li>
<h3 id="6-5-日期时间函数"><a class="header-anchor" href="#6-5-日期时间函数"></a>6-5 日期时间函数</h3>
<ul>
<li>NOW() - 当前日期和时间</li>
<li>CURDATE() - 当前日期</li>
<li>CURTIME() - 当前时间</li>
<li>DATE_ADD() - 日期变化</li>
<li>DATEDIFF() - 日期差值</li>
<li>DATE_FORMAT() - 日期格式化</li>
</ul>
</li>
<li>
<h3 id="6-6-信息函数"><a class="header-anchor" href="#6-6-信息函数"></a>6-6 信息函数</h3>
<ul>
<li>CONNECTION_ID() - 连接 ID</li>
<li>DATEBASE() - 当前数据库</li>
<li>LAST_INSERT_ID() - 最后插入记录的 ID</li>
<li>VERSION() - 最后插入记录的 ID 号</li>
<li>USER() - 当前用户</li>
</ul>
</li>
<li>
<h3 id="6-7-聚合函数"><a class="header-anchor" href="#6-7-聚合函数"></a>6-7 聚合函数</h3>
<ul>
<li>AVG() - 平均值</li>
<li>COUNT() - 计数</li>
<li>MAX() - 最大值</li>
<li>MIN() - 最小值</li>
<li>SUM() - 求和</li>
</ul>
</li>
<li>
<h3 id="6-8-加密函数"><a class="header-anchor" href="#6-8-加密函数"></a>6-8 加密函数</h3>
<ul>
<li>MD5() - 信息摘要算法</li>
<li>PASSWORD() - 密码</li>
</ul>
</li>
</ul>
<h2 id="第-7-章-自定义函数"><a class="header-anchor" href="#第-7-章-自定义函数"></a>第 7 章 自定义函数</h2>
<ul>
<li>
<h3 id="7-1-回顾和概述"><a class="header-anchor" href="#7-1-回顾和概述"></a>7-1 回顾和概述</h3>
<ul>
<li>略</li>
</ul>
</li>
<li>
<h3 id="7-2-自定义函数简介"><a class="header-anchor" href="#7-2-自定义函数简介"></a>7-2 自定义函数简介</h3>
<ul>
<li>自定义函数：用户自定义函数（user-defined function,UDF）是一种对 MySQL 扩展的途径，其用法与内置函数相同。</li>
<li>自定义函数的两个必要条件：
<ul>
<li>参数</li>
<li>返回值</li>
<li>函数可以接受任意类型的参数，也可以返回任意类型的值</li>
<li>函数的参数与返回值没有任何必然、内在的联系</li>
</ul>
</li>
<li>创建自定义函数
<ul>
<li><code>CREATE FUNCTION function_name RETURNS {STRING|INTEGER|REAL|DECIMAL} routine_body</code></li>
<li>routine_body - 函数体
<ul>
<li>函数体由合法的 SQL 语句构成</li>
<li>函数体可以是简单的 SELECT 或 INSERT 语句</li>
<li>函数体如果为复合结构则使用 BEGIN…END 语句</li>
<li>复合结构可以包含声明，循环，控制结构</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="7-3-创建不带参数的自定义函数"><a class="header-anchor" href="#7-3-创建不带参数的自定义函数"></a>7-3 创建不带参数的自定义函数</h3>
<ul>
<li><code>create function f1() returns varchar(30) return date_format(now(),'%Y年%m月%d %H:%i:%s');</code></li>
<li>执行 <code>SELECT f1();</code>，输出 <code>2016年09月09 17:30:08</code></li>
</ul>
</li>
<li>
<h3 id="7-4-创建带有参数的自定义函数"><a class="header-anchor" href="#7-4-创建带有参数的自定义函数"></a>7-4 创建带有参数的自定义函数</h3>
<ul>
<li><code>create function f2(num1 smallint unsigned,num2 smallint unsigned) returns float(10,2) unsigned return (num1+num2)/2;</code></li>
<li>执行 <code>SELECT f2(10,30);</code>，输出 <code>20.00</code></li>
</ul>
</li>
<li>
<h3 id="7-5-创建具有复合结构函数体的自定义函数"><a class="header-anchor" href="#7-5-创建具有复合结构函数体的自定义函数"></a>7-5 创建具有复合结构函数体的自定义函数</h3>
<ul>
<li>重定义 SQL 语句结束分隔符 - <code>DELIMITER string</code></li>
<li><code>create function adduser(username varchar(20)) returns int unsigned begin insert test(username) values(username); return last_insert_id(); end //</code></li>
</ul>
</li>
</ul>
<h2 id="第-8-章-mysql-存储过程"><a class="header-anchor" href="#第-8-章-mysql-存储过程"></a>第 8 章 MySQL 存储过程</h2>
<ul>
<li>8-1 课程回顾
<ul>
<li>略</li>
</ul>
</li>
<li>8-2 存储过程简介
<ul>
<li>SQL 命令执行过程
<ul>
<li>SQL 命令 &gt; MySQL 引擎 &gt; 分析语法 &gt; 可识别命令 &gt; 执行 &gt; 返回执行结果</li>
</ul>
</li>
<li>存储过程的简介
<ul>
<li>存储过程是 SQL 语句和控制语句的预编译集合，以一个名称存储并作为一个单元处理</li>
</ul>
</li>
<li>存储过程的有点
<ul>
<li>增强 SQL 语句的功能和灵活性</li>
<li>实现较快的执行速度</li>
<li>减少网络流量</li>
</ul>
</li>
</ul>
</li>
<li>8-3 存储过程语法结构解析
<ul>
<li>创建存储过程的语法结构
<ul>
<li><code>CREATE</code></li>
<li><code>[DEFINER = {user | CURRENT_USER}]</code></li>
<li><code>PROCEDURE sp_name([proc_parameter[,...]])</code></li>
<li><code>[characteristic ...] routine_body</code></li>
<li><code>proc_parameter:</code></li>
<li><code>[IN | OUT | INOUT] param_name type </code></li>
</ul>
</li>
<li>创建存储过程的参数含义
<ul>
<li>IN，表示该参数的值必须在调用存储过程时指定</li>
<li>OUT，表示该参数的值可以被存储过程改变，并且可以返回</li>
<li>INOUT，表示该参数在调用时指定，并且可以被改变和返回</li>
</ul>
</li>
<li>创建存储过程的过程体
<ul>
<li>过程体由合法的 SQL 语句构成</li>
<li>过程体可以是任意 SQL 语句</li>
<li>过程体如果为复合结构则使用 BEGIN…END 语句</li>
<li>复合结构可以包含声明，循环，控制结构</li>
</ul>
</li>
</ul>
</li>
<li>8-4 创建不带参数的存储过程
<ul>
<li>SQL 语句 - <code>CREATE PROCEDURE sp1() SELECT VERSION();</code></li>
<li>调用 - <code>CALL sp1();</code> 或 <code>CALL sp1</code></li>
</ul>
</li>
<li>8-5 创建带有IN类型参数的存储过程
<ul>
<li>SQL 语句 - <code>CREATE PROCEDURE removeUserById(IN user_id INT UNSIGNED) BEGIN DELETE FROM users WHERE id = user_id; END //</code></li>
<li>调用 - <code>CALL removeUserById(22);</code></li>
</ul>
</li>
<li>8-6 创建带有IN和OUT类型参数的存储过程
<ul>
<li>SQL 语句 - <code>CREATE PROCEDURE removeUserAndReturnUserNums(IN user_id INT UNSIGNED,OUT user_nums INT UNSIGNED) BEGIN DELETE FROM users WHERE id = user_id; SELECT cout(id) FROM users INTO user_nums; END //</code></li>
<li>调用 - <code>CALL removeUserAndReturnUserNums(27,@user_nums); SELECT @user_nums</code></li>
<li><code>@name</code> 声明用户变量，只能是当前用户使用</li>
</ul>
</li>
<li>8-7 创建带有多个OUT类型参数的存储过程
<ul>
<li>SQL 语句 - <code>CREATE PROCEDURE removeUserByAgeAndReturnInfos(IN user_age SMALLINT UNSIGNED,OUT deleteUsers SMALLINT UNSIGNED,OUT user_counts SMALLINT UNSIGNED) BEGIN DELETE FROM users WHERE age = user_age; SELECT ROW_COUNT() INTO deleteUsers; SELECT COUNT(id) FROM users INTO user_counts; END //</code></li>
<li>调用 - <code>CALL removeUserByAgeAndReturnInfos(20,@a,@b)</code></li>
</ul>
</li>
<li>8-8 存储过程与自定义函数的区别
<ul>
<li>存储过程实现的功能要复杂一些；而函数的针对性更强</li>
<li>存储过程可以返回多个值；函数只能有一个返回值</li>
<li>存储过程一般都是独立执行；而函数可以作为其他 SQL 语句的组成部分来出现。</li>
</ul>
</li>
</ul>
<h2 id="第-9-章-mysql-存储引擎"><a class="header-anchor" href="#第-9-章-mysql-存储引擎"></a>第 9 章 MySQL 存储引擎</h2>
<ul>
<li>9-1 课程回顾
<ul>
<li>略</li>
</ul>
</li>
<li>9-2 存储引擎简介
<ul>
<li>简介：MySQL 可以将数据以不同的技术存储在文件（内存）中，这种技术就成为存储引擎。每一种存储引擎使用不同的存储机制、索引技巧、锁定水平，最终提供广泛且不同的功能。</li>
<li>类型：
<ul>
<li>MyISAM</li>
<li>InnoDB</li>
<li>Memory</li>
<li>CSV</li>
<li>Archive</li>
</ul>
</li>
</ul>
</li>
<li>9-3 相关知识点之并发处理
<ul>
<li>并发控制：当多个连接对记录进行修改时保证数据的一致性和完整性</li>
<li>锁
<ul>
<li>共享锁（读锁）：在同一时间段内，多个用户可以读取同一个资源，读取过程中数据不会发生任何变化。</li>
<li>排它锁（写锁）：在任何时候只能有一个用户写入资源，当进行写锁时会阻塞其他的读锁或者写锁操作。</li>
</ul>
</li>
<li>锁颗粒
<ul>
<li>表锁，是一种开销最小的锁策略</li>
<li>行锁，是一种开销最大的锁策略</li>
</ul>
</li>
</ul>
</li>
<li>9-4 相关知识点之事务处理
<ul>
<li>事务
<ul>
<li>事务用于保证数据库的完整性</li>
</ul>
</li>
</ul>
</li>
<li>9-5 相关知识点之外键和索引
<ul>
<li>外键
<ul>
<li>外键是保证数据一致性的策略</li>
</ul>
</li>
<li>索引
<ul>
<li>是对数据表中一列或多列的值进行排序的一种结构。</li>
</ul>
</li>
</ul>
</li>
<li>9-6 各个存储引擎特点</li>
</ul>
<table>
<thead>
<tr>
<th>特性/引擎</th>
<th>MyISAM</th>
<th>Aria</th>
<th>InnoDB</th>
<th>XtraDB</th>
<th>Memory</th>
<th>Archive</th>
</tr>
</thead>
<tbody>
<tr>
<td>数据存储</td>
<td>传统顺序数据储存</td>
<td>传统顺序数据储存</td>
<td>表空间存储方式</td>
<td>表空间存储方式</td>
<td></td>
<td></td>
</tr>
<tr>
<td>事务支持</td>
<td>不支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>外键</td>
<td>不支持</td>
<td>不支持</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>全文检索</td>
<td>支持</td>
<td>支持</td>
<td>5.6 之后支持</td>
<td>5.6 之后支持</td>
<td></td>
<td></td>
</tr>
<tr>
<td>锁级别</td>
<td>表级锁</td>
<td>表级锁</td>
<td>行级锁</td>
<td>行级锁</td>
<td>表级锁</td>
<td>行级锁</td>
</tr>
<tr>
<td>Count 速度</td>
<td>快</td>
<td>快</td>
<td>慢</td>
<td>慢</td>
<td></td>
<td></td>
</tr>
<tr>
<td>适合业务</td>
<td>读多写少、单表数据量小于 1 KW</td>
<td>读多写少、单表数据量小于 1 KW</td>
<td>读写均衡、数据量不限</td>
<td>读写均衡、数据量不限</td>
<td></td>
<td></td>
</tr>
<tr>
<td>可用版本</td>
<td>MySQL、MariaDB、Percona</td>
<td>MariaDB</td>
<td>MySQL、MariaDB、Percona</td>
<td>MariaDB、Percona</td>
<td></td>
<td></td>
</tr>
<tr>
<td>其他说明</td>
<td>传统顺序索引数据库，适合读多写少小数据量业务</td>
<td>MyISAM 增强版，性能更好</td>
<td>适合高压力高性能的业务模型</td>
<td>InnoDB 增强版</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>9-7 设置存储引擎
<ul>
<li>修改搜索引擎的方法，主要有两种：
<ul>
<li>通过修改 MySQL 配置文件实现：<code>default-storage-engine = engine</code></li>
<li>通过创建数据表命令实现
<ul>
<li><code>CREATE TABLE table_name(...,...) ENGINE = engine;</code></li>
</ul>
</li>
<li>通过修改数据表命令实现
<ul>
<li><code>ALTER TABLE table_name ENGINE [=] engine_name;</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="第-10-章-mysql-图形化管理工具"><a class="header-anchor" href="#第-10-章-mysql-图形化管理工具"></a>第 10 章 MySQL 图形化管理工具</h2>
<ul>
<li>10-1 课程介绍
<ul>
<li>PHPMyAdmin</li>
<li>Navicat</li>
<li>MySQL Workbench</li>
</ul>
</li>
<li>10-2 管理工具之 phpMyAdmin</li>
<li>10-3 管理工具之 Navicat for MySQL</li>
<li>10-4 管理工具之 MySQL Workbench</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>与 MySQL 的零距离接触（一）</title>
    <url>/2016/09/07/%E4%B8%8E-MySQL-%E7%9A%84%E9%9B%B6%E8%B7%9D%E7%A6%BB%E6%8E%A5%E8%A7%A6%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="第-1-章-初涉-mysql"><a class="header-anchor" href="#第-1-章-初涉-mysql"></a>第 1 章 初涉 MySQL</h2>
<ul>
<li>
<h3 id="1-1-mysql概述"><a class="header-anchor" href="#1-1-mysql概述"></a>1-1 MySQL概述</h3>
<ul>
<li>MySQL 是由瑞典 MySQL AB 公司开发的，目前被 Oracle 公司收购了</li>
<li>MySQL 是一款开源的关系型数据库管理系统</li>
<li>MySQL 分为社区版和企业版</li>
</ul>
</li>
<li>
<h3 id="1-2-mysql的安装与配置"><a class="header-anchor" href="#1-2-mysql的安装与配置"></a>1-2 MySQL的安装与配置</h3>
<ul>
<li>Mac OS 使用 HomeBrew 安装：<code>brew install mysql</code></li>
<li>MySQL 目录结构：
<ul>
<li>bin - 存储可执行文件</li>
<li>lib - 存储库文件</li>
<li>share - 存储错误消息和字符集文件</li>
<li>scripts - 存储脚本文件</li>
<li>include - 存储包含的头文件</li>
<li>mysql-test</li>
<li>support-files</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="1-3-启动与停止mysql服务"><a class="header-anchor" href="#1-3-启动与停止mysql服务"></a>1-3 启动与停止MySQL服务</h3>
<ul>
<li>启动 MySQL 服务：<code>launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist&quot;</code></li>
<li>停止 MySQL 服务：<code>launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist&quot;</code></li>
</ul>
</li>
<li>
<h3 id="1-4-登录与退出"><a class="header-anchor" href="#1-4-登录与退出"></a>1-4 登录与退出</h3>
<ul>
<li>登录
<ul>
<li><code>mysql</code> 命令
<ul>
<li>-D, --database=[name] : 指定数据库</li>
<li>-P, --port=[number] ： 指定端口号</li>
<li>-u, --user=[name] ： 指定登录用户</li>
<li>-h, --host=[name] ： 指定服务器</li>
<li>-p, --password ： 密码</li>
<li>-V, --version ：查看版本</li>
<li>–delimiter=[name] ： 指定分隔符</li>
<li>–prompt=[name] ： 设置提示符</li>
</ul>
</li>
<li><code>mysql</code> 命令例子
<ul>
<li><code>mysql -uroot -p</code></li>
<li><code>mysql --version</code></li>
<li><code>mysql -uroot -P6606 -p</code></li>
</ul>
</li>
</ul>
</li>
<li>退出
<ul>
<li><code>mysql</code> CLI 环境中输入
<ul>
<li>exit;</li>
<li>quit:</li>
<li>\q;</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="1-5-修改mysql提示符"><a class="header-anchor" href="#1-5-修改mysql提示符"></a>1-5 修改MySQL提示符</h3>
<ul>
<li>连接客户端时通过参数指定：<code>shell&gt;mysql -uroot -proot --prompt 提示符</code></li>
<li>连接上客户端后，通过设置 prompt 提示符指定：<code>prompt 提示符</code></li>
<li><code>prompt</code> 提示符参数：
<ul>
<li>\D 完整的日期</li>
<li>\d 当前数据库</li>
<li>\h 服务器名称</li>
<li>\u 当前用户</li>
</ul>
</li>
<li><code>prompt</code> 提示符参数用法：<code>prompt \h-\u-\p-\D</code></li>
</ul>
</li>
<li>
<h3 id="1-6-mysql-常用命令以及语法规范"><a class="header-anchor" href="#1-6-mysql-常用命令以及语法规范"></a>1-6 MySQL 常用命令以及语法规范</h3>
<ul>
<li>常用命令：
<ul>
<li>查看数据库版本 - <code>SELECT VERSION();</code></li>
<li>查看数据库当前时间 - <code>SELECT NEW();</code></li>
<li>查看数据库当前用户 - <code>SELECT USER();</code></li>
<li>查看数据库列表 - <code>SHOW DATABASES;</code></li>
<li>查看警告日志 - <code>SHOW WARINGS;</code></li>
</ul>
</li>
<li>语法规范：
<ul>
<li>关键字与函数名称全部大写</li>
<li>数据库名称、表名称、字段名称全部小写</li>
<li>SQL 语句必须以分号结尾</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="1-7-操作数据库"><a class="header-anchor" href="#1-7-操作数据库"></a>1-7 操作数据库</h3>
<ul>
<li>
<p>创建数据库 - <code>CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset_name;</code></p>
</li>
<li>
<p>修改数据库 - <code>ALTER {DATABASE | SCHEMA} [db_name] [DEFAULT] CHARACTER SET [=] charset_name; </code></p>
</li>
<li>
<p>删除数据库 - <code>DROP {DATABASE | SCHEMA} [IF EXISTS] db_name</code></p>
</li>
</ul>
</li>
</ul>
<h2 id="第-2-章-数据类型与操作数据表"><a class="header-anchor" href="#第-2-章-数据类型与操作数据表"></a>第 2 章 数据类型与操作数据表</h2>
<ul>
<li>
<h3 id="2-1-内容回顾"><a class="header-anchor" href="#2-1-内容回顾"></a>2-1 内容回顾</h3>
<ul>
<li>略</li>
</ul>
</li>
<li>
<h3 id="2-2-数据类型之整型"><a class="header-anchor" href="#2-2-数据类型之整型"></a>2-2 数据类型之整型</h3>
<ul>
<li>数据类型的概念：数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表了不同的信息类型。</li>
<li>整型类型：
<ul>
<li><code>TINYINT</code>
<ul>
<li>有符号值：-128 ~ 127 （- 2）</li>
<li>无符号值：0 ~ 255</li>
<li>字节：1</li>
</ul>
</li>
<li><code>SMALLINT</code>
<ul>
<li>有符号值：-32768 ~ 32767</li>
<li>无符号值：0 ~ 65535</li>
<li>字节：2</li>
</ul>
</li>
<li><code>MEDIUMINT</code>
<ul>
<li>有符号值：-8388608 ~ 8388607</li>
<li>无符号值：0 ~ 16777215</li>
<li>字节：3</li>
</ul>
</li>
<li><code>INT</code>
<ul>
<li>有符号值：-2147483648 ~ 2147483647</li>
<li>无符号值：0 ~ 4294967295</li>
<li>字节：4</li>
</ul>
</li>
<li><code>BIGINT</code>
<ul>
<li>有符号值：-9223372036854775808 ~ 9223372036854775807</li>
<li>无符号值：0 ~ 18446744073709551615</li>
<li>字节：8</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="2-3-数据类型之浮点型"><a class="header-anchor" href="#2-3-数据类型之浮点型"></a>2-3 数据类型之浮点型</h3>
<ul>
<li><code>FLOAT</code> [(M,D)]：M 是数字总位数，D 是小数点后面的位数。如果 M 和 D 被省略，根据硬件允许的限制来保存值。单精度浮点数精确到大约 7 位小数位。</li>
<li><code>DOUBLE</code> [(M,D)]</li>
</ul>
</li>
<li>
<h3 id="2-4-数据类型之日期时间型"><a class="header-anchor" href="#2-4-数据类型之日期时间型"></a>2-4 数据类型之日期时间型</h3>
<ul>
<li><code>YEAR</code></li>
<li><code>TIME</code></li>
<li><code>DATE</code></li>
<li><code>DATETIME</code></li>
<li><code>TIMESTAMP</code></li>
</ul>
</li>
<li>
<h3 id="2-5-数据类型之字符型"><a class="header-anchor" href="#2-5-数据类型之字符型"></a>2-5 数据类型之字符型</h3>
<ul>
<li><code>CHAR</code>：M 个字节，0 &lt;= M &lt;= 255</li>
<li><code>VARCHAR</code>：L + 1 个字节，其中 L &lt;= M 且 0 &lt;= M &lt;= 65535</li>
<li><code>TINYTEXT</code>：L + 1 个字节，其中 L &lt; 2^8</li>
<li><code>TEXT</code>：L + 2 个字节，其中 L &lt; 2^16</li>
<li><code>MEDIUMTEXT</code>：L + 3 个字节，其中 L &lt; 2^24</li>
<li><code>LONGTEXT</code>：L + 4 个字节，其中 L &lt; 2^32</li>
<li><code>ENUM</code>(‘value1’,‘value2’,…)：1 或 2 个字节，取决于枚举值的个数（最多 65535 个值）</li>
<li><code>SET</code>(‘value1’,‘value2’,…)：1、2、3、4 或者 8 个字节，取决于 set 成员的数目（最多64个）</li>
</ul>
</li>
<li>
<h3 id="2-6-创建数据表"><a class="header-anchor" href="#2-6-创建数据表"></a>2-6 创建数据表</h3>
<ul>
<li>数据表概念：数据表是数据库最重要的组成部分一直，是其他对象的基础。</li>
<li>选择数据库 - <code>use {database}</code></li>
<li>创建数据表 - <code>CREATE TABLE [IF NOT EXISTS] table_name(column_name data_type,....)</code></li>
</ul>
</li>
<li>
<h3 id="2-7-查看数据表："><a class="header-anchor" href="#2-7-查看数据表："></a>2-7 查看数据表：</h3>
<ul>
<li><code>SHOW TABLES [FROM db_name] [LIKE 'pattern'|WHERE expr]</code></li>
</ul>
</li>
<li>
<h3 id="2-8-查看数据表结构："><a class="header-anchor" href="#2-8-查看数据表结构："></a>2-8 查看数据表结构：</h3>
<ul>
<li><code>SHOW COLUMNS FROM tbl_name</code></li>
</ul>
</li>
<li>
<h3 id="2-9-记录的插入与查找："><a class="header-anchor" href="#2-9-记录的插入与查找："></a>2-9 记录的插入与查找：</h3>
<ul>
<li>插入：<code>INSERT [INTO] tal_name[(col_name)VALUES(val,..)]</code></li>
<li>插入省略字段需要为所有字段都要赋值，否则数据库报错</li>
<li>查找：<code>SELECT expr,... FROM tbl_name</code></li>
</ul>
</li>
<li>
<h3 id="2-10-空值与非空"><a class="header-anchor" href="#2-10-空值与非空"></a>2-10 空值与非空</h3>
<ul>
<li><code>NULL</code>，字段值可以为空</li>
<li><code>NOT NULL</code>，字段值禁止为空</li>
</ul>
</li>
<li>
<h3 id="2-11-自动编号"><a class="header-anchor" href="#2-11-自动编号"></a>2-11 自动编号</h3>
<ul>
<li><code>AUTO_INCREMENT</code>，自动编号，且必须与主键组合使用</li>
<li>默认情况下，起始值为 1，每次的增量为 1</li>
</ul>
</li>
<li>
<h3 id="2-12-初涉主键约束"><a class="header-anchor" href="#2-12-初涉主键约束"></a>2-12 初涉主键约束</h3>
<ul>
<li><code>PRIMARY KEY</code>
<ul>
<li>主键约束</li>
<li>主键自动为 NOT NULL</li>
<li>主键保证记录的唯一性</li>
<li>每张数据表只能存在一个主键</li>
<li><code>AUTO_INCREMENT</code> 必须和 <code>PRIMARY KEY</code> 一起使用，<code>PRIMARY KEY</code>  不必须和 <code>AUTO_INCREMENT</code> 一起使用</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="2-13-初涉唯一约束"><a class="header-anchor" href="#2-13-初涉唯一约束"></a>2-13 初涉唯一约束</h3>
<ul>
<li><code>UNIQUE KEY</code>
<ul>
<li>唯一约束</li>
<li>唯约束可以保证记录的唯一性</li>
<li>唯一约束的字段可以为空值（NULL）</li>
<li>每张数据表可以存在多个唯一索引</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="2-14-初涉默认约束"><a class="header-anchor" href="#2-14-初涉默认约束"></a>2-14 初涉默认约束</h3>
<ul>
<li><code>DEFAULT</code>
<ul>
<li>默认值</li>
<li>当插入记录时，如果没有明确为字段赋值，则自动赋予默认值</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="第-3-章-约束以及修改数据表"><a class="header-anchor" href="#第-3-章-约束以及修改数据表"></a>第 3 章 约束以及修改数据表</h2>
<ul>
<li>
<h3 id="3-1-回顾和概述"><a class="header-anchor" href="#3-1-回顾和概述"></a>3-1 回顾和概述</h3>
<ul>
<li>略</li>
</ul>
</li>
<li>
<h3 id="3-2-外键约束的要求解析"><a class="header-anchor" href="#3-2-外键约束的要求解析"></a>3-2 外键约束的要求解析</h3>
<ul>
<li>约束
<ul>
<li>约束保证数据的完整性和一致性</li>
<li>约束分为表级约束和列级约束</li>
<li>约束类型：
<ul>
<li><code>DEFAULT</code>（默认约束）</li>
<li><code>NOT NULL</code>（非空约束）</li>
<li><code>UNIQUE KEY</code>（唯一约束）</li>
<li><code>PRIMARY KEY</code>（主键约束）</li>
<li><code>FOREIGN KEY</code>（外键约束）</li>
</ul>
</li>
<li>FOREIGN KEY - 外键约束
<ul>
<li>保持数据一致性，完整性</li>
<li>实现一对一或一对多关系</li>
</ul>
</li>
<li>使用外键约束的要求
<ul>
<li>父表和子表必须使用相同的存储引擎，而且禁止使用临时表</li>
<li>数据表的存储引擎只能为 InnoDB</li>
<li>外键列和参照列必须具有相似的数据类型。其中数字的长度或是是否有符号位必须相同；而字符的长度则可以不同</li>
<li>外键列和参照列必须创建索引，如果参照列不存在索引的话，MySQL 将自动创建索引</li>
</ul>
</li>
<li>编辑数据表的默认存储引擎：<code>default-storage-engine=INNODB</code></li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="3-3-外键约束的参照操作"><a class="header-anchor" href="#3-3-外键约束的参照操作"></a>3-3 外键约束的参照操作</h3>
<ul>
<li><code>CASCADE</code>：从父表删除或更新且自动删除或更新子表中匹配的行</li>
<li><code>SET NULL</code>：从父表删除或更新行，并设置子表中的外键列为 NULL。如果使用该选项，必须保证子表列没有指定 NOT NULL</li>
<li><code>RESTRICT</code>：拒绝对父表的删除或更新操作</li>
<li><code>NO ACTION</code>：标准 SQL 的关键字，在 MySQL 中与 RESTRICE 相同</li>
</ul>
</li>
<li>
<h3 id="3-4-表级约束与列级约束"><a class="header-anchor" href="#3-4-表级约束与列级约束"></a>3-4 表级约束与列级约束</h3>
<ul>
<li>对一个数据列建立的约束，称为列级约束</li>
<li>对多个数据列建立的约束，称为表级约束</li>
<li>列级约束既可以在列定义时声明，也可以在列定义后声明</li>
<li>表级约束只能在列定义后声明</li>
</ul>
</li>
<li>
<h3 id="3-5-修改数据表-添加-删除列"><a class="header-anchor" href="#3-5-修改数据表-添加-删除列"></a>3-5 修改数据表-添加/删除列</h3>
<ul>
<li>添加单列：<code>ALTER TABLE tbl_name ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name]</code></li>
<li>添加多列：<code>ALTER TABLE tbl_name ADD [COLUMN] (col_name column_definition,...)</code></li>
<li>删除单列：<code>ALTER TABLE tbl_name DROP [COLUMN] col_name</code></li>
</ul>
</li>
<li>
<h3 id="3-6-修改数据表-添加约束"><a class="header-anchor" href="#3-6-修改数据表-添加约束"></a>3-6 修改数据表–添加约束</h3>
<ul>
<li>添加主键约束：<code>ALTER TABLE tbl_name ADD [CONSTRAINT [symbol]] PRIMARY KEY [index_type](index_col_name,...)</code></li>
<li>添加唯一约束：<code>ALTER TABLE tbl_name ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY][index_name][index_type](index_col_name,...)</code></li>
<li>添加外键约束：<code>ALTER TABLE tbl_name ADD [CONSTRAINT [symbol]] FOREIGN KEY [index_name](index_col_name,...) reference_definition</code></li>
<li>添加/删除默认约束：<code>ALTER TABLE tbl_name ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}</code></li>
</ul>
</li>
<li>
<h3 id="3-7-修改数据表-删除约束"><a class="header-anchor" href="#3-7-修改数据表-删除约束"></a>3-7 修改数据表–删除约束</h3>
<ul>
<li>删除主键约束：<code>ALTER TABLE tbl_name DROP PRIMARY KEY</code></li>
<li>删除唯一约束：<code>ALTER TABLE tbl_name DROP {INDEX | KEY} index_name</code></li>
<li>删除外键约束：<code>ALTER TABLE tbl_name DROP FOREIGN KEY fk_symbol</code></li>
</ul>
</li>
<li>
<h3 id="3-8-修改数据表-修改列定义和更名数据表"><a class="header-anchor" href="#3-8-修改数据表-修改列定义和更名数据表"></a>3-8 修改数据表–修改列定义和更名数据表</h3>
<ul>
<li>修改表名称
<ul>
<li><code>ALTER TABLE tbl_name RENAME [TO|AS] new_tbl_name</code></li>
<li><code>RENAME TABLE tbl_name TO new_tbl_name [,tbl_name2 To ewn_tbl_name2,...]</code></li>
</ul>
</li>
<li>修改列定义：<code>ALTER TABLE tbl_name MODIFY [COLUMN] col_name column_definition [FIRST | AFTER col_name]</code></li>
<li>修改列名称：<code>ALTER TABLE tbl_name CHANGE [COLUMN] old_col_name new_col_name column_definition [FIRST|AFTER col_name]</code></li>
</ul>
</li>
<li>
<h3 id="3-9-小结"><a class="header-anchor" href="#3-9-小结"></a>3-9 小结</h3>
<ul>
<li>约束
<ul>
<li>功能
<ul>
<li><code>NOT NULL</code>（非空约束）</li>
<li><code>PRIMARY KEY</code>（主键约束）</li>
<li><code>UNIQUE KEY</code>（唯一约束）</li>
<li><code>DEFAULT</code>（默认约束）</li>
<li><code>FOREIGN KEY</code>（外键约束）</li>
</ul>
</li>
<li>数据列的数目
<ul>
<li>表级约束</li>
<li>列级约束</li>
</ul>
</li>
</ul>
</li>
<li>修改数据表
<ul>
<li>针对字段的操作：添加 / 删除字段、修改列定义，修改列名称等</li>
<li>针对约束的操作：添加 / 删除各种约束</li>
<li>针对数据表的操作：数据表更名（两种方式）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="第-4-章-操作数据表中的记录"><a class="header-anchor" href="#第-4-章-操作数据表中的记录"></a>第 4 章 操作数据表中的记录</h2>
<ul>
<li>
<h3 id="4-1-回顾和概述"><a class="header-anchor" href="#4-1-回顾和概述"></a>4-1 回顾和概述</h3>
<ul>
<li>略</li>
</ul>
</li>
<li>
<h3 id="4-2-插入记录-insert"><a class="header-anchor" href="#4-2-插入记录-insert"></a>4-2 插入记录 <code>INSERT</code></h3>
<ul>
<li>INSERT
<ul>
<li><code>INSERT [INFO] tbl_name [(col_name,...)] {VALUES | VALUE}({expr|DEFAULT},...),(...)</code></li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="4-3-插入记录-insert-set-select"><a class="header-anchor" href="#4-3-插入记录-insert-set-select"></a>4-3 插入记录 <code>INSERT SET-SELECT</code></h3>
<ul>
<li>INSERT SET 与 INSERT 的区别在于，此方法可以使用子查询（SubQuery）
<ul>
<li><code>INSERT [INTO] tbl_name SET col_name={expr | DEFAULT},...</code></li>
</ul>
</li>
<li>INSERT SELECT 与 INSERT 的区别在于，此方法可以将查询结果插入到指定数据表
<ul>
<li><code>INSERT [INTO] tbl_name [(col_name,...)] SELECT ...</code></li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="4-4-单表更新记录-update"><a class="header-anchor" href="#4-4-单表更新记录-update"></a>4-4 单表更新记录 UPDATE</h3>
<ul>
<li><code>UPDATE</code>
<ul>
<li><code>UPDATE [LOW_PRIORITY] [IGNORE] table_reference SET col_name1={expr | DEFAULT}[,col_name2={expr2|DEFAULT}]...[WHERE where_condition]</code></li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="4-5-单表删除记录-delete"><a class="header-anchor" href="#4-5-单表删除记录-delete"></a>4-5 单表删除记录 DELETE</h3>
<ul>
<li><code>DELETE</code>
<ul>
<li><code>DELETE FROM tbl_name [WHERE where_condition]</code></li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="4-6-查询表达式解析"><a class="header-anchor" href="#4-6-查询表达式解析"></a>4-6 查询表达式解析</h3>
<ul>
<li><code>SELECT</code>
<ul>
<li><code>SELECT select_expr[,select_expr ...]</code></li>
<li><code>[</code>
<ul>
<li><code>FROM table_references</code></li>
<li><code>[WHERE where_condition]</code></li>
<li><code>[GROUP BY {col_name | position} [ASC | DESC], ...]</code></li>
<li><code>[HAVING where_condition]</code></li>
<li><code>[ORDER BY {col_name | expr | position} [ASC | DESC],...]</code></li>
<li><code>[LIMIT {[offset,] row_count | row_count OFFSET offset}]</code></li>
</ul>
</li>
<li><code>]</code></li>
</ul>
</li>
<li>select_expr - 查询表达式
<ul>
<li>每一个表达式表示想要的一列，必须有至少一个。</li>
<li>多个列之间以英文逗号分隔</li>
<li>星号（<em>）表示所有列。tbl_name.</em> 可以表示命名表的所有列</li>
<li>查询表达式可以使用 <code>[ AS ]</code> alias_name 为其赋予别名</li>
<li>别名可用于 <code>GROUP BY</code>，<code>ORDER BY</code> 或 <code>HAVING</code> 子句</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="4-7-where-语句进行条件查询"><a class="header-anchor" href="#4-7-where-语句进行条件查询"></a>4-7 <code>WHERE</code> 语句进行条件查询</h3>
<ul>
<li><code>WHERE</code> - 条件表达式
<ul>
<li>对记录进行过滤，如果没有指定 <code>WHERE</code> 子句，则显示所有记录</li>
<li>在 <code>WHERE</code> 表达式中，可以使用 MySQL 支持的函数或者运算符</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="4-8-group-by-语句对查询结果分组"><a class="header-anchor" href="#4-8-group-by-语句对查询结果分组"></a>4-8 <code>GROUP BY</code> 语句对查询结果分组</h3>
<ul>
<li><code>[GROUP BY {col_name | position} [ASC | DESC], ...]</code></li>
</ul>
</li>
<li>
<h3 id="4-9-having-语句设置分组条件"><a class="header-anchor" href="#4-9-having-语句设置分组条件"></a>4-9 <code>HAVING</code> 语句设置分组条件</h3>
<ul>
<li><code>[HAVING where_condition]</code></li>
<li>请使用聚合函数或 select_column，否则报错</li>
</ul>
</li>
<li>
<h3 id="4-10-order-by-语句对查询结果排序"><a class="header-anchor" href="#4-10-order-by-语句对查询结果排序"></a>4-10 <code>ORDER BY</code> 语句对查询结果排序</h3>
<ul>
<li><code>[ORDER BY {col_name | expr | position} [ASC | DESC],...]</code></li>
</ul>
</li>
<li>
<h3 id="4-11-limit-语句限制查询数量"><a class="header-anchor" href="#4-11-limit-语句限制查询数量"></a>4-11 <code>LIMIT</code> 语句限制查询数量</h3>
<ul>
<li><code>[LIMIT {[offset,] row_count | row_count OFFSET offset}]</code></li>
<li>想要获取第三、第四条记录，写法是 <code>LIMIT 2 OFFSET 2</code></li>
</ul>
</li>
<li>
<h3 id="4-12-小结"><a class="header-anchor" href="#4-12-小结"></a>4-12 小结</h3>
<ul>
<li>略</li>
</ul>
</li>
</ul>
<h2 id="第-5-章-子查询与连接"><a class="header-anchor" href="#第-5-章-子查询与连接"></a>第 5 章 子查询与连接</h2>
<ul>
<li>
<h3 id="5-1-数据准备"><a class="header-anchor" href="#5-1-数据准备"></a>5-1 数据准备</h3>
<ul>
<li>数据可以在「资料下载」栏目中获取</li>
</ul>
</li>
<li>
<h3 id="5-2-子查询简介"><a class="header-anchor" href="#5-2-子查询简介"></a>5-2 子查询简介</h3>
<ul>
<li>简介
<ul>
<li>子查询（Subquery）是指出现在其他 SQL 语句内的 SELECT 子句</li>
<li>子查询指嵌套在查询内部，且必须始终出现在圆括号内</li>
<li>子查询可以包含多个关键字或条件，如 DISTINCT、GROUP BY、ORDER BY、LIMIT、函数等</li>
<li>子查询的外层查询可以：SELECT、INSERT、UPDATE、SET、DO 等</li>
<li>子查询可以返回标量、一行、一列或子查询</li>
</ul>
</li>
<li>例子
<ul>
<li><code>SELECT * FROM t1 WHERE col1 = (SELECT col2 FROM t2)</code>;
<ul>
<li>其中 <code>SELECT * FROM t1</code>，称为 Outer Query / Outer Statement</li>
<li><code>SELECT col2 FROM t2</code>，称为 SubQuery</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="5-3-由比较运算符引发的子查询"><a class="header-anchor" href="#5-3-由比较运算符引发的子查询"></a>5-3 由比较运算符引发的子查询</h3>
<ul>
<li>使用比较运算符的子查询：=，&gt;，&lt;，&gt;=，&lt;=，&lt;&gt;，!=，&lt;=&gt;</li>
<li>语法结构：operand comparison_operator subquery</li>
<li>比较运算符
<ul>
<li>operand comparison_operator ANY(subquery)
<ul>
<li>&gt;、&gt;= 最小值</li>
<li>&lt;、&lt;= 最大值</li>
<li>=     任意值</li>
<li>&lt;&gt;、!=</li>
</ul>
</li>
<li>operand comparison_operator ALL(subquery)
<ul>
<li>&gt;、&gt;= 最大值</li>
<li>&lt;、&lt;= 最小值</li>
<li>=</li>
<li>&lt;&gt;、!=	任意值</li>
</ul>
</li>
<li>operand comparison_operator SOME(subquery)
<ul>
<li>&gt;、&gt;= 最小值</li>
<li>&lt;、&lt;= 最大值</li>
<li>=     任意值</li>
<li>&lt;&gt;、!=</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="5-4-由-not-in-exists引发的子查询"><a class="header-anchor" href="#5-4-由-not-in-exists引发的子查询"></a>5-4 由[NOT] IN/EXISTS引发的子查询</h3>
<ul>
<li>语法结构：operand comparison_operator [NOT] IN (subquery)
<ul>
<li>=ANY 运算符与 IN 等效</li>
<li>!=ALL 或 &lt;&gt;ALL 运算符与 NOT IN 等效</li>
</ul>
</li>
<li>语法结构：operand comparison_operator [NOT] EXISTS
<ul>
<li>如果子查询返回任何行，EXISTE 将返回 TRUE，否则为 FALSE</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="5-5-使用insert-select插入记录"><a class="header-anchor" href="#5-5-使用insert-select插入记录"></a>5-5 使用INSERT…SELECT插入记录</h3>
<ul>
<li>INSERT…SELECT
<ul>
<li>将查询结果写入数据表：<code>INSERT [INTO] tbl_name [(col_name)] SELECT...</code></li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="5-6-多表更新"><a class="header-anchor" href="#5-6-多表更新"></a>5-6 多表更新</h3>
<ul>
<li><code>UPDATE table_references</code></li>
<li><code>SET col_name1={expr1|DEFAULT}</code></li>
<li><code>[,col_name2={expr2|DEFAULT}]</code></li>
<li><code>[WHERE where_condition]</code></li>
</ul>
</li>
<li>
<h3 id="5-7-多表更新之一步到位"><a class="header-anchor" href="#5-7-多表更新之一步到位"></a>5-7 多表更新之一步到位</h3>
<ul>
<li>CREATE…SELECT
<ul>
<li>创建数据表同时将查询结果写入到数据表：<code>CREATE TABLE [IF NOT EXISTS] tbl_name [(create_definition,...)] select_statement</code></li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="5-8-连接的语法结构"><a class="header-anchor" href="#5-8-连接的语法结构"></a>5-8 连接的语法结构</h3>
<ul>
<li>连接
<ul>
<li>MySQL 在 SELECT 语句、多表更新、多表删除语句中支持 JOIN 操作</li>
<li>语法结构
<ul>
<li><code>table_reference</code> - 数据表参照
<ul>
<li><code>tbl_name [[AS] alias] | table_subquery [AS] alias</code>
<ul>
<li>数据表可以使用 tbl_name As alias_name 或 tbl_name alias_name 赋予别名</li>
<li>table_subquery 可以作为子查询使用在 FROM 子句中，这样的子查询必须为其赋予别名</li>
</ul>
</li>
</ul>
</li>
<li><code>{[INNER | CROSS] JOIN | {LEFT | RIGHT} [OUTER] JOIN}</code></li>
<li><code>table_reference</code></li>
<li><code>ON conditional_expr</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="5-9-内连接-inner-join"><a class="header-anchor" href="#5-9-内连接-inner-join"></a>5-9 内连接 INNER JOIN</h3>
</li>
<li>
<h3 id="5-10-外连接-outer-join"><a class="header-anchor" href="#5-10-外连接-outer-join"></a>5-10 外连接 OUTER JOIN</h3>
<ul>
<li>LEFT JOIN</li>
<li>RIGHT JOIN</li>
</ul>
</li>
<li>
<h3 id="5-11-多表连接"><a class="header-anchor" href="#5-11-多表连接"></a>5-11 多表连接</h3>
<ul>
<li>略</li>
</ul>
</li>
<li>
<h3 id="5-12-关于连接的几点说明"><a class="header-anchor" href="#5-12-关于连接的几点说明"></a>5-12 关于连接的几点说明</h3>
<ul>
<li>外连接
<ul>
<li>A LEFT JOIN B join_condtion
<ul>
<li>数据表 B 的结果集依赖数据表 A</li>
<li>数据表 A 的结果集根据左连接条件依赖所有数据表</li>
<li>左外连接条件决定如何检索数据表 B</li>
<li>如果数据表 A 的某条记录符合 WHERE 条件，但是在数据表 B 不存在，符合连接条件的记录，将生成一个所有列为空的额外的行</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="5-13-无限级分类表设计"><a class="header-anchor" href="#5-13-无限级分类表设计"></a>5-13 无限级分类表设计</h3>
<ul>
<li>略</li>
</ul>
</li>
<li>
<h3 id="5-14-多表删除"><a class="header-anchor" href="#5-14-多表删除"></a>5-14 多表删除</h3>
<ul>
<li><code>DELETE tbl_name[.*] [,tbl_name[.*]] ... FROM table_references [WHERE where_condition]</code></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>复习使用 MySQL（三）</title>
    <url>/2016/09/04/%E5%A4%8D%E4%B9%A0%E4%BD%BF%E7%94%A8-MySQL%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>MySQL 5.7.13</li>
</ul>
<h2 id="mysql-优化：硬件"><a class="header-anchor" href="#mysql-优化：硬件"></a>MySQL 优化：硬件</h2>
<ul>
<li>CPU：使用多核 CPU，能够充分发挥新版 MySQL 多核下的效果，建议 4 核以上</li>
<li>内存：如果数据量比较大，建议使用不要低于 20 G 内存的服务器</li>
<li>硬盘：SSD 硬盘，提高 TPS，选择适合的 RAID 方案</li>
<li>网卡：保证足够的吞吐量，建议千兆网卡</li>
</ul>
<h2 id="mysql-优化：软件"><a class="header-anchor" href="#mysql-优化：软件"></a>MySQL 优化：软件</h2>
<ul>
<li>OS 类型
<ul>
<li>Linux</li>
<li>FreeBSD</li>
</ul>
</li>
<li>Linux 关键配置
<ul>
<li>文件打开描述符：/etc/security/limits.conf 中 nofile、/proc/sys/fs/nr_open</li>
<li>可分配文件句柄数：/etc/sysctl.conf 中 fs.file-max、/proc/sys/fs/file-max</li>
<li>进程数：/etc/security/limits.conf 中的 nproc</li>
<li>线程数：/proc/sys/kernel/thread-max</li>
<li>其他 TCP 和网络相关选项：/etc/sysctl.conf</li>
<li>这些都可以通过ulimit 或 直接调整 /proc 中变量进行临时修改</li>
<li>建议关闭 SWAP 分区（内存要足够大才行）；如果数据太大，为了防止夯死主机，可以设置 2G 左右的 SWAP 分区</li>
</ul>
</li>
</ul>
<h2 id="mysql-优化：基础配置"><a class="header-anchor" href="#mysql-优化：基础配置"></a>MySQL 优化：基础配置</h2>
<p>基础配置 &amp; MyISAM 配置</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">max_connections=<span class="number">3000</span></span><br><span class="line">max_user_connections=<span class="number">2800</span></span><br><span class="line">max_connect_errors=<span class="number">10</span></span><br><span class="line">max_allowed_packet=<span class="number">64</span>M</span><br><span class="line">max_heap_table_size=<span class="number">512</span>M</span><br><span class="line">tmp_table_size=<span class="number">512</span>M</span><br><span class="line">max_length_for_sort_data=<span class="number">16</span>k</span><br><span class="line">wait_timeout=<span class="number">172800</span></span><br><span class="line">interactive_timeout=<span class="number">172800</span></span><br><span class="line"></span><br><span class="line">net_buffer_length=<span class="number">8</span>K</span><br><span class="line">read_buffer_size=<span class="number">4</span>M</span><br><span class="line">read_rnd_buffer_size=<span class="number">1</span>M</span><br><span class="line">sort_buffer_size=<span class="number">256</span>K</span><br><span class="line">join_buffer_size=<span class="number">2</span>M</span><br><span class="line">table_open_cache=<span class="number">512</span></span><br><span class="line">thread_cache_size=<span class="number">512</span></span><br><span class="line">query_cache_type=<span class="number">1</span></span><br><span class="line">query_cache_size=<span class="number">256</span>M</span><br></pre></td></tr></table></figure>
<p>InnoDB 配置</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">innodb_file_per_table=<span class="number">1</span></span><br><span class="line">innodb_open_files=<span class="number">7168</span></span><br><span class="line">innodb_use_sys_malloc=<span class="number">1</span></span><br><span class="line">innodb_additional_mem_pool_size=<span class="number">64</span>M</span><br><span class="line">innodb_buffer_pool_instances=<span class="number">4</span></span><br><span class="line">innodb_buffer_pool_size=<span class="number">20</span>G</span><br><span class="line">innodb_data_home_dir=/home/work/data</span><br><span class="line">innodb_data_file_path=ibdata1:<span class="number">1024</span>M:autoextend</span><br><span class="line">innodb_autoextend_increment=<span class="number">128</span></span><br><span class="line">innodb_thread_concurrency=<span class="number">0</span></span><br><span class="line">innodb_flush_log_at_trx_commit=<span class="number">1</span></span><br><span class="line">innodb_fast_shutdown=<span class="number">1</span></span><br><span class="line">innodb_force_recovery=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">innodb_log_buffer_size=<span class="number">16</span>M</span><br><span class="line">innodb_log_file_size=<span class="number">128</span>M</span><br><span class="line">innodb_log_files_in_group=<span class="number">4</span></span><br><span class="line">innodb_log_group_home_dir=/home/work/data</span><br><span class="line">innodb_max_dirty_pages_pct=<span class="number">60</span></span><br><span class="line">innodb_purge_threads=<span class="number">0</span></span><br><span class="line">innodb_lock_wait_timeout=<span class="number">50</span></span><br><span class="line">innodb_rollback_on_timeout=<span class="number">1</span></span><br><span class="line">innodb_commit_concurrency=<span class="number">0</span></span><br><span class="line">innodb_concurrency_tickets=<span class="number">1024</span></span><br><span class="line">innodb_autoinc_lock_mode=<span class="number">2</span></span><br><span class="line">innodb_change_buffering=all</span><br></pre></td></tr></table></figure>
<h2 id="mysql-优化：表设计原则"><a class="header-anchor" href="#mysql-优化：表设计原则"></a>MySQL 优化：表设计原则</h2>
<ul>
<li>互联网业务的特点：数据量大、读写操作多、业务模式相对简单</li>
<li>单表字段不宜过多，尽量不按照第三范式去设计表结构，</li>
<li>尽量减少表关联，适当的冗余保证不联表查询</li>
<li>表名和字段尽量采用小写字母+下划线的命名规则，尽量使用英文，例如：user_score</li>
<li>每个表一定要有主键，一般建议自增ID；单表索引不宜过多，一般5~6个索引</li>
<li>字段尽量使用高效类型，比如数字或时间，IP地址、手机号等都可以使用数字类型存储，非不得已采用字符</li>
</ul>
<h2 id="mysql-优化：查询语句"><a class="header-anchor" href="#mysql-优化：查询语句"></a>MySQL 优化：查询语句</h2>
<ul>
<li>不要写太复杂的SQL语句，尽量简单，能够让业务去做的，就不要让数据库区操作</li>
<li>尽量避免：子查询、group by、distinct 等操作（子查询可以用left join替代）</li>
<li>where、order by 等关键字段一定要建立索引，where里多个条件经常使用的可以建立联合索引（注意建立索引的数据必须是尽量分布多并且具备单调性，重复率低）</li>
<li>把数据当做神一样来供着，能够缓存的尽量缓存（redis、memcached等），能够多次查询的就不要关联查询</li>
<li>所有的变更操作（update、delete）必须有where条件！</li>
<li>不适合使用MySQL服务的数据功能操作，尽量采用别的第三方服务支持，比如全文检索功能</li>
</ul>
<h2 id="mysql-优化：sql-优化实例"><a class="header-anchor" href="#mysql-优化：sql-优化实例"></a>MySQL 优化：SQL 优化实例</h2>
<ul>
<li>Like 优化</li>
<li>Limit 优化</li>
<li>InnoDB 中 count 优化</li>
<li>定期使用 Explain 查看执行计划</li>
</ul>
<h2 id="php-与-mysql-交互"><a class="header-anchor" href="#php-与-mysql-交互"></a>PHP 与 MySQL 交互</h2>
<ul>
<li>
<p>扩展层</p>
</li>
<li>
<p>代码层</p>
<ul>
<li>为防止mysql太慢夯住PHP，建议设置SQL超时，或者设置execute_time等超时设置</li>
<li>$mysqli-&gt;options(MYSQL_OPT_READ_TIMEOUT, 3);</li>
<li>$mysqli-&gt;options(MYSQL_OPT_WRITE_TIMEOUT, 1);</li>
<li>务必在代码里记录相关SQL语句执行性能和时间等信息，方便后续优化</li>
</ul>
</li>
<li>
<p>超时设置</p>
<ul>
<li>PHP代码连接后端的超时设置</li>
<li>php.ini中execute_time设置</li>
<li>php-fpm中request_terminate_timeout，request_slowlog_timeout</li>
<li>nginx upstream相关超时设置</li>
</ul>
</li>
</ul>
<h2 id="php-与-mysql-安全"><a class="header-anchor" href="#php-与-mysql-安全"></a>PHP 与 MySQL 安全</h2>
<ul>
<li>SQL 注入</li>
<li>MySQL 服务端</li>
<li>备份机制</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>复习使用 MySQL（二）</title>
    <url>/2016/09/04/%E5%A4%8D%E4%B9%A0%E4%BD%BF%E7%94%A8-MySQL%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>MySQL 5.7.13</li>
</ul>
<h2 id="mysql-主要存储引擎"><a class="header-anchor" href="#mysql-主要存储引擎"></a>MySQL 主要存储引擎</h2>
<table>
<thead>
<tr>
<th>特性/引擎</th>
<th>MyISAM</th>
<th>Aria</th>
<th>InnoDB</th>
<th>XtraDB</th>
<th>Memory</th>
<th>Archive</th>
</tr>
</thead>
<tbody>
<tr>
<td>数据存储</td>
<td>传统顺序数据储存</td>
<td>传统顺序数据储存</td>
<td>表空间存储方式</td>
<td>表空间存储方式</td>
<td></td>
<td></td>
</tr>
<tr>
<td>事务支持</td>
<td>不支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>外键</td>
<td>不支持</td>
<td>不支持</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>全文检索</td>
<td>支持</td>
<td>支持</td>
<td>5.6 之后支持</td>
<td>5.6 之后支持</td>
<td></td>
<td></td>
</tr>
<tr>
<td>锁级别</td>
<td>表级锁</td>
<td>表级锁</td>
<td>行级锁</td>
<td>行级锁</td>
<td>表级锁</td>
<td>行级锁</td>
</tr>
<tr>
<td>Count 速度</td>
<td>快</td>
<td>快</td>
<td>慢</td>
<td>慢</td>
<td></td>
<td></td>
</tr>
<tr>
<td>适合业务</td>
<td>读多写少、单表数据量小于 1 KW</td>
<td>读多写少、单表数据量小于 1 KW</td>
<td>读写均衡、数据量不限</td>
<td>读写均衡、数据量不限</td>
<td></td>
<td></td>
</tr>
<tr>
<td>可用版本</td>
<td>MySQL、MariaDB、Percona</td>
<td>MariaDB</td>
<td>MySQL、MariaDB、Percona</td>
<td>MariaDB、Percona</td>
<td></td>
<td></td>
</tr>
<tr>
<td>其他说明</td>
<td>传统顺序索引数据库，适合读多写少小数据量业务</td>
<td>MyISAM 增强版，性能更好</td>
<td>适合高压力高性能的业务模型</td>
<td>InnoDB 增强版</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="mysql-索引定义"><a class="header-anchor" href="#mysql-索引定义"></a>MySQL 索引定义</h2>
<p>MySQL 的索引（Index）是帮助 MySQL 高效获取数据的数据结构</p>
<h2 id="mysql-索引类型"><a class="header-anchor" href="#mysql-索引类型"></a>MySQL 索引类型</h2>
<ul>
<li>Normal
<ul>
<li>普通索引，对存储的数值没有任何限制</li>
</ul>
</li>
<li>Unique
<ul>
<li>唯一索引，不允许数值重复，但允许空值</li>
</ul>
</li>
<li>Primary
<ul>
<li>主键索引，是一种特殊的唯一索引，不允许存在数值重复或空值</li>
</ul>
</li>
<li>Spatial（R-Tree）
<ul>
<li>GIS 相关空间查询使用索引数据结构。</li>
</ul>
</li>
<li>Fulltext
<ul>
<li>主要用于全文检索，目前只有 MyISAM 和 MySQL 5.6 + 的 InnoDB 支持；目前只支持英文。</li>
</ul>
</li>
</ul>
<h2 id="mysql-索引方法"><a class="header-anchor" href="#mysql-索引方法"></a>MySQL 索引方法</h2>
<ul>
<li>B+Tree
<ul>
<li>可用于排序的索引数据结构，可应用于 =，&gt;，&lt; 等各个范围查询，并且可以排序</li>
<li>时间复杂度：O(log2N)</li>
</ul>
</li>
<li>Hash
<ul>
<li>只能用于 =，IN 等操作，无法进行范围操作，Key 冲突严重情况下可能性能比 B-Tree 低下</li>
<li>时间复杂度：O(1)</li>
</ul>
</li>
</ul>
<h2 id="myisam-索引结构：b-tree"><a class="header-anchor" href="#myisam-索引结构：b-tree"></a>MyISAM 索引结构：B+ Tree</h2>
<ul>
<li>MyISAM 主索引和辅助索引
<ul>
<li>区别在于：主索引 Key 是唯一；辅助索引 Key 可以重复</li>
</ul>
</li>
<li>MyISAM 为非聚簇索引</li>
</ul>
<h2 id="innodb-索引结构：b-tree"><a class="header-anchor" href="#innodb-索引结构：b-tree"></a>InnoDB 索引结构：B+ Tree</h2>
<ul>
<li>InnoDB 主索引和辅助索引
<ul>
<li>InnoDB 的主索引是聚簇索引，数据和 Key 本身都会存储在 B+Tree 的叶子节点</li>
<li>InnoDB 的辅助索引本身主要是记录主索引的 Key,最终查找数据还是从辅助索引再去主索引查找</li>
</ul>
</li>
<li>InnoDB 为聚簇索引</li>
</ul>
<h2 id="存储引擎及版本选择"><a class="header-anchor" href="#存储引擎及版本选择"></a>存储引擎及版本选择</h2>
<p>结论：</p>
<ul>
<li>使用 InnoDB 于生产环境</li>
<li>使用 MySQL 5.5+ 于生产环境</li>
</ul>
<p>原因：</p>
<ul>
<li>更稳定可靠的数据存储和索引结构；整个存储引擎设计思想更可靠先进，接近于Oracle、SQL Server级别的数据库（有兴趣可以去阅读源码了解细节）</li>
<li>更多可靠特性支持，比如事务、外键等支持（支付等关键领域事务非常重要）</li>
<li>运行更稳定，不论读写数据的量级，都能够保证比较稳定的性能响应</li>
<li>更好地崩溃恢复机制，特别利用一些Percona的一些工具，更有效运维InnoDB</li>
<li>MySQL 5.5+ 对比 MySQL 5.1.x 总体功能和性能提升太多，改进太多</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>复习使用 MySQL（一）</title>
    <url>/2016/09/02/%E5%A4%8D%E4%B9%A0%E4%BD%BF%E7%94%A8-MySQL%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>MySQL 5.7.13</li>
</ul>
<h2 id="mysql-及衍生版本"><a class="header-anchor" href="#mysql-及衍生版本"></a>MySQL 及衍生版本</h2>
<ul>
<li>MySQL</li>
<li>MariaDB</li>
<li>Percona Server</li>
</ul>
<h2 id="mysql-sql-基础"><a class="header-anchor" href="#mysql-sql-基础"></a>MySQL SQL 基础</h2>
<ul>
<li>
<h3 id="ddl-data-definition-language-数据定义"><a class="header-anchor" href="#ddl-data-definition-language-数据定义"></a>DDL(Data Definition Language) - 数据定义</h3>
<ul>
<li>TRUNCATE - 清空
<ul>
<li>TRUNCATE TABLE Syntax - 清空数据表</li>
</ul>
</li>
<li>RENAME - 重命名
<ul>
<li>RENAME TABLE Syntax - 重命名数据表</li>
</ul>
</li>
<li>CREATE - 创建
<ul>
<li>CREATE VIEW Syntax - 创建视图</li>
<li>CREATE EVENT Syntax - 创建事件</li>
<li>CREATE INDEX Syntax - 创建索引</li>
<li>CREATE TABLE Syntax - 创建数据表</li>
<li>CREATE SERVER Syntax - 创建服务器</li>
<li>CREATE TRIGGER Syntax - 创建触发器</li>
<li>CREATE FUNCTION Syntax - 创建自定义函数</li>
<li>CREATE DATABASE Syntax - 创建数据库</li>
<li>CREATE PROCEDURE Syntax - 创建存储过程</li>
<li>CREATE TABLESPACE Syntax - 创建数据表空间</li>
<li>CREATE LOGFILE GROUP Syntax - 创建日志文件组</li>
</ul>
</li>
<li>ALTER - 修改
<ul>
<li>ALTER VIEW Syntax - 修改视图</li>
<li>ALTER EVENT Syntax - 修改事件</li>
<li>ALTER TABLE Syntax - 修改数据表</li>
<li>ALTER SERVER Syntax - 修改服务器</li>
<li>ALTER DATABASE Syntax - 修改数据库</li>
<li>ALTER FUNCTION Syntax - 修改自定义函数</li>
<li>ALTER INSTANCE Syntax - 修改实例</li>
<li>ALTER PROCEDURE Syntax - 修改存储过程</li>
<li>ALTER TABLESPACE Syntax - 修改数据表空间</li>
<li>ALTER LOGFILE GROUP Syntax - 修改日志分组</li>
</ul>
</li>
<li>DROP - 删除
<ul>
<li>DROP VIEW Syntax - 删除视图</li>
<li>DROP EVENT Syntax - 删除事件</li>
<li>DROP INDEX Syntax - 删除索引</li>
<li>DROP TABLE Syntax - 删除数据表</li>
<li>DROP SERVER Syntax - 删除服务器</li>
<li>DROP TRIGGER Syntax - 删除触发器</li>
<li>DROP DATABASE Syntax - 删除数据库</li>
<li>DROP FUNCTION Syntax - 删除自定义函数</li>
<li>DROP PROCEDURE Syntax - 删除存储过程</li>
<li>DROP TABLESPACE Syntax - 删除数据表空间</li>
<li>DROP LOGFILE GROUP Syntax - 删除日志分组</li>
</ul>
</li>
</ul>
</li>
<li>
<h3 id="dml-data-manipulation-language-数据操作"><a class="header-anchor" href="#dml-data-manipulation-language-数据操作"></a>DML(Data Manipulation Language) - 数据操作</h3>
<ul>
<li>DO</li>
<li>CALL</li>
<li>HANDLER</li>
<li>LOAD XML</li>
<li>LOAD DATA INFILE</li>
<li>INSERT - 数据插入</li>
<li>DELETE - 数据删除</li>
<li>UPDATE - 数据修改</li>
<li>SELECT - 数据查询
<ul>
<li>JOIN - 连接
<ul>
<li>LEFT JOIN - 左连接</li>
<li>RIGHT JOIN - 右连接</li>
<li>INNER JOIN - 内连接</li>
</ul>
</li>
<li>GROUP - 分组</li>
<li>UNION - 联合</li>
</ul>
</li>
<li>REPLACE</li>
<li>Subquery - 子查询</li>
<li>LIMIT, OFFSET - 分页</li>
</ul>
</li>
<li>
<h3 id="dcl-data-control-language-数据控制"><a class="header-anchor" href="#dcl-data-control-language-数据控制"></a>DCL(Data Control Language) - 数据控制</h3>
<ul>
<li>GRANT - 授权</li>
<li>REVOKE - 撤销授权</li>
</ul>
</li>
<li>
<h3 id="transactions-and-lock-事务"><a class="header-anchor" href="#transactions-and-lock-事务"></a>Transactions and Lock - 事务</h3>
<ul>
<li>START TRANSACTION, COMMIT, and ROLLBACK Syntax - 事务开始，事务提交和事务回滚</li>
<li>Statements That Cannot Be Rolled Back - 不能执行回滚的语句</li>
<li>Statements That Cause an Implicit Commit - 隐式提交</li>
<li>SAVEPOINT, ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Syntax - 保存点，回滚到保存点，释放保存点</li>
<li>LOCK TABLES and UNLOCK TABLES Syntax - 锁表与解锁</li>
<li>SET TRANSACTION Syntax - 设置事务语法</li>
<li>XA Transactions - XA 事务</li>
</ul>
</li>
<li>
<h3 id="mysql-utility-statements-mysql-实用语句"><a class="header-anchor" href="#mysql-utility-statements-mysql-实用语句"></a>MySQL Utility Statements - MySQL 实用语句</h3>
<ul>
<li>USE Syntax - 设置当前 SQL 语句默认使用数据库</li>
<li>HELP Syntax - 从 MySQL 参考手册返回在线信息</li>
<li>EXPLAIN Syntax - 获取 SQL 执行信息</li>
<li>DESCRIBE Syntax - 获取表结构信息</li>
</ul>
</li>
<li>
<h3 id="database-administration-statements-数据库管理员语句"><a class="header-anchor" href="#database-administration-statements-数据库管理员语句"></a>Database Administration Statements - 数据库管理员语句</h3>
<ul>
<li>SET Syntax - 设置
<ul>
<li>SET NAMES Syntax</li>
<li>SET CHARACTER SET Syntax</li>
<li>SET Syntax for Variable Assignment</li>
</ul>
</li>
<li>SHOW Syntax - 查看
<ul>
<li>SHOW BINARY LOGS Syntax - 显示二进制日志</li>
<li>SHOW BINLOG EVENTS Syntax - 显示二进制事件</li>
<li>SHOW CHARACTER SET Syntax - 显示字符集</li>
<li>SHOW COLLATION Syntax - 显示支持的字符</li>
<li>SHOW COLUMNS Syntax - 显示字段信息</li>
<li>SHOW CREATE DATABASE Syntax - 显示创建指定数据库的 SQL 语句</li>
<li>SHOW CREATE EVENT Syntax - 显示创建指定事件的 SQL 语句</li>
<li>SHOW CREATE FUNCTION Syntax - 显示创建指定自定义函数的 SQL 语句</li>
<li>SHOW CREATE PROCEDURE Syntax - 显示创建指定存储过程的 SQL 语句</li>
<li>SHOW CREATE TABLE Syntax - 显示创建指定表的 SQL 语句</li>
<li>SHOW CREATE TRIGGER Syntax - 显示创建指定触发器的 SQL 语句</li>
<li>SHOW CREATE USER Syntax - 显示创建指定用户的 SQL 语句</li>
<li>SHOW CREATE VIEW Syntax - 显示创建指定视图的 SQL 语句</li>
<li>SHOW DATABASES Syntax - 显示数据库列表</li>
<li>SHOW ENGINE Syntax - 显示引擎的操作信息</li>
<li>SHOW ENGINES Syntax - 显示支持的引擎</li>
<li>SHOW ERRORS Syntax - 显示错误</li>
<li>SHOW EVENTS Syntax - 显示事件</li>
<li>SHOW FUNCTION CODE Syntax - 显示自定义函数代码</li>
<li>SHOW FUNCTION STATUS Syntax - 显示自定义函数状态</li>
<li>SHOW GRANTS Syntax</li>
<li>SHOW INDEX Syntax - 显示索引</li>
<li>SHOW MASTER STATUS Syntax</li>
<li>SHOW OPEN TABLES Syntax</li>
<li>SHOW PLUGINS Syntax</li>
<li>SHOW PRIVILEGES Syntax - 显示当前用户权限</li>
<li>SHOW PROCEDURE CODE Syntax - 显示存储过程代码</li>
<li>SHOW PROCEDURE STATUS Syntax - 显示存储过程状态</li>
<li>SHOW PROCESSLIST Syntax</li>
<li>SHOW PROFILE Syntax - 显示配置文件</li>
<li>SHOW PROFILES Syntax - 显示配置文件列表</li>
<li>SHOW RELAYLOG EVENTS Syntax</li>
<li>SHOW SLAVE HOSTS Syntax - 查看附属主机</li>
<li>SHOW SLAVE STATUS Syntax - 查看附属主机状态</li>
<li>SHOW STATUS Syntax - 查看各种状态</li>
<li>SHOW TABLE STATUS Syntax - 显示指定数据库的所有表状态</li>
<li>SHOW TABLES Syntax - 显示指定数据库的所有表</li>
<li>SHOW TRIGGERS Syntax - 显示触发器</li>
<li>SHOW VARIABLES Syntax - 显示变量</li>
<li>SHOW WARNINGS Syntax - 显示警告</li>
</ul>
</li>
<li>Table Maintenance Statements - 表维护语句
<ul>
<li>CHECK TABLE Syntax - 检查表</li>
<li>REPAIR TABLE Syntax - 修复表</li>
<li>ANALYZE TABLE Syntax - 分析表</li>
<li>OPTIMIZE TABLE Syntax - 优化表</li>
<li>CHECKSUM TABLE Syntax - 校检表</li>
</ul>
</li>
<li>Account Management Statements - 账号管理语句
<ul>
<li>GRANT Syntax - 修复</li>
<li>REVOKE Syntax - 撤销</li>
<li>DROP USER Syntax - 删除用户</li>
<li>ALTER USER Syntax - 修改用户</li>
<li>CREATE USER Syntax - 创建用户</li>
<li>RENAME USER Syntax - 重命名用户</li>
<li>SET PASSWORD Syntax - 设置密码</li>
</ul>
</li>
<li>Other Administrative Statements - 其他管理语句</li>
<li>Plugin and User-Defined Function Statements - 插件和用户定义的函数语句</li>
</ul>
</li>
<li>
<h3 id="范式-反范式"><a class="header-anchor" href="#范式-反范式"></a>范式 &amp; 反范式</h3>
<ul>
<li>范式
<ul>
<li>第一范式（1NF）</li>
<li>第二范式（2NF）</li>
<li>第三范式（3NF）</li>
<li>巴斯-科德范式（BCNF）</li>
<li>第四范式(4NF）</li>
<li>第五范式（5NF，又称完美范式）</li>
</ul>
</li>
<li>反范式
<ul>
<li>没有冗余的数据库未必是最好的数据库，有时为了提高运行效率，就必须降低范式标准，适当保留冗余数据。</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>查看 Eloquent 模型关联时执行的 SQL 语句</title>
    <url>/2016/09/01/%E6%9F%A5%E7%9C%8B-Eloquent-%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94%E6%97%B6%E6%89%A7%E8%A1%8C%E7%9A%84-SQL-%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<p>本文目的是查看 Eloquent 在执行模型关联时运行的 SQL 语句</p>
<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>PHP 7</li>
<li>Laravel 5.1</li>
</ul>
<h2 id="简介"><a class="header-anchor" href="#简介"></a>简介</h2>
<p>数据表之间经常会互相进行关联。例如，一篇博客文章可能会有多条评论，或是一张订单可能对应一个下单客户。Eloquent 让管理和处理这些关联变得很容易，同时也支持多种类型的关联：</p>
<ul>
<li>一对一</li>
<li>一对多</li>
<li>多对多</li>
<li>远层一对多</li>
<li>多态关联</li>
<li>多态多对多关联</li>
</ul>
<p>接下来，我会根据公司项目的数据库结构，进行举例说明</p>
<h2 id="准备"><a class="header-anchor" href="#准备"></a>准备</h2>
<p>新增控制器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php artisan make:controller EloquentController</span><br></pre></td></tr></table></figure>
<p>新增路由</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一对一</span></span><br><span class="line">Route::get(<span class="string">'eloquent/one-to-one'</span>, [</span><br><span class="line">    <span class="string">'as'</span>   =&gt; <span class="string">'eloquent.one.to.one'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'EloquentController@oneToOne'</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一对多</span></span><br><span class="line">Route::get(<span class="string">'eloquent/one-to-many'</span>, [</span><br><span class="line">    <span class="string">'as'</span>   =&gt; <span class="string">'eloquent.one.to.many'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'EloquentController@oneToMany'</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多对多</span></span><br><span class="line">Route::get(<span class="string">'eloquent/many-to-many'</span>, [</span><br><span class="line">    <span class="string">'as'</span>   =&gt; <span class="string">'eloquent.many.to.many'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'EloquentController@manyToMany'</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 远程一对多</span></span><br><span class="line">Route::get(<span class="string">'eloquent/has-many-through'</span>, [</span><br><span class="line">    <span class="string">'as'</span>   =&gt; <span class="string">'eloquent.has.many.through'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'EloquentController@hasManyThrough'</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多态关联</span></span><br><span class="line">Route::get(<span class="string">'eloquent/polymorphic-relations'</span>, [</span><br><span class="line">    <span class="string">'as'</span>   =&gt; <span class="string">'eloquent.polymorphic.relations'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'EloquentController@polymorphicRelations'</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多对多多态管理</span></span><br><span class="line">Route::get(<span class="string">'eloquent/many-to-many-polymorphic-relations'</span>, [</span><br><span class="line">    <span class="string">'as'</span>   =&gt; <span class="string">'eloquent.many.to.many.polymorphic.relations'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'EloquentController@manyToManyPolymorphicRelations'</span>,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<h2 id="一对一"><a class="header-anchor" href="#一对一"></a>一对一</h2>
<p>场景是如每一名加盟商都对应着一份加盟商配置</p>
<p>新增模型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:model Models/League</span><br><span class="line">php artisan make:model Models/LeagueConfig</span><br></pre></td></tr></table></figure>
<p>在 <code>League</code> 模型添加代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// League.php 一名加盟商有一份配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">config</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(<span class="string">'App\Models\LeagueConfig'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 <code>LeagueConfig</code> 模型添加代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// LeagueConfig.php 一份配置对应一名加盟商</span><br><span class="line">public function league()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;hasOne(&apos;App\Models\League&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>控制器新增代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">oneToOne</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $data = League::find(<span class="number">8</span>)-&gt;config;</span><br><span class="line">    <span class="keyword">foreach</span> (DB::getQueryLog() <span class="keyword">as</span> $sql) &#123;</span><br><span class="line">        dump($sql[<span class="string">'query'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    dump($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看 SQL</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_league`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_league`</span>.<span class="string">`id`</span> = <span class="number">8</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_leagueconfig`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_leagueconfig`</span>.<span class="string">`league_id`</span> = <span class="number">8</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`z_leagueconfig`</span>.<span class="string">`league_id`</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<h2 id="一对多"><a class="header-anchor" href="#一对多"></a>一对多</h2>
<p>场景是仓库一种 SKU 的水果能被多名加盟商进货</p>
<p>新增模型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:model Models/Product</span><br><span class="line">php artisan make:model Models/ProductLeague</span><br></pre></td></tr></table></figure>
<p><code>Product</code> 模型中添加代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">league</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(<span class="string">'App\Models\ProductLeague'</span>, <span class="string">'pid'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>控制器新增代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> public function oneToMany(Request $request)</span><br><span class="line">&#123;</span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $data = Product::find(3062)-&gt;league;</span><br><span class="line">    foreach (DB::getQueryLog() as $sql) &#123;</span><br><span class="line">        dump($sql[&apos;query&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dump($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看 SQL</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_product`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_product`</span>.<span class="string">`id`</span> = <span class="number">3062</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_productleague`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_productleague`</span>.<span class="string">`pid`</span> = <span class="number">3062</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`z_productleague`</span>.<span class="string">`pid`</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure>
<h2 id="多对多"><a class="header-anchor" href="#多对多"></a>多对多</h2>
<p>场景是一名用户使用多张不同种类的优惠券，一种优惠券被不同的用户使用</p>
<p>新增模型</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php artisan make:model Models/User</span><br><span class="line">php artisan make:model Models/Voucher</span><br><span class="line">php artisan make:model Models/VoucherRecord</span><br></pre></td></tr></table></figure>
<p><code>User</code> 模型添加代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">voucher</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;belongsToMany(<span class="string">'App\Models\Voucher'</span>, <span class="string">'z_voucher_record'</span>, <span class="string">'uid'</span>, <span class="string">'vid'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>Voucher</code> 模型添加代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;belongsToMany(<span class="string">'App\Models\User'</span>, <span class="string">'z_voucher_record'</span>, <span class="string">'vid'</span>, <span class="string">'uid'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>控制器新增代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function manyToMany(Request $request)</span><br><span class="line">&#123;</span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $vouchers = User::find(412115)-&gt;voucher;</span><br><span class="line">    foreach (DB::getQueryLog() as $sql) &#123;</span><br><span class="line">        dump($sql[&apos;query&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    dump($vouchers);</span><br><span class="line"></span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $user = Voucher::find(395)-&gt;user;</span><br><span class="line">    foreach (DB::getQueryLog() as $sql) &#123;</span><br><span class="line">        dump($sql[&apos;query&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    dump($user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看 SQL</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询 ID 为 42115 的用户使用过的优惠券</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_user`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_user`</span>.<span class="string">`id`</span> = <span class="number">412115</span>;</span><br><span class="line"></span><br><span class="line">LIMIT 1 <span class="keyword">SELECT</span></span><br><span class="line">	<span class="string">`z_voucher`</span>.*, <span class="string">`z_voucher_record`</span>.<span class="string">`uid`</span> <span class="keyword">AS</span> <span class="string">`pivot_uid`</span> ,</span><br><span class="line">	<span class="string">`z_voucher_record`</span>.<span class="string">`vid`</span> <span class="keyword">AS</span> <span class="string">`pivot_vid`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_voucher`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`z_voucher_record`</span> <span class="keyword">ON</span> <span class="string">`z_voucher`</span>.<span class="string">`id`</span> = <span class="string">`z_voucher_record`</span>.<span class="string">`vid`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_voucher_record`</span>.<span class="string">`uid`</span> = <span class="number">412115</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 ID 为 395 的优惠券被哪些用户使用过</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_voucher`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_voucher`</span>.<span class="string">`id`</span> = <span class="number">395</span>;</span><br><span class="line"></span><br><span class="line">LIMIT 1 <span class="keyword">SELECT</span></span><br><span class="line">	<span class="string">`z_user`</span>.*, <span class="string">`z_voucher_record`</span>.<span class="string">`vid`</span> <span class="keyword">AS</span> <span class="string">`pivot_vid`</span> ,</span><br><span class="line">	<span class="string">`z_voucher_record`</span>.<span class="string">`uid`</span> <span class="keyword">AS</span> <span class="string">`pivot_uid`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_user`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`z_voucher_record`</span> <span class="keyword">ON</span> <span class="string">`z_user`</span>.<span class="string">`id`</span> = <span class="string">`z_voucher_record`</span>.<span class="string">`uid`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_voucher_record`</span>.<span class="string">`vid`</span> = <span class="number">395</span>;</span><br></pre></td></tr></table></figure>
<h2 id="远程一对多"><a class="header-anchor" href="#远程一对多"></a>远程一对多</h2>
<p>新增模型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:model Models/Order</span><br></pre></td></tr></table></figure>
<p><code>Order</code> 模型新增代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> public function order()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;hasManyThrough(&apos;App\Models\Order&apos;, &apos;App\Models\User&apos;, &apos;league_id&apos;, &apos;uid&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>控制器新增代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function hasManyThrough(Request $request)</span><br><span class="line">&#123;</span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $data = League::find(20)-&gt;order;</span><br><span class="line">    foreach (DB::getQueryLog() as $sql) &#123;</span><br><span class="line">        dump($sql[&apos;query&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dump($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看 SQL</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询 ID 为 20 的加盟商旗下用户的商品订单</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_league`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_league`</span>.<span class="string">`id`</span> = <span class="number">20</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	<span class="string">`z_order`</span>.*, <span class="string">`z_user`</span>.<span class="string">`league_id`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`z_order`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`z_user`</span> <span class="keyword">ON</span> <span class="string">`z_user`</span>.<span class="string">`id`</span> = <span class="string">`z_order`</span>.<span class="string">`uid`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`z_user`</span>.<span class="string">`league_id`</span> = <span class="number">20</span>;</span><br></pre></td></tr></table></figure>
<h2 id="多态关联"><a class="header-anchor" href="#多态关联"></a>多态关联</h2>
<p>新增模型如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php artisan make:model Models/Staff</span><br><span class="line">php artisan make:model Models/photos</span><br><span class="line">php artisan make:model Models/Products</span><br></pre></td></tr></table></figure>
<p>控制器新增代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">polymorphicRelations</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $staff = Staff::find(<span class="number">8</span>)-&gt;photos;</span><br><span class="line">    <span class="keyword">foreach</span> (DB::getQueryLog() <span class="keyword">as</span> $sql) &#123;</span><br><span class="line">        dump($sql[<span class="string">'query'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dump($staff);</span><br><span class="line"></span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $products = Products::find(<span class="number">1</span>)-&gt;photos;</span><br><span class="line">    <span class="keyword">foreach</span> (DB::getQueryLog() <span class="keyword">as</span> $sql) &#123;</span><br><span class="line">        dump($sql[<span class="string">'query'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dump($products);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看 SQL</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看 ID 为 8 的职员的所有照片</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_staff`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_staff`</span>.<span class="string">`id`</span> = <span class="number">8</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_photos`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_photos`</span>.<span class="string">`imageable_id`</span> = <span class="number">8</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`eloquent_photos`</span>.<span class="string">`imageable_id`</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`eloquent_photos`</span>.<span class="string">`imageable_type`</span> = <span class="string">"App\Models\Staff"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 ID 为 1 的产品的所有图片</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_products`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_products`</span>.<span class="string">`id`</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_photos`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_photos`</span>.<span class="string">`imageable_id`</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`eloquent_photos`</span>.<span class="string">`imageable_id`</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`eloquent_photos`</span>.<span class="string">`imageable_type`</span> = <span class="string">"App\Models\Products"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="多态多对多关联"><a class="header-anchor" href="#多态多对多关联"></a>多态多对多关联</h2>
<p>新增模型如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php artisan make:model Models/Tag</span><br><span class="line">php artisan make:model Models/Post</span><br><span class="line">php artisan make:model Models/Video</span><br></pre></td></tr></table></figure>
<p>控制器新增代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">manyToManyPolymorphicRelations</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $post_tags = Post::find(<span class="number">8</span>)-&gt;tags;</span><br><span class="line">    <span class="keyword">foreach</span> (DB::getQueryLog() <span class="keyword">as</span> $sql) &#123;</span><br><span class="line">        dump($sql[<span class="string">'query'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dump($post_tags);</span><br><span class="line"></span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $video_tags = Video::find(<span class="number">8</span>)-&gt;tags;</span><br><span class="line">    <span class="keyword">foreach</span> (DB::getQueryLog() <span class="keyword">as</span> $sql) &#123;</span><br><span class="line">        dump($sql[<span class="string">'query'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dump($video_tags);</span><br><span class="line"></span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $posts = Tag::find(<span class="number">4</span>)-&gt;posts;</span><br><span class="line">    <span class="keyword">foreach</span> (DB::getQueryLog() <span class="keyword">as</span> $sql) &#123;</span><br><span class="line">        dump($sql[<span class="string">'query'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dump($posts);</span><br><span class="line"></span><br><span class="line">    DB::enableQueryLog();</span><br><span class="line">    $videos = Tag::find(<span class="number">4</span>)-&gt;videos;</span><br><span class="line">    <span class="keyword">foreach</span> (DB::getQueryLog() <span class="keyword">as</span> $sql) &#123;</span><br><span class="line">        dump($sql[<span class="string">'query'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dump($videos);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看 SQL</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询 ID 为 8 的文章所使用的标签</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_posts`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_posts`</span>.<span class="string">`id`</span> = <span class="number">8</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	<span class="string">`eloquent_tags`</span>.*, <span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_id`</span> <span class="keyword">AS</span> <span class="string">`pivot_taggable_id`</span> ,</span><br><span class="line">	<span class="string">`eloquent_taggables`</span>.<span class="string">`tag_id`</span> <span class="keyword">AS</span> <span class="string">`pivot_tag_id`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_tags`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`eloquent_taggables`</span> <span class="keyword">ON</span> <span class="string">`eloquent_tags`</span>.<span class="string">`id`</span> = <span class="string">`eloquent_taggables`</span>.<span class="string">`tag_id`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_id`</span> = <span class="number">8</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_type`</span> = <span class="string">"App\Models\Post"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 ID 为 8 的视频所使用的标签</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_videos`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_videos`</span>.<span class="string">`id`</span> = <span class="number">8</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	<span class="string">`eloquent_tags`</span>.*, <span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_id`</span> <span class="keyword">AS</span> <span class="string">`pivot_taggable_id`</span> ,</span><br><span class="line">	<span class="string">`eloquent_taggables`</span>.<span class="string">`tag_id`</span> <span class="keyword">AS</span> <span class="string">`pivot_tag_id`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_tags`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`eloquent_taggables`</span> <span class="keyword">ON</span> <span class="string">`eloquent_tags`</span>.<span class="string">`id`</span> = <span class="string">`eloquent_taggables`</span>.<span class="string">`tag_id`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_id`</span> = <span class="number">8</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_type`</span> = <span class="string">"App\Models\Video"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 ID 为 4 的标签下的文章</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_tags`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_tags`</span>.<span class="string">`id`</span> = <span class="number">4</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	<span class="string">`eloquent_posts`</span>.*, <span class="string">`eloquent_taggables`</span>.<span class="string">`tag_id`</span> <span class="keyword">AS</span> <span class="string">`pivot_tag_id`</span> ,</span><br><span class="line">	<span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_id`</span> <span class="keyword">AS</span> <span class="string">`pivot_taggable_id`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_posts`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`eloquent_taggables`</span> <span class="keyword">ON</span> <span class="string">`eloquent_posts`</span>.<span class="string">`id`</span> = <span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_id`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_taggables`</span>.<span class="string">`tag_id`</span> = <span class="number">4</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_type`</span> = <span class="string">"App\Modes\Post"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 ID 为 4 的标签下的视屏</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	*</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_tags`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_tags`</span>.<span class="string">`id`</span> = <span class="number">4</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	<span class="string">`eloquent_videos`</span>.*, <span class="string">`eloquent_taggables`</span>.<span class="string">`tag_id`</span> <span class="keyword">AS</span> <span class="string">`pivot_tag_id`</span> ,</span><br><span class="line">	<span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_id`</span> <span class="keyword">AS</span> <span class="string">`pivot_taggable_id`</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">	<span class="string">`eloquent_videos`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`eloquent_taggables`</span> <span class="keyword">ON</span> <span class="string">`eloquent_videos`</span>.<span class="string">`id`</span> = <span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_id`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	<span class="string">`eloquent_taggables`</span>.<span class="string">`tag_id`</span> = <span class="number">4</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`eloquent_taggables`</span>.<span class="string">`taggable_type`</span> = <span class="string">"App\Models\Video"</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用阿里云从零开始部署 Laravel</title>
    <url>/2016/08/31/%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%83%A8%E7%BD%B2-Laravel/</url>
    <content><![CDATA[<h2 id="阿里云-ecs-选购"><a class="header-anchor" href="#阿里云-ecs-选购"></a>阿里云 ECS 选购</h2>
<ul>
<li>地域
<ul>
<li>地域：华南 1</li>
<li>可用区：华南 1 可用区 A</li>
</ul>
</li>
<li>网络
<ul>
<li>网络类型：经典网络</li>
</ul>
</li>
<li>实例
<ul>
<li>实例系列：系列 I</li>
<li>实力规格：1 核 1GB</li>
</ul>
</li>
<li>带宽：
<ul>
<li>公网带宽：按固定带宽</li>
<li>带宽：1 Mbps</li>
</ul>
</li>
<li>镜像：
<ul>
<li>镜像类型：公共镜像</li>
<li>公共镜像：CentOS 6.5 32位</li>
</ul>
</li>
<li>存储
<ul>
<li>系统盘：40 GB</li>
</ul>
</li>
<li>收费模式
<ul>
<li>包年包月</li>
<li>每月 68 元</li>
</ul>
</li>
</ul>
<h2 id="阿里云域名选购解析"><a class="header-anchor" href="#阿里云域名选购解析"></a>阿里云域名选购解析</h2>
<ul>
<li><a href="http://xn--eqr31enth05q.cc" target="_blank" rel="noopener">国际域名.cc</a>
<ul>
<li>名称：<a href="http://cowcat.cc" target="_blank" rel="noopener">cowcat.cc</a></li>
<li>价格：16 元一年</li>
</ul>
</li>
<li>实名认证：
<ul>
<li>输入身份证号码</li>
<li>提交身份证正面照片</li>
</ul>
</li>
<li>域名解析：
<ul>
<li>输入阿里云 ECS 公网 IP 地址</li>
</ul>
</li>
</ul>
<h2 id="centos-6-5-搭建-lnmp"><a class="header-anchor" href="#centos-6-5-搭建-lnmp"></a>CentOS 6.5 搭建 LNMP</h2>
<h3 id="搭建准备"><a class="header-anchor" href="#搭建准备"></a>搭建准备</h3>
<p>查看 <code>CentOS</code> 版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat /etc/centos-release</span><br></pre></td></tr></table></figure>
<p>安装 <code>epel</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>
<p>安装 <code>vim</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y vim</span><br></pre></td></tr></table></figure>
<p>安装 <code>htop</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y htop</span><br></pre></td></tr></table></figure>
<p>安装 <code>git</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure>
<h3 id="安装-nginx"><a class="header-anchor" href="#安装-nginx"></a>安装 Nginx</h3>
<p>修改 yum 源：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入 `/etc/yum.repos.d` 目录</span></span><br><span class="line">cd /etc/yum.repos.d/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建一个 `nginx.repo` 文件</span></span><br><span class="line">vim nginx.repo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 写入内容如下</span></span><br><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>
<p>更新 yum 源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>
<p>安装 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure>
<p>查看 Nginx 版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># nginx version: nginx/1.10.1</span><br><span class="line">nginx -v</span><br></pre></td></tr></table></figure>
<p>启动 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure>
<p>开机启动 Nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chkconfig nginx on</span><br></pre></td></tr></table></figure>
<h3 id="安装-mysql"><a class="header-anchor" href="#安装-mysql"></a>安装 MySQL</h3>
<p>官网下载源码包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/mysql57-community-release-el6-7.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>安装 MySQL 的 yum 源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -Uvh mysql57-community-release-el6-7.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>打开 mysql-community.repo 看关于mysql的内容，确定 mysql57 的 enable 是打开的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/mysql-community.repo</span><br></pre></td></tr></table></figure>
<p>安装 MySQL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install mysql-community-server</span><br></pre></td></tr></table></figure>
<p>启动 MySQL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service mysqld start</span><br></pre></td></tr></table></figure>
<p>启动 MySQL 后，查看自动生成的密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure>
<p>修改 MySQL初始化密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p>MySQL 登录验证</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>
<p>MySQL 的配制文件默认在 <code>/etc/my.cnf</code></p>
<p>开机启动 MySQL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chkconfig mysqld on</span><br></pre></td></tr></table></figure>
<h3 id="安装-php"><a class="header-anchor" href="#安装-php"></a>安装 PHP</h3>
<p>删除之前的 PHP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum remove php* php-common</span><br></pre></td></tr></table></figure>
<p>更新 yum 源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</span><br><span class="line">wget http://rpms.remirepo.net/enterprise/remi-release-6.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm</span><br></pre></td></tr></table></figure>
<p>安装 PHP 7</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install php70w php70w-fpm php70w-cli php70w-mysql php70w-pdo php70w-mbstring php70w-mcrypt php70w-pear php70w-opcache php70w-bcmath php70w-xml php70w-pecl-redis</span><br></pre></td></tr></table></figure>
<p>查看 PHP 7 的版本与扩展</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php -v</span><br><span class="line">php -m</span><br></pre></td></tr></table></figure>
<p>简单修改一些配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 打开 PHP 配置文件</span><br><span class="line">vim /etc/php.ini</span><br><span class="line"></span><br><span class="line"># 修改 PHP 配置参数</span><br><span class="line">date.timezone = Asia/Shanghai</span><br><span class="line">upload_max_filesize = 20M</span><br><span class="line">post_max_size = 20M</span><br><span class="line">display_errors = Off</span><br><span class="line">expose_php = Off</span><br></pre></td></tr></table></figure>
<p>重启 PHP 7</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service php-fpm restart</span><br></pre></td></tr></table></figure>
<p>开机启动 PHP 7</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chkconfig php-fpm on</span><br></pre></td></tr></table></figure>
<h3 id="安装-composer"><a class="header-anchor" href="#安装-composer"></a>安装 Composer</h3>
<p>安装 Composer</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php -r &quot;copy(&apos;https://getcomposer.org/installer&apos;, &apos;composer-setup.php&apos;);&quot;</span><br><span class="line"></span><br><span class="line">php -r &quot;if (hash_file(&apos;SHA384&apos;, &apos;composer-setup.php&apos;) === &apos;e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae&apos;) &#123; echo &apos;Installer verified&apos;; &#125; else &#123; echo &apos;Installer corrupt&apos;; unlink(&apos;composer-setup.php&apos;); &#125; echo PHP_EOL;&quot;</span><br><span class="line"></span><br><span class="line">php composer-setup.php --install-dir=/usr/bin --filename=composer</span><br><span class="line"></span><br><span class="line">php -r &quot;unlink(&apos;composer-setup.php&apos;);&quot;</span><br></pre></td></tr></table></figure>
<p>查看 Composer 版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer -v</span><br></pre></td></tr></table></figure>
<p>全局设置国内镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure>
<h3 id="安装-node-js-4-5-lts"><a class="header-anchor" href="#安装-node-js-4-5-lts"></a>安装 Node.js (4.5 LTS)</h3>
<p>编译安装 Node.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v4.5.0/node-v4.5.0.tar.gz</span><br><span class="line">tar zxf node-v4.5.0.tar.gz</span><br><span class="line">cd node-v4.5.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>如果提示 gcc 版本过低，需要进行升级，执行命令如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rpm --import http://ftp.scientificlinux.org/linux/scientific/5x/x86_64/RPM-GPG-KEYs/RPM-GPG-KEY-cern</span><br><span class="line">wget -O /etc/yum.repos.d/slc6-devtoolset.repo http://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo</span><br><span class="line">sudo yum install devtoolset-2</span><br><span class="line">scl enable devtoolset-2 bash</span><br></pre></td></tr></table></figure>
<p>然后查看版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">gfortran --version</span><br></pre></td></tr></table></figure>
<h3 id="安装-redis"><a class="header-anchor" href="#安装-redis"></a>安装 Redis</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm</span><br><span class="line">yum --enablerepo=remi,remi-test install redis</span><br></pre></td></tr></table></figure>
<p>开启 Redis</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chkconfig --add redis</span><br><span class="line">chkconfig --level 345 redis on</span><br><span class="line">service redis start</span><br></pre></td></tr></table></figure>
<h3 id="配置-nginx-与-php-7"><a class="header-anchor" href="#配置-nginx-与-php-7"></a>配置 Nginx 与 PHP 7</h3>
<p>Nginx 安装完毕之后，默认的网站根目录是在 <code>/usr/share/nginx/html/</code></p>
<p>虚拟主机的配置在 <code>/etc/nginx/conf.d</code>，如果要配置新的域名在这里就可以了。</p>
<p>默认有一个 <code>default.conf</code> 的配置，可以在里面配置以下参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.cowcat.cc;</span><br><span class="line"></span><br><span class="line">    # 日志记录</span><br><span class="line">    access_log  /var/log/nginx/cowcat.cc.access.log  main;</span><br><span class="line">    error_log /var/log/nginx/cowcat.cc.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root /data/www/cowcat/public;</span><br><span class="line">        try_files $uri $uri/ /index.php?$query_string;</span><br><span class="line">        index index.php index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 错误页面</span><br><span class="line">    error_page 404              /404.html;</span><br><span class="line">    error_page 500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #PHP 脚本请求全部转发到 FastCGI 处理. 使用 FastCGI 默认配置.</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /data/www/cowcat/public;</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tooling</category>
      </categories>
      <tags>
        <tag>AliCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 编写自定义命令</title>
    <url>/2016/08/25/%E4%BD%BF%E7%94%A8-Laravel-%E7%BC%96%E5%86%99%E8%87%AA%E5%AE%9A%E4%B9%89%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>本文讲述了如何使用 Laravel 开发命令行</p>
<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>PHP 7</li>
<li>Laravel 5.1</li>
<li>OS X El Capitan 10.11.4</li>
</ul>
<h2 id="简介"><a class="header-anchor" href="#简介"></a>简介</h2>
<p>Artisan 是 Laravel 的命令行接口的名称，它提供了许多实用的命令来帮助你开发 Laravel 应用，它由强大的 Symfony Console 组件所驱动。</p>
<h2 id="文档"><a class="header-anchor" href="#文档"></a>文档</h2>
<p><a href="http://laravel-china.org/docs/5.1/artisan" target="_blank" rel="noopener">Artisan</a></p>
<h2 id="目的"><a class="header-anchor" href="#目的"></a>目的</h2>
<p>本文目的旨在实现三个简单的命令，分别是优化项目、清除缓存和发送邮件</p>
<h2 id="实现步骤"><a class="header-anchor" href="#实现步骤"></a>实现步骤</h2>
<h3 id="新建命令"><a class="header-anchor" href="#新建命令"></a>新建命令</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:console LaravelOptimize --command=laravel:optimize</span><br><span class="line">php artisan make:console LaravelClean --command=laravel:clean</span><br><span class="line">php artisan make:console SendEmails --command=emails:send</span><br></pre></td></tr></table></figure>
<h3 id="注册命令"><a class="header-anchor" href="#注册命令"></a>注册命令</h3>
<p>打开文件 <code>app/Console/Kernel.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected $commands = [</span><br><span class="line">    \App\Console\Commands\Inspire::class,</span><br><span class="line">    \App\Console\Commands\SendEmails::class,</span><br><span class="line">    \App\Console\Commands\LaravelClean::class,</span><br><span class="line">    \App\Console\Commands\LaravelOptimize::class,</span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<h3 id="编写命令执行代码"><a class="header-anchor" href="#编写命令执行代码"></a>编写命令执行代码</h3>
<p>文件 <code>SendEmails.php</code> 代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Console\Commands;</span><br><span class="line"></span><br><span class="line">use App\Facades\UserRepository;</span><br><span class="line">use Illuminate\Console\Command;</span><br><span class="line">use Mail;</span><br><span class="line"></span><br><span class="line">class SendEmails extends Command</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * The name and signature of the console command.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $signature = &apos;emails:send&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * The console command description.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $description = &apos;use SendCloud to send emails&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create a new command instance.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        parent::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Execute the console command.</span><br><span class="line">     *</span><br><span class="line">     * @return mixed</span><br><span class="line">     */</span><br><span class="line">    public function handle()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;line(&quot;即将执行邮件发送命令&quot;);</span><br><span class="line"></span><br><span class="line">        if($this-&gt;confirm(&apos;确定执行?&apos;))&#123;</span><br><span class="line">            $users = UserRepository::all();</span><br><span class="line"></span><br><span class="line">            $bar = $this-&gt;output-&gt;createProgressBar(count($users));</span><br><span class="line"></span><br><span class="line">            foreach ($users as $user) &#123;</span><br><span class="line">                $icon = &quot;http://o93kt6djh.bkt.clouddn.com/Laravel-SendEmaillaravel-200x50.png&quot;;</span><br><span class="line">                $image = &quot;http://o93kt6djh.bkt.clouddn.com/Laravel-SendEmaillaravel-600x300.jpg&quot;;</span><br><span class="line"></span><br><span class="line">                Mail::send(&apos;emails.test-image&apos;,</span><br><span class="line">                    [</span><br><span class="line">                        &apos;name&apos;  =&gt; $user-&gt;name,</span><br><span class="line">                        &apos;icon&apos;  =&gt; $icon,</span><br><span class="line">                        &apos;image&apos; =&gt; $image,</span><br><span class="line">                    ],</span><br><span class="line">                    function ($email) use ($user) &#123;</span><br><span class="line">                        $email-&gt;to($user-&gt;email)-&gt;subject(&apos;图文邮件标题&apos;);</span><br><span class="line">                    &#125;);</span><br><span class="line"></span><br><span class="line">                $bar-&gt;advance();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $bar-&gt;finish();</span><br><span class="line"></span><br><span class="line">            $this-&gt;info(&quot;发送邮件完毕&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;info(&quot;取消执行邮件发送命令&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>文件 <code>LaravelOptimize.php</code> 代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Console\Commands;</span><br><span class="line"></span><br><span class="line">use Illuminate\Console\Command;</span><br><span class="line">use Illuminate\Support\Facades\Artisan;</span><br><span class="line"></span><br><span class="line">class LaravelOptimize extends Command</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * The name and signature of the console command.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $signature = &apos;laravel:optimize&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * The console command description.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $description = &apos;optimize laravel project&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create a new command instance.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        parent::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Execute the console command.</span><br><span class="line">     *</span><br><span class="line">     * @return mixed</span><br><span class="line">     */</span><br><span class="line">    public function handle()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;line(&quot;即将执行优化缓存命令&quot;);</span><br><span class="line">        if($this-&gt;confirm(&apos;确定执行?&apos;))&#123;</span><br><span class="line">            $this-&gt;line(&quot;开始执行缓存命令&quot;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;config:cache&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Configuration cache cleared!&apos;);</span><br><span class="line">            $this-&gt;info(&apos;Configuration cached successfully!&apos;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;route:cache&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Route cache cleared!&apos;);</span><br><span class="line">            $this-&gt;info(&apos;Routes cached successfully!&apos;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;optimize&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Generating optimized class loader&apos;);</span><br><span class="line"></span><br><span class="line">            if(function_exists(&apos;exec&apos;))&#123;</span><br><span class="line">                exec(&quot;composer dump-autoload&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;ide-helper:generate&quot;);</span><br><span class="line">            $this-&gt;info(&apos;A new helper file was written to _ide_helper.php&apos;);</span><br><span class="line"></span><br><span class="line">            $this-&gt;info(&quot;优化缓存成功&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;info(&quot;取消执行优化缓存命令&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>文件 <code>LaravelClean.php</code> 代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Console\Commands;</span><br><span class="line"></span><br><span class="line">use Illuminate\Console\Command;</span><br><span class="line">use Illuminate\Support\Facades\Artisan;</span><br><span class="line"></span><br><span class="line">class LaravelClean extends Command</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * The name and signature of the console command.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $signature = &apos;laravel:clean&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * The console command description.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $description = &apos;clean project all cache&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create a new command instance.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        parent::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Execute the console command.</span><br><span class="line">     *</span><br><span class="line">     * @return mixed</span><br><span class="line">     */</span><br><span class="line">    public function handle()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;line(&quot;即将执行清除缓存命令&quot;);</span><br><span class="line">        if($this-&gt;confirm(&apos;确定执行?&apos;))&#123;</span><br><span class="line">            $this-&gt;line(&quot;开始执行缓存命令&quot;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;clear-compiled&quot;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;auth:clear-resets&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Expired reset tokens cleared!&apos;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;cache:clear&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Application cache cleared!&apos;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;config:clear&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Configuration cache cleared!&apos;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;debugbar:clear&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Debugbar Storage cleared!&apos;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;route:clear&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Route cache cleared!&apos;);</span><br><span class="line"></span><br><span class="line">            Artisan::call(&quot;view:clear&quot;);</span><br><span class="line">            $this-&gt;info(&apos;Compiled views cleared!&apos;);</span><br><span class="line"></span><br><span class="line">            $this-&gt;info(&quot;清除缓存成功&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;info(&quot;取消执行清除缓存命令&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="执行效果"><a class="header-anchor" href="#执行效果"></a>执行效果</h2>
<p>在终端分别执行以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan laravel:optimize</span><br><span class="line">php artisan laravel:clean</span><br><span class="line">php artisan emails:send</span><br></pre></td></tr></table></figure>
<p>执行效果分别如下显示：</p>
<h4 id="php-artisan-laravel-optimize"><a class="header-anchor" href="#php-artisan-laravel-optimize"></a>php artisan laravel:optimize</h4>
<p><img src="http://o93kt6djh.bkt.clouddn.com/laravel-optimize.png" alt="执行缓存清楚"></p>
<h4 id="php-artisan-laravel-clean"><a class="header-anchor" href="#php-artisan-laravel-clean"></a>php artisan laravel:clean</h4>
<p><img src="http://o93kt6djh.bkt.clouddn.com/laravel-clean.png" alt="执行缓存清楚"></p>
<h4 id="php-artisan-emails-send"><a class="header-anchor" href="#php-artisan-emails-send"></a>php artisan emails:send</h4>
<p><img src="http://o93kt6djh.bkt.clouddn.com/email-send.png" alt="执行邮件发送"></p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 基于 SMTP 驱动实现发送邮件</title>
    <url>/2016/08/08/%E4%BD%BF%E7%94%A8-Laravel-%E5%9F%BA%E4%BA%8E-SMTP-%E9%A9%B1%E5%8A%A8%E5%AE%9E%E7%8E%B0%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
    <content><![CDATA[<p>本文主要讲述了如何快速使用 Laravel 构建发送邮件的功能</p>
<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>PHP 7</li>
<li>Laravel 5.1</li>
<li>OS X El Capitan 10.11.4</li>
</ul>
<h2 id="简介"><a class="header-anchor" href="#简介"></a>简介</h2>
<p>Laravel 基于热门的 SwiftMailer 函数库提供了一个简洁的 API。Laravel 为 SMTP、Mailgun、Mandrill、Amazon SES、PHP 的 mail 函数及 sendmail 提供驱动，让你可以快速地从所选择的本地或云端服务开始发送邮件。（摘录 PHPhub 翻译文档）</p>
<h2 id="配置"><a class="header-anchor" href="#配置"></a>配置</h2>
<p>邮件配置文件是<code>config/mail.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> [</span><br><span class="line">	<span class="comment">// 默认发送邮件驱动</span></span><br><span class="line">	<span class="string">'driver'</span> =&gt; env(<span class="string">'MAIL_DRIVER'</span>, <span class="string">'smtp'</span>),</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 发送邮件主机地址</span></span><br><span class="line">    <span class="string">'host'</span> =&gt; env(<span class="string">'MAIL_HOST'</span>, <span class="string">'smtp.mailgun.org'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送邮件主机端口</span></span><br><span class="line">    <span class="string">'port'</span> =&gt; env(<span class="string">'MAIL_PORT'</span>, <span class="number">587</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定发送邮件的邮箱地址和用户名称</span></span><br><span class="line">    <span class="string">'from'</span> =&gt; [<span class="string">'address'</span> =&gt; <span class="keyword">null</span>, <span class="string">'name'</span> =&gt; <span class="keyword">null</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定发送邮件协议</span></span><br><span class="line">    <span class="string">'encryption'</span> =&gt; env(<span class="string">'MAIL_ENCRYPTION'</span>, <span class="string">'tls'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 邮箱登录账号</span></span><br><span class="line">    <span class="string">'username'</span> =&gt; env(<span class="string">'MAIL_USERNAME'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 邮箱登录密码</span></span><br><span class="line">    <span class="string">'password'</span> =&gt; env(<span class="string">'MAIL_PASSWORD'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当驱动为 sendmail 时，指定驱动的命令地址</span></span><br><span class="line">    <span class="string">'sendmail'</span> =&gt; <span class="string">'/usr/sbin/sendmail -bs'</span>,</span><br><span class="line"></span><br><span class="line">	<span class="comment">// false 发送邮件不记录日志，true 记录日志不发送邮件</span></span><br><span class="line">    <span class="string">'pretend'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<h2 id="编写发送文字邮件程序"><a class="header-anchor" href="#编写发送文字邮件程序"></a>编写发送文字邮件程序</h2>
<h3 id="env"><a class="header-anchor" href="#env"></a>env</h3>
<p>本文采用 QQ 邮箱进行测试，首先修改邮箱配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MAIL_DRIVER=smtp</span><br><span class="line">MAIL_HOST=smtp.qq.com</span><br><span class="line">MAIL_PORT=465</span><br><span class="line">MAIL_USERNAME=（填写 QQ 邮箱账号）</span><br><span class="line">MAIL_PASSWORD=（填写 QQ 邮箱密码）</span><br><span class="line">MAIL_ENCRYPTION=ssl</span><br></pre></td></tr></table></figure>
<h3 id="路由"><a class="header-anchor" href="#路由"></a>路由</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/* 发送文字邮件 */</span><br><span class="line">Route::get(&apos;email/send/&#123;id&#125;&apos;, [</span><br><span class="line">    &apos;as&apos;   =&gt; &apos;backend.email.send&apos;,</span><br><span class="line">    &apos;uses&apos; =&gt; &apos;EmailController@send&apos;,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<h3 id="控制器"><a class="header-anchor" href="#控制器"></a>控制器</h3>
<p>新增控制器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:controller Backend/EmailController --plain</span><br></pre></td></tr></table></figure>
<p>控制器代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Controllers\Backend;</span><br><span class="line"></span><br><span class="line">use App\Facades\UserRepository;</span><br><span class="line">use Illuminate\Http\Request;</span><br><span class="line"></span><br><span class="line">use App\Http\Requests;</span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line"></span><br><span class="line">use Mail;</span><br><span class="line"></span><br><span class="line">class EmailController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function send(Request $request, $id)</span><br><span class="line">    &#123;</span><br><span class="line">        $user = UserRepository::find($id);</span><br><span class="line"></span><br><span class="line">        Mail::send(&apos;emails.test&apos;, [&apos;user&apos; =&gt; $user], function ($email) use ($user) &#123;</span><br><span class="line">            $email-&gt;to(&apos;2794408425@qq.com&apos;)-&gt;subject(&apos;Hello World&apos;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="视图"><a class="header-anchor" href="#视图"></a>视图</h3>
<p>新增视图<code>emails/test.blade.php</code>，代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    	你好,&#123;&#123;$user-&gt;name&#125;&#125;,这是一封测试邮件。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="执行代码"><a class="header-anchor" href="#执行代码"></a>执行代码</h3>
<p>在浏览器访问指定路由，然后去邮箱查看邮件是否发送成功。<br>
<img src="http://o93kt6djh.bkt.clouddn.com/Laravel-SendEmail%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-08-09%2009.49.12.png" alt="发送文字邮件"></p>
<h2 id="编写发送图文邮件程序"><a class="header-anchor" href="#编写发送图文邮件程序"></a>编写发送图文邮件程序</h2>
<h3 id="路由"><a class="header-anchor" href="#路由"></a>路由</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">'email/sendPicture/&#123;id&#125;'</span>, [</span><br><span class="line">    <span class="string">'as'</span>   =&gt; <span class="string">'backend.email.sendPicture'</span>,</span><br><span class="line">    <span class="string">'uses'</span> =&gt; <span class="string">'EmailController@sendPicture'</span>,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<h3 id="控制器"><a class="header-anchor" href="#控制器"></a>控制器</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function sendPicture(Request $request, $id)</span><br><span class="line">&#123;</span><br><span class="line">    $user = UserRepository::find($id);</span><br><span class="line">    $icon = &quot;http://o93kt6djh.bkt.clouddn.com/Laravel-SendEmaillaravel-200x50.png&quot;;</span><br><span class="line">    $image = &quot;http://o93kt6djh.bkt.clouddn.com/Laravel-SendEmaillaravel-600x300.jpg&quot;;</span><br><span class="line"></span><br><span class="line">    Mail::send(&apos;emails.image&apos;, [&apos;name&apos; =&gt; $user-&gt;name, &apos;icon&apos; =&gt; $icon, &apos;image&apos; =&gt; $image], function ($email) &#123;</span><br><span class="line">        $someOne = &apos;2794408425@qq.com&apos;;</span><br><span class="line">        $email-&gt;to($someOne)-&gt;subject(&apos;图文邮件标题&apos;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    echo &quot;已发送邮件,请注意查收&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="视图"><a class="header-anchor" href="#视图"></a>视图</h3>
<p>新增视图<code>emails/image.blade.php</code>，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br><span class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;/&gt;</span><br><span class="line">    &lt;title&gt;CowCat Email Test&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        * &#123;</span><br><span class="line">            font-family: &quot;Helvetica Neue&quot;, &quot;Helvetica&quot;, Helvetica, Arial, sans-serif;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        img &#123;</span><br><span class="line">            max-width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .collapse &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body &#123;</span><br><span class="line">            -webkit-font-smoothing: antialiased;</span><br><span class="line">            -webkit-text-size-adjust: none;</span><br><span class="line">            width: 100% !important;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* -------------------------------------</span><br><span class="line">                ELEMENTS</span><br><span class="line">        ------------------------------------- */</span><br><span class="line">        a &#123;</span><br><span class="line">            color: #2BA6CB;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .btn &#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            color: #FFF;</span><br><span class="line">            background-color: #666;</span><br><span class="line">            padding: 10px 16px;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">            margin-right: 10px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p.callout &#123;</span><br><span class="line">            padding: 15px;</span><br><span class="line">            background-color: #ECF8FF;</span><br><span class="line">            margin-bottom: 15px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .callout a &#123;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">            color: #2BA6CB;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        table.social &#123;</span><br><span class="line">            /*  padding:15px; */</span><br><span class="line">            background-color: #ebebeb;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .social .soc-btn &#123;</span><br><span class="line">            padding: 3px 7px;</span><br><span class="line">            font-size: 12px;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            color: #FFF;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">            display: block;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a.fb &#123;</span><br><span class="line">            background-color: #3B5998 !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a.tw &#123;</span><br><span class="line">            background-color: #1daced !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a.gp &#123;</span><br><span class="line">            background-color: #DB4A39 !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a.ms &#123;</span><br><span class="line">            background-color: #000 !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .sidebar .soc-btn &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* -------------------------------------</span><br><span class="line">                HEADER</span><br><span class="line">        ------------------------------------- */</span><br><span class="line">        table.head-wrap &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .header.container table td.logo &#123;</span><br><span class="line">            padding: 15px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .header.container table td.label &#123;</span><br><span class="line">            padding: 15px;</span><br><span class="line">            padding-left: 0px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* -------------------------------------</span><br><span class="line">                BODY</span><br><span class="line">        ------------------------------------- */</span><br><span class="line">        table.body-wrap &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* -------------------------------------</span><br><span class="line">                FOOTER</span><br><span class="line">        ------------------------------------- */</span><br><span class="line">        table.footer-wrap &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            clear: both !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .footer-wrap .container td.content p &#123;</span><br><span class="line">            border-top: 1px solid rgb(215, 215, 215);</span><br><span class="line">            padding-top: 15px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .footer-wrap .container td.content p &#123;</span><br><span class="line">            font-size: 10px;</span><br><span class="line">            font-weight: bold;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* -------------------------------------</span><br><span class="line">                TYPOGRAPHY</span><br><span class="line">        ------------------------------------- */</span><br><span class="line">        h1, h2, h3, h4, h5, h6 &#123;</span><br><span class="line">            font-family: &quot;HelveticaNeue-Light&quot;, &quot;Helvetica Neue Light&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Lucida Grande&quot;, sans-serif;</span><br><span class="line">            line-height: 1.1;</span><br><span class="line">            margin-bottom: 15px;</span><br><span class="line">            color: #000;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h1 small, h2 small, h3 small, h4 small, h5 small, h6 small &#123;</span><br><span class="line">            font-size: 60%;</span><br><span class="line">            color: #6f6f6f;</span><br><span class="line">            line-height: 0;</span><br><span class="line">            text-transform: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h1 &#123;</span><br><span class="line">            font-weight: 200;</span><br><span class="line">            font-size: 44px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h2 &#123;</span><br><span class="line">            font-weight: 200;</span><br><span class="line">            font-size: 37px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h3 &#123;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">            font-size: 27px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h4 &#123;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">            font-size: 23px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h5 &#123;</span><br><span class="line">            font-weight: 900;</span><br><span class="line">            font-size: 17px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h6 &#123;</span><br><span class="line">            font-weight: 900;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            text-transform: uppercase;</span><br><span class="line">            color: #444;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .collapse &#123;</span><br><span class="line">            margin: 0 !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p, ul &#123;</span><br><span class="line">            margin-bottom: 10px;</span><br><span class="line">            font-weight: normal;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            line-height: 1.6;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p.lead &#123;</span><br><span class="line">            font-size: 17px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p.last &#123;</span><br><span class="line">            margin-bottom: 0px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul li &#123;</span><br><span class="line">            margin-left: 5px;</span><br><span class="line">            list-style-position: inside;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* -------------------------------------</span><br><span class="line">                SIDEBAR</span><br><span class="line">        ------------------------------------- */</span><br><span class="line">        ul.sidebar &#123;</span><br><span class="line">            background: #ebebeb;</span><br><span class="line">            display: block;</span><br><span class="line">            list-style-type: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul.sidebar li &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            margin: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul.sidebar li a &#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            color: #666;</span><br><span class="line">            padding: 10px 16px;</span><br><span class="line">            /*  font-weight:bold; */</span><br><span class="line">            margin-right: 10px;</span><br><span class="line">            /*  text-align:center; */</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            border-bottom: 1px solid #777777;</span><br><span class="line">            border-top: 1px solid #FFFFFF;</span><br><span class="line">            display: block;</span><br><span class="line">            margin: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul.sidebar li a.last &#123;</span><br><span class="line">            border-bottom-width: 0px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul.sidebar li a h1, ul.sidebar li a h2, ul.sidebar li a h3, ul.sidebar li a h4, ul.sidebar li a h5, ul.sidebar li a h6, ul.sidebar li a p &#123;</span><br><span class="line">            margin-bottom: 0 !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* ---------------------------------------------------</span><br><span class="line">                RESPONSIVENESS</span><br><span class="line">                Nuke it from orbit. It&apos;s the only way to be sure.</span><br><span class="line">        ------------------------------------------------------ */</span><br><span class="line"></span><br><span class="line">        /* Set a max-width, and make it display as block so it will automatically stretch to that width, but will also shrink down on a phone or something */</span><br><span class="line">        .container &#123;</span><br><span class="line">            display: block !important;</span><br><span class="line">            max-width: 600px !important;</span><br><span class="line">            margin: 0 auto !important; /* makes it centered */</span><br><span class="line">            clear: both !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* This should also be a block element, so that it will fill 100% of the .container */</span><br><span class="line">        .content &#123;</span><br><span class="line">            padding: 15px;</span><br><span class="line">            max-width: 600px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* Let&apos;s make sure tables in the content area are 100% wide */</span><br><span class="line">        .content table &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* Odds and ends */</span><br><span class="line">        .column &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .column tr td &#123;</span><br><span class="line">            padding: 15px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .column-wrap &#123;</span><br><span class="line">            padding: 0 !important;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            max-width: 600px !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .column table &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .social .column &#123;</span><br><span class="line">            width: 280px;</span><br><span class="line">            min-width: 279px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* Be sure to place a .clear element after each set of columns, just to be safe */</span><br><span class="line">        .clear &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            clear: both;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* -------------------------------------------</span><br><span class="line">                PHONE</span><br><span class="line">                For clients that support media queries.</span><br><span class="line">                Nothing fancy.</span><br><span class="line">        -------------------------------------------- */</span><br><span class="line">        @media only screen and (max-width: 600px) &#123;</span><br><span class="line"></span><br><span class="line">            a[class=&quot;btn&quot;] &#123;</span><br><span class="line">                display: block !important;</span><br><span class="line">                margin-bottom: 10px !important;</span><br><span class="line">                background-image: none !important;</span><br><span class="line">                margin-right: 0 !important;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            div[class=&quot;column&quot;] &#123;</span><br><span class="line">                width: auto !important;</span><br><span class="line">                float: none !important;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            table.social div[class=&quot;column&quot;] &#123;</span><br><span class="line">                width: auto !important;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body bgcolor=&quot;#FFFFFF&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- HEADER --&gt;</span><br><span class="line">&lt;table class=&quot;head-wrap&quot; bgcolor=&quot;#999999&quot;&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;header container&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                &lt;table bgcolor=&quot;#999999&quot;&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;td&gt;&lt;img src=&quot;&#123;&#123;$icon&#125;&#125;&quot;/&gt;&lt;/td&gt;</span><br><span class="line">                        &lt;td align=&quot;right&quot;&gt;&lt;h6 class=&quot;collapse&quot;&gt;Test&lt;/h6&gt;&lt;/td&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                &lt;/table&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;&lt;!-- /HEADER --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- BODY --&gt;</span><br><span class="line">&lt;table class=&quot;body-wrap&quot;&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;container&quot; bgcolor=&quot;#FFFFFF&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                &lt;table&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;td&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;h3&gt;Welcome, &#123;&#123;$name&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                            &lt;p class=&quot;lead&quot;&gt;This is a Test Email of the CowCat&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;!-- A Real Hero (and a real human being) --&gt;</span><br><span class="line">                            &lt;p&gt;&lt;img src=&quot;&#123;&#123;$image&#125;&#125;&quot;/&gt;&lt;/p&gt;&lt;!-- /hero --&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;!-- Callout Panel --&gt;</span><br><span class="line">                            &lt;p class=&quot;callout&quot;&gt;</span><br><span class="line">                                Laravel is the best PHP Framework</span><br><span class="line">                                &lt;a href=&quot;http://laravel-china.org/docs/5.1&quot;&gt;Learn it Now! &amp;raquo;&lt;/a&gt;</span><br><span class="line">                            &lt;/p&gt;&lt;!-- /Callout Panel --&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;h3&gt;Hello</span><br><span class="line">                                &lt;small&gt;World&lt;/small&gt;</span><br><span class="line">                            &lt;/h3&gt;</span><br><span class="line">                            &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor</span><br><span class="line">                                incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud</span><br><span class="line">                                exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure</span><br><span class="line">                                dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span><br><span class="line">                                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt</span><br><span class="line">                                mollit anim id est laborum.&lt;/p&gt;</span><br><span class="line">                            &lt;a class=&quot;btn&quot;&gt;Click Me!&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;br/&gt;</span><br><span class="line">                            &lt;br/&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;!-- social &amp; contact --&gt;</span><br><span class="line">                            &lt;table class=&quot;social&quot; width=&quot;100%&quot;&gt;</span><br><span class="line">                                &lt;tr&gt;</span><br><span class="line">                                    &lt;td&gt;</span><br><span class="line"></span><br><span class="line">                                        &lt;!--- column 1 --&gt;</span><br><span class="line">                                        &lt;table align=&quot;left&quot; class=&quot;column&quot;&gt;</span><br><span class="line">                                            &lt;tr&gt;</span><br><span class="line">                                                &lt;td&gt;</span><br><span class="line"></span><br><span class="line">                                                    &lt;h5 class=&quot;&quot;&gt;Connect with Us:&lt;/h5&gt;</span><br><span class="line">                                                    &lt;p class=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;soc-btn fb&quot;&gt;Facebook&lt;/a&gt;</span><br><span class="line">                                                        &lt;a href=&quot;#&quot; class=&quot;soc-btn tw&quot;&gt;Twitter&lt;/a&gt;</span><br><span class="line">                                                        &lt;a href=&quot;#&quot; class=&quot;soc-btn gp&quot;&gt;Google+&lt;/a&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                                &lt;/td&gt;</span><br><span class="line">                                            &lt;/tr&gt;</span><br><span class="line">                                        &lt;/table&gt;&lt;!-- /column 1 --&gt;</span><br><span class="line"></span><br><span class="line">                                        &lt;!--- column 2 --&gt;</span><br><span class="line">                                        &lt;table align=&quot;left&quot; class=&quot;column&quot;&gt;</span><br><span class="line">                                            &lt;tr&gt;</span><br><span class="line">                                                &lt;td&gt;</span><br><span class="line"></span><br><span class="line">                                                    &lt;h5 class=&quot;&quot;&gt;Contact Info:&lt;/h5&gt;</span><br><span class="line">                                                    &lt;p&gt;Phone: &lt;strong&gt;408.341.0600&lt;/strong&gt;&lt;br/&gt;</span><br><span class="line">                                                        Email:</span><br><span class="line">                                                        &lt;strong&gt;&lt;a href=&quot;emailto:hseldon@trantor.com&quot;&gt;hseldon@trantor</span><br><span class="line">                                                                .com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">                                                &lt;/td&gt;</span><br><span class="line">                                            &lt;/tr&gt;</span><br><span class="line">                                        &lt;/table&gt;&lt;!-- /column 2 --&gt;</span><br><span class="line"></span><br><span class="line">                                        &lt;span class=&quot;clear&quot;&gt;&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">                                    &lt;/td&gt;</span><br><span class="line">                                &lt;/tr&gt;</span><br><span class="line">                            &lt;/table&gt;&lt;!-- /social &amp; contact --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        &lt;/td&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                &lt;/table&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;&lt;!-- /BODY --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- FOOTER --&gt;</span><br><span class="line">&lt;table class=&quot;footer-wrap&quot;&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;container&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- content --&gt;</span><br><span class="line">            &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                &lt;table&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;td align=&quot;center&quot;&gt;</span><br><span class="line">                            &lt;p&gt;</span><br><span class="line">                                &lt;a href=&quot;#&quot;&gt;Terms&lt;/a&gt; |</span><br><span class="line">                                &lt;a href=&quot;#&quot;&gt;Privacy&lt;/a&gt; |</span><br><span class="line">                                &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                                    &lt;unsubscribe&gt;Unsubscribe&lt;/unsubscribe&gt;</span><br><span class="line">                                &lt;/a&gt;</span><br><span class="line">                            &lt;/p&gt;</span><br><span class="line">                        &lt;/td&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                &lt;/table&gt;</span><br><span class="line">            &lt;/div&gt;&lt;!-- /content --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;&lt;!-- /FOOTER --&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h3 id="执行代码"><a class="header-anchor" href="#执行代码"></a>执行代码</h3>
<p>在浏览器访问指定路由，然后去邮箱查看邮件是否发送成功。<br>
<img src="http://o93kt6djh.bkt.clouddn.com/Laravel-SendEmail%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-08-09%2016.46.51.png" alt="发送图文邮件"></p>
<h2 id="编写发送附件邮件程序"><a class="header-anchor" href="#编写发送附件邮件程序"></a>编写发送附件邮件程序</h2>
<h2 id="路由"><a class="header-anchor" href="#路由"></a>路由</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Route::get(&apos;email/sendFile/&#123;id&#125;&apos;, [</span><br><span class="line">    &apos;as&apos;   =&gt; &apos;backend.email.sendFile&apos;,</span><br><span class="line">    &apos;uses&apos; =&gt; &apos;EmailController@sendFile&apos;,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<h2 id="控制器"><a class="header-anchor" href="#控制器"></a>控制器</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function sendFile(Request $request, $id)</span><br><span class="line">&#123;</span><br><span class="line">    $user = UserRepository::find($id);</span><br><span class="line">    $icon = &quot;http://o93kt6djh.bkt.clouddn.com/Laravel-SendEmaillaravel-200x50.png&quot;;</span><br><span class="line"></span><br><span class="line">    Mail::send(&apos;emails.test-file&apos;, [&apos;name&apos; =&gt; $user-&gt;name, &apos;icon&apos; =&gt; $icon], function ($message) &#123;</span><br><span class="line">        $someOne = &quot;2794408425@qq.com&quot;;</span><br><span class="line">        $file = storage_path(&quot;app/PHP7介绍和应用实践.pdf&quot;);</span><br><span class="line">        $message-&gt;to($someOne)-&gt;subject(&quot;附件邮件标题&quot;);</span><br><span class="line">        $message-&gt;attach($file, [&apos;as&apos; =&gt; &apos;PHP7 Introduction and Application Action.pdf&apos;, &apos;mime&apos; =&gt; &apos;application/pdf&apos;]);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    echo &apos;已发送邮件,请注意查收&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="视图"><a class="header-anchor" href="#视图"></a>视图</h2>
<p>新增视图<code>emails/test-file.blade.php</code>，代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            你好,&#123;&#123;$name&#125;&#125;,这是一封测试邮件。</span><br><span class="line">            下面将会显示一张原始数据图片</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;$message-&gt;embed($icon)&#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"原始数据图片"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="执行代码"><a class="header-anchor" href="#执行代码"></a>执行代码</h2>
<p>在浏览器访问指定路由，然后去邮箱查看邮件是否发送成功。<br>
<img src="http://o93kt6djh.bkt.clouddn.com/Laravel-SendEmail%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-08-10%2013.40.54.png" alt="发送附件邮件"></p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 PHPStorm 与 Xdebug 调试 Laravel (二)</title>
    <url>/2016/06/27/%E4%BD%BF%E7%94%A8-PHPStorm-%E4%B8%8E-Xdebug-%E8%B0%83%E8%AF%95-Laravel-%E4%BA%8C/</url>
    <content><![CDATA[<p>本文的目的学会使用除了 <code>var_dump，echo，printf</code> 的调试方法</p>
<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>系统版本：OSX 10.11.4</li>
<li>PHP 版本：7.0.5</li>
<li>Xdebug 版本：2.4.0</li>
<li>Laravel 版本：5.1.31</li>
<li>PHPStorm 版本：10.0.4</li>
</ul>
<p>根据上篇文章的配置，在工作时会发现，我们需要经常调整 <code>PHP Web Application</code> 的 URL 进行 Debug。</p>
<p>举个例子，假如想要 <code>Debug</code> 菜单列表，我需要修改成 <code>/menu/</code>，如果想要 <code>Debug</code> 新增菜单页面，我需要修改成 <code>/menu/create</code>。<br>
<img src="http://o93kt6djh.bkt.clouddn.com/2-phpstorm-debug-web-applicationPHP%20Web%20Application.png" alt><br>
这样进行 <code>Debug</code> 的过程十分烦琐，所以需要更加友好的操作方式，以便加快工作效率。</p>
<h2 id="phpstorm-配置"><a class="header-anchor" href="#phpstorm-配置"></a>PHPStorm 配置</h2>
<p>打开 PHPStorm，打开配置面板<br>
<code>Preferences =&gt; Language &amp; Frameworks -&gt; PHP -&gt; Debug</code>。</p>
<p>点击蓝色链接 <code>Use debugger bookmarklets to initiate debugging from your favorite browser</code>。<br>
<img src="http://o93kt6djh.bkt.clouddn.com/2-phpstorm-debug-web-applicationPHP%20Debug%20Configuration.png" alt></p>
<p>点击页面左下角的蓝色按钮，生成 PHPStorm Debug 的专属书签。<br>
<img src="http://o93kt6djh.bkt.clouddn.com/2-phpstorm-debug-web-applicationPHPStorm%20Debug%20Config.png" alt></p>
<p>然后将生成好的 <code>DEBUG</code> 书签<code>Start debugger</code>、<code>Stop debugger</code>、<code>Debug this page</code> 拖动保存到浏览器的书签栏中，方便随时进行 <code>Debug</code>。<br>
<img src="http://o93kt6djh.bkt.clouddn.com/2-phpstorm-debug-web-applicationBookMark.png" alt></p>
<p>监听浏览器的 <code>Debug</code> 操作，<code>Run -&gt; Start Listening for PHP Debug Connections</code></p>
<p><img src="http://o93kt6djh.bkt.clouddn.com/2-phpstorm-debug-web-applicationListening%20PHP%20Debug.png" alt></p>
<p>然后在浏览器输入想要进行 <code>Debug</code> 的页面，然后点击书签栏的 <code>Start debugger</code>，刷新页面，就能在 <code>PHPStorm</code> 里面看见 <code>Debug</code> 的控制台了。<br>
<img src="http://o93kt6djh.bkt.clouddn.com/2-phpstorm-debug-web-applicationDebug%20Page2.png" alt><br>
<img src="http://o93kt6djh.bkt.clouddn.com/2-phpstorm-debug-web-applicationDebug%20Page.png" alt></p>
<p>PHPStorm 的 Debug 方式不仅仅局限于 Laravel 框架，同样适用于 ThinkPHP 与其他框架，也适用于原生的 PHP 代码。<br>
学会使用这种方式之后，一般很少使用 <code>echo</code>，<code>var_dump</code>，<code>dd()</code>，<code>dump()</code>等原生或框架辅助函数进行 <code>Debug</code> 了。</p>
]]></content>
      <categories>
        <category>Tooling</category>
      </categories>
      <tags>
        <tag>PHPStorm</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 PHPStorm 与 Xdebug 调试 Laravel (一)</title>
    <url>/2016/06/20/%E4%BD%BF%E7%94%A8-PHPStorm-%E4%B8%8E-Xdebug-%E8%B0%83%E8%AF%95-Laravel-%E4%B8%80/</url>
    <content><![CDATA[<p>本文的目的学会使用除了 <code>var_dump，echo，printf</code> 的调试方法</p>
<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>系统版本：OSX 10.11.4</li>
<li>PHP 版本：7.0.5</li>
<li>Xdebug 版本：2.4.0</li>
<li>Laravel 版本：5.1.31</li>
<li>PHPStorm 版本：10.0.4</li>
</ul>
<h2 id="xdebug-配置"><a class="header-anchor" href="#xdebug-配置"></a>Xdebug 配置</h2>
<p>本机的 Xdebug 配置文件位于 <code>/usr/local/etc/php/7.0/conf.d/ext-xdebug.ini</code></p>
<p>打开文件添加并以下代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">[xdebug]</span><br><span class="line">zend_extension=<span class="string">"/usr/local/Cellar/php70-xdebug/2.4.0/xdebug.so"</span></span><br><span class="line">xdebug.idekey=PHPSTORM</span><br><span class="line">xdebug.remote_enable=<span class="number">1</span></span><br><span class="line">xdebug.remote_host=localhost</span><br><span class="line">xdebug.remote_port=<span class="number">10000</span></span><br><span class="line">xdebug.profiler_enable=<span class="number">1</span></span><br><span class="line">xdebug.profiler_output_dir=<span class="string">"/Users/LuisEdware/Downloads/Xdebug"</span></span><br></pre></td></tr></table></figure>
<h2 id="phpstorm-配置"><a class="header-anchor" href="#phpstorm-配置"></a>PHPStorm 配置</h2>
<p>打开 PHPStorm，首先配置 PHP 的使用版本与 Interpreter<br>
<code>Preferences =&gt; Language &amp; Frameworks -&gt; PHP</code><br>
<img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-application%E8%AE%BE%E7%BD%AE%20PHP%20%E7%89%88%E6%9C%AC.png" alt="配置 PHP 的使用版本" title="PHP 版本.png"></p>
<ul>
<li>PHP language level ：选择 PHP 的使用版本</li>
<li>Interpreter : 配置 PHP 可执行文件的位置</li>
</ul>
<p><img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-application%E8%AE%BE%E7%BD%AE%20Interpreter.png" alt="配置 PHP 可执行文件的位置" title="Interpreter.png"></p>
<ul>
<li>Name : 命名</li>
<li>PHP executable : PHP 可执行文件位置，本机使用 Homebrew 安装的 PHP，位置在<code>/usr/local/Cellar/php70/7.0.5/bin/php</code></li>
</ul>
<p>然后配置 PHP Debug 时的端口，将端口 <code>9000</code> 修改成 <code>10000</code><br>
<img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-application%E8%AE%BE%E7%BD%AE%20Xdebug.png" alt="配置 Debug 端口" title="Xdebug.png"></p>
<p>接着修改 <code>Run =&gt; Edit configurations</code>，点击弹出窗口左上角加号，新增一个 <code>PHP Web Application</code><br>
<img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-applicationRun%20Debug.png" alt="Run =&gt; Edit configurations" title="Run Debug.png"><br>
<img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-application%E6%96%B0%E5%BB%BA%20Web%20Application.png" alt="PHP Web Application" title="Server.png"></p>
<ul>
<li>Name : 命名</li>
<li>Server : 服务器，没有跟着下图创建</li>
<li>Start URL : 要开始 Debug 的 URL</li>
</ul>
<p>跟随着选项新增一个 <code>Server</code><br>
<img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-application%E6%96%B0%E5%BB%BA%20Server.png" alt="Server" title="Server.png"></p>
<ul>
<li>Name : 命名</li>
<li>Host : 主机，我在本地将需要 Debug 的项目映射到 <code>cowcat.app</code> 上</li>
<li>Port : 端口</li>
<li>Debugger : 除了 Xdebug 还有 Zend Debugger，选择 Xdebug</li>
</ul>
<p>设置断点，运行<code>Run =&gt; Debug 'Cowcat'</code><br>
<img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-application%E8%AE%BE%E7%BD%AE%E6%96%AD%E7%82%B9.png" alt="设置断点" title="Server.png"><br>
<img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-applicationRun%20Debug%20Cowcat.png" alt="Debug Cowcat" title="Server.png"></p>
<p>当浏览器运行指定 URL（就是 PHP Web Application 配置时的 Start URL） 时，出现 Xdebug 控制台，根据控制台的信息和操作进行 Debug<br>
<img src="http://o93kt6djh.bkt.clouddn.com/phpstorm-debug-web-applicationDebugger%20Console.png" alt="Xdebug 控制台" title="Server.png"></p>
<p>控制台的功能介绍如下：</p>
<ul>
<li>左侧绿色三角形 ： <code>Resume Program</code>，表示將继续执行，直到下一个中断点停止。</li>
<li>左侧红色方形 ： <code>Stop</code>，表示中断当前程序调试。</li>
<li>上方第一个图形示 ： <code>Step Over</code>，跳过当前函数。</li>
<li>上方第二个图形示 ： <code>Step Into</code>，进入当前函数內部的程序（相当于观察程序一步一步执行）。</li>
<li>上方第三个图形示 ： <code>Force Step Into</code>，強制进入当前函数內部的程序。</li>
<li>上方第四个图形示 ： <code>Step Out</code>，跳出当前函数內部的程式。</li>
<li>上方第五个图形示 ： <code>Run to Cursor</code>，定位到当前光标。</li>
<li>Variables ： 可以观察到所有全局变量、当前局部变量的数值</li>
<li>Watches ： 可以新增变量，观察变量随着程序执行的变化。</li>
</ul>
]]></content>
      <categories>
        <category>Tooling</category>
      </categories>
      <tags>
        <tag>PHPStorm</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP Web Application 运行流程、概念术语、机制原理和代码实践</title>
    <url>/2016/06/10/PHP%20Web%20Application%20%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B%E3%80%81%E6%A6%82%E5%BF%B5%E6%9C%AF%E8%AF%AD%E3%80%81%E6%9C%BA%E5%88%B6%E5%8E%9F%E7%90%86%E5%92%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>本文的目的在于了解 PHP 处理 HTTP 请求的过程</p>
<h2 id="运行流程"><a class="header-anchor" href="#运行流程"></a>运行流程</h2>
<ol>
<li>客户端做出请求操作（输入网址、点击链接、提交表单）。</li>
<li>向客户端设定的 DNS 服务器请求 IP 地址。</li>
<li>客户端根据 DNS 服务器返回 IP 地址采用三次握手与服务端建立 TCP 连接。</li>
<li>TCP 连接成功后，客户端向服务端发送 HTTP 请求。</li>
<li>服务端的 Web Server 会判断 HTTP 请求的资源类型，进行内容分发处理；如果请求的资源为 PHP 文件，服务端软件会启动对应的 CGI 程序进行处理，并返回处理结果。</li>
<li>服务端将 Web Server 的处理结果响应给客户端</li>
<li>客户端接收服务端的响应，并渲染处理结果，呈现出来并断开 TCP 连接。</li>
</ol>
<h2 id="概念术语"><a class="header-anchor" href="#概念术语"></a>概念术语</h2>
<p>1.<strong>客户端</strong></p>
<p>客户端，是指与服务端相对应，为客户提供本地服务的程序。一般安装在普通的用户机上，需要与服务端互相配合运行。Web Application 的客户端一般是浏览器。</p>
<p>2.<strong>服务端</strong></p>
<p>服务端是为客户端服务的，服务的内容诸如向客户端提供资源，保存客户端数据。</p>
<p>3.<strong>三次握手</strong></p>
<p>三次握手，又名询问握手协议，是一个用来验证用户或网络提供者的协议。</p>
<p>4.<strong>CGI</strong></p>
<p>CGI 全称是 Common Gateway Interface，CGI 是外部应用程序与 Web Server 之间的接口标准，是在 CGI 程序和 Web 服务器之间传递信息的规程。CGI 规范允许 Web Server 执行外部程序，并将它们的输出发送给Web浏览器。</p>
<p>5.<strong>DNS</strong></p>
<p>DNS 全称是 Domain Name System，译为域名系统。它可以将域名和 IP 地址互相映射，能够让用户使用域名就可以访问互联网服务。</p>
<p>6.<strong>HTTP</strong></p>
<p>HTTP 全称是 HyperText Transfer Protocol，译为超文本传输协议，是一种网络协议。</p>
<p>7.<strong>Web Server</strong></p>
<p>通常指 Apache、Nginx 等服务器软件</p>
<p>##机制原理</p>
<p>首先从 HTTP 协议开始谈起，HTTP 协议工作流程是客户端发送一个请求给服务端，服务端在接收到这个请求后将产生一个响应返回给客户端。那么 HTTP 请求和 HTTP 响应是什么？</p>
<h3 id="http-请求"><a class="header-anchor" href="#http-请求"></a>HTTP 请求</h3>
<p>当客户端向服务端发出请求时，它向服务端传递一个数据块，即请求信息，HTTP 请求信息由三部分组成：</p>
<ul>
<li><strong>请求行</strong></li>
<li><strong>请求报头</strong></li>
<li><strong>请求正文</strong></li>
</ul>
<h3 id="请求行"><a class="header-anchor" href="#请求行"></a>请求行</h3>
<p>请求行以一个方法符号开头，以空格分开，后面跟着请求的 URI 和协议的版本，格式如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Request Method - URI HTTP-Version CRLF</span><br></pre></td></tr></table></figure>
<p>上述格式中各参数说明如下：</p>
<ul>
<li><strong>Method</strong>：请求方法，请求方法有多种
<ul>
<li>PUT</li>
<li>GET</li>
<li>POST</li>
<li>HEAD</li>
<li>TRACE</li>
<li>DELETE</li>
<li>OPTIONS</li>
<li>CONNECT</li>
</ul>
</li>
<li><strong>Request-URI</strong>：一个统一资源标识符</li>
<li><strong>HTTP-Version</strong>：请求的 HTTP 协议版本。</li>
<li><strong>CRLF</strong>：回车和换行</li>
</ul>
<h3 id="请求报头"><a class="header-anchor" href="#请求报头"></a>请求报头</h3>
<p>请求报头属于 HTTP 消息报头之一，请求报头允许客户端向服务端传递请求的附加信息以及客户端自身的信息。<br>
每个报头域组成形式如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">名字 + : + 空格 + 值</span><br></pre></td></tr></table></figure>
<p>比较重要的几个报头如下：</p>
<ul>
<li><strong>Host</strong>：头域指定请求资源的 Internet 主机和端口号，必须表示请求 URL 的原始服务器或者网关的位置。</li>
<li><strong>Accept</strong>：告诉服务器可以接受的文件格式。</li>
<li><strong>Cookie</strong>：Cookie 份两种，一种是客户端向服务器发送的，使用 Cookie 报头，用来标记一些信息；另一种是服务器发送给浏览器的，报头为 Set-Cookie。</li>
<li><strong>Referer</strong>：头域允许客户端指定请求 URI 的源资源地址，这可以允许服务器生成回退链表，可用来登录、优化缓存等。</li>
<li><strong>User-Agent</strong>：UA 包含发出请求的用户信息。通常 User-Agent 包含浏览者的信息，主要是浏览器的名称版本和所用的操作系统。</li>
<li><strong>Connection</strong>：表示是否需要持久连接。</li>
<li><strong>Cache-Control</strong>：指定请求和响应遵循的缓存机制</li>
<li><strong>Content-Range</strong>：响应的资源范围。可以在每次请求中标记请求的资源范围，在连接断开重连时，客户端只请求重连时，客户端只请求该资源未下载的部分，而不是重新请求整个资源。</li>
<li><strong>Content-Length</strong>：内容长度</li>
<li><strong>Accept-Encoding</strong>：指定所能接受的编码方式。通常服务器会对页面进行 GZIP 压缩后再输出以减少流量。一般浏览器均支持对这种压缩后的数据进行处理。</li>
</ul>
<h3 id="请求正文"><a class="header-anchor" href="#请求正文"></a>请求正文</h3>
<p>请求头和请求正文之间的一个空行表示请求头已经结束了。请求正文中可以包含提交的查询字符串信息。GET 方式没有请求正文。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username=admin&amp;password=123456</span><br></pre></td></tr></table></figure>
<h3 id="http-请求示例"><a class="header-anchor" href="#http-请求示例"></a>HTTP 请求示例</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /menu HTTP/1.1</span><br><span class="line">Host: localhost:5000</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.84 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate, sdch</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6</span><br><span class="line">Cookie: cartalyst_sentry=luisedware#anneason</span><br></pre></td></tr></table></figure>
<h3 id="http-响应"><a class="header-anchor" href="#http-响应"></a>HTTP 响应</h3>
<p>服务端在接收和解释请求消息后，服务端会返回一个 HTTP 响应消息。HTTP 响应也由三个部分组成，分别是：</p>
<ul>
<li><strong>响应行</strong></li>
<li><strong>响应报头</strong></li>
<li><strong>响应正文</strong></li>
</ul>
<h3 id="响应行"><a class="header-anchor" href="#响应行"></a>响应行</h3>
<p>响应行格式如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTTP - Version Status  - Code Reason - Phrase CRLF</span><br></pre></td></tr></table></figure>
<p>上述格式中各参数说明如下：</p>
<ul>
<li><strong>HTTP - Version</strong>：服务端 HTTP 协议的版本。</li>
<li><strong>Status-Code</strong>：服务端发回的响应状态代码。
<ul>
<li>状态代码由三位数字组成，第一个数字定义了响应的类别，有五种可能取值：
<ul>
<li>1xx：提示信息 - 请求已接收，继续处理。</li>
<li>2xx：成功 - 请求已被成功接收、理解、接受。</li>
<li>3xx：重定向 - 要完成请求必须进行更进一步的操作。</li>
<li>4xx：客户端错误 - 请求有语法错误或请求无法实现。</li>
<li>5xx：服务端错误 - 服务器未能实现合法的请求。</li>
</ul>
</li>
<li>常见状态代码、状态描述和说明如下：
<ul>
<li>200 OK： 客户端请求成功</li>
<li>400 Bad Request：客户端请求有语法错误，不能被服务器所理解</li>
<li>401 Unauthorize：请求未经授权，这个状态代码必须和 WWW-Authenticate 报头域一起使用</li>
<li>403 Forbidden：服务器收到请求，但是拒绝提供服务。</li>
<li>404 Not Found：请求资源不存在，例如输入了错误的 URL</li>
<li>500 Internal Server Error：服务器发生了不可预期的错误。</li>
<li>503 Server Unavailable：服务器当前不能处理客户端的请求，一段时间后可能恢复正常</li>
</ul>
</li>
</ul>
</li>
<li><strong>Reason-Phrase</strong>：状态代码的文本描述。</li>
</ul>
<h3 id="响应报头"><a class="header-anchor" href="#响应报头"></a>响应报头</h3>
<p>响应报头属于 HTTP 消息报头之一，响应报头允许服务器传递不能放在响应行中的附加响应信息，以及关于服务器的信息和对 Request-URI 所标识的资源进行下一步的访问的信息（如 Location）</p>
<h3 id="响应正文"><a class="header-anchor" href="#响应正文"></a>响应正文</h3>
<p>响应正文就是服务端返回的资源内容，响应报头和正文之间也必须使用空行分隔。</p>
<h3 id="http-响应示例"><a class="header-anchor" href="#http-响应示例"></a>HTTP 响应示例</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">host: localhost:8000</span><br><span class="line">connection: close</span><br><span class="line">x-powered-by: PHP/7.0.5</span><br><span class="line">cache-control: no-cache</span><br><span class="line">date: Fri, 10 Jun 2016 09:29:07 GMT</span><br><span class="line">content-type: text/html; charset=UTF-8</span><br><span class="line">set-cookie: XSRF-TOKEN=eyJpdiI6IlwvKzBIXC9JNzN2YUtpNGNaNndyTG40dz09IiwidmFsdWUiOiJtZlBDOEFQSmNUdzkyMXNQV1NSN2hPVjVFK1FHXC8xVU9nVGMwWFdcL3Q4MWlzc1A0dnhvRlBQckw1YVNpV0hQSTdFODBOQ2FFanF6YVg1TlRiQUhleEtnPT0iLCJtYWMiOiI5ZGRkOWEyYzk3OWY2YzZhOTA5MmFiOTA5ZmFmZmRiNTYxMzA5MjQ4NDdjYjcyNzIzNThjMzAxNmRjNDkzN2UxIn0%3D; expires=Fri, 10-Jun-2016 11:29:07 GMT; Max-Age=7200; path=/</span><br><span class="line">set-cookie: laravel_session=eyJpdiI6ImdZWUZNOGFKTzV6YWpcL1lPRzRDTHdnPT0iLCJ2YWx1ZSI6IjFxRGRUOG5jRGVSdWJLXC9CMTl6MVJFdVlmaVpER04xb0piMWp3Q3JcL3dMZmR6b3UrU3lpb3FzQTR5QlpoTWxlOE92cmVCbW5iZGZwUUZ1a0d3ZjQrVUE9PSIsIm1hYyI6ImQ5N2M2MjVmYjcxNmE5YzgyY2IyZWJhODhiZTA0NGUxNTdlYmZhYjBkOGEzYzdiNTBiYmJjODE3MWJiOTA5NTIifQ%3D%3D; expires=Fri, 10-Jun-2016 11:29:07 GMT; Max-Age=7200; path=/; HttpOnly</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;HTTP响应示例&lt;title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">Hello World!</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h2 id="apache-php-nginx-fpm-php-的工作原理"><a class="header-anchor" href="#apache-php-nginx-fpm-php-的工作原理"></a>Apache + PHP/Nginx + FPM + PHP 的工作原理</h2>
<p>当服务端接收 HTTP 请求后，服务端的服务器软件，如Apache、Nginx则会根据配置处理 HTTP 请求进行分发处理。如果客户端请求的是 index.html 文件，那么 Web Server 会根据配置文件去对应目录下找到这个文件，然后让服务端发送给客户端，这样分发的是静态资源。如果客户端请求的是 index.php 文件，根据配置文件，Web Server 知道这个不是静态资源，需要去找 PHP 解析器来处理，那么 Web Server 会把这个请求简单处理，然后交给 PHP 解析器。</p>
<p>当 Web Server 收到 index.php 这个请求后，会启动对应的 CGI 程序，CGI 程序就是 PHP 的解析器了。PHP 解析器会解析 php.ini 文件，初始化执行环境，然后处理请求，再以 CGI 规定的格式返回处理结果，Web Server 再把结果返回给客户端。实现 PHP 解析器的方法有三种：</p>
<ul>
<li><strong>Module</strong>：PHP Module加载方法。</li>
<li><strong>PHP-CGI</strong>：是 PHP 对 Web Server 提供的 CGI 协议的接口程序。</li>
<li><strong>PHP-FPM</strong>：是 PHP 对 Web Server 提供的 FastCGI 协议的接口程序，额外提供了相对智能的任务管理。</li>
</ul>
<p>以上三种实现方法都是本质都是通过 PHP 的 SAPI 层调用 PHP 执行的。</p>
<h3 id="module"><a class="header-anchor" href="#module"></a>Module</h3>
<p>在了解 CGI 之前，我们先了解一下 Apache 处理 PHP 的一种常见方法：PHP Module 加载方式。在 Apache 的配置文件 httpd.conf，我们可以查找到以下语句：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">LoadModule php7_module  /usr/local/opt/php70/libexec/apache2/libphp7.so</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> <span class="attr">.php</span>$&gt;</span></span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">dir_module</span>&gt;</span></span><br><span class="line">    DirectoryIndex index.php index.html</span><br><span class="line"><span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这种方法，本质上是使用 Apache 的 <code>LoadModule</code> 来加载 <code>php7_module</code>，也就是把 PHP 作为 Apache 一个子模块来运行。当客户端请求 PHP 文件时，<code>Apache</code> 就会调用 <code>php7_module</code> 来解析 PHP 代码。</p>
<p>这种模式将 PHP 模块安装到 Apache 中，每一次 Apache 接收请求时，都会产生一条进程，这条进程就完整的包括 PHP 的运算计算，数据读取等各种操作。</p>
<p>由于每次请求都需要产生一条进程来连接 SAPI 来完成请求，一旦并发数过高，服务端就会承受不住。而且把 php7_module 加载进 Apache 中，出现问题时很难定位是 PHP 的问题 还是 Apache 的问题。</p>
<h3 id="php-cgi"><a class="header-anchor" href="#php-cgi"></a>PHP-CGI</h3>
<p>PHP-CGI 是使用 PHP 实现 CGI 接口的程序。当 Web Server 接收到 PHP 文件请求时，会分发给 CGI 程序处理，CGI 程序处理完毕后，会返回结果给 Web Server，Web Server 再返回给客户端。</p>
<p>PHP-CGI 的好处就是完全独立于 Web Server，只是作为中间层，提供接口给 Apache 和 PHP，它们通过 CGI 来完成数据传递。这样做的好处就减少了两者之间的关联，出现错误时能够较好地定位。</p>
<p>但是 PHP-CGI 采用的是 fork-and-execute 模式，就是每次请求都会有进程启动和退出的过程，在高并发下，Web Server 容易奔溃。</p>
<h3 id="php-fpm"><a class="header-anchor" href="#php-fpm"></a>PHP-FPM</h3>
<p>在了解 PHP-FPM 之前，我们先来了解一下 FastCGI。</p>
<p>从根本上来说，FastCGI 是用来提高 CGI 程序性能的。类似于 CGI，FastCGI 也可以说是一种协议。</p>
<p>FastCGI 像是一个常驻（long-live）型的 CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去 fork 一次。它还支持分布式的运算, 即 FastCGI 程序可以在网站服务器以外的主机上执行，并且接受来自其它网站服务器来的请求。</p>
<p>FastCGI 是语言无关的、可伸缩架构的 CGI 开放扩展，其主要行为是将 CGI 解释器进程保持在内存中，并因此获得较高的性能。众所周知，CGI 解释器的反复加载是 CGI 性能低下的主要原因，如果 CGI 解释器保持在内存中，并接受 FastCGI 进程管理器调度，则可以提供良好的性能、伸缩性、Fail- Over 特性等等。</p>
<p>FastCGI 接口方式采用C/S结构，可以将 Web Server 和脚本解析服务器分开，同时在脚本解析服务器上启动一个或者多个脚本解析守护进程。当HTTP服务器每次遇到动态程序时，可以将其直接交付给 FastCGI 进程来执行，然后将得到的结果返回给浏览器。这种方式可以让 Web Server 专一地处理静态请求，或者将动态脚本服务器的结果返回给客户端，这在很大程度上提高了整个应用系统的性能。</p>
<p>PHP-FPM 是对 FastCGI 协议的具体实现，它负责管理一个进程池，来处理 Web Server 的请求。它自身并不直接处理请求，它会交给 PHP-CGI 去进行处理。因为 PHP-CGI 只是一个 CGI 程序，它只会解析请求，返回结果，不会管理进程。PHP-FPM 是用于调度管理 PHP 解释器 PHPCGI 的管理程序。</p>
<h3 id="cgi-fastcgi-php-cgi-php-fpm-的区别"><a class="header-anchor" href="#cgi-fastcgi-php-cgi-php-fpm-的区别"></a>CGI、FastCGI、PHP-CGI、PHP-FPM 的区别</h3>
<ul>
<li><strong>CGI</strong>：是一种协议，是外部应用程序与 Web Server 之间的接口标准，是在 CGI 程序和 Web 服务器之间传递信息的规程。</li>
<li><strong>FastCGI</strong>：是一种协议，通过守护进程来管理 CGI 程序，将 CGI 程序常驻于内存中，不必每次处理请求重新初始化 php.ini 和其他数据，提高 CGI 程序的性能。其本身并不处理 PHP 文件，只是负责进程的调度。</li>
<li><strong>PHP-CGI</strong>：是使用 PHP 实现 CGI 协议的程序，用于解析和处理 PHP 脚本。</li>
<li><strong>PHP-FPM</strong>：是一个只用于 PHP 的进程管理器，提供更好的 PHP 进程管理方式，可以有效控制进程，平滑地加载 PHP 配置文件。</li>
</ul>
<h3 id="apache-常用的配置与模块"><a class="header-anchor" href="#apache-常用的配置与模块"></a>Apache 常用的配置与模块</h3>
<ul>
<li><strong>Options</strong>（配置选项）
<ul>
<li><strong>Indexes</strong>：目录浏览，是否允许在目录下没有 index.html,index.php 的时候显示目录。</li>
<li><strong>Multiviews</strong>：文件匹配，服务器执行一个隐含的文件名模式匹配，并在其结果中选择。</li>
<li><strong>FollowSymLinks</strong>：符号链接，是否允许通过符号链接跨越 DocumentRoot 访问其他目录。</li>
</ul>
</li>
<li><strong>AllowOverride</strong>（是否允许根目录下的 <code>.htaccess</code> 文件起到 <code>URL rewrite</code> 的作用）
<ul>
<li><strong>All</strong></li>
<li><strong>None</strong></li>
</ul>
</li>
<li><strong>LoadModule</strong>（加载模块）</li>
<li><strong>Listen</strong>（Apache 默认监听端口）</li>
<li><strong>ServerRoot</strong>：Apache 安装的基础目录</li>
<li><strong>DocumentRoot</strong>：Apache 缺省文件根目录</li>
<li><strong>DirectoryIndex</strong>：网站默认首页文件</li>
<li><strong>LogLevel</strong>：日志级别设置</li>
<li><strong>ErrorLog</strong>：错误日志存放路径</li>
<li><strong>CustomLog</strong>：访问日志存放路径</li>
<li><strong>VirutalHost</strong>（虚拟主机与配置参数）
<ul>
<li><strong>ServerName</strong>：虚拟域名</li>
<li><strong>ServerAlias</strong>：虚拟域名的别名</li>
<li><strong>ServerAdmin</strong>：服务器管理员邮箱</li>
<li><strong>DocumentRoot</strong>：项目代码根目录</li>
<li><strong>LogLevel</strong>：日志级别设置</li>
<li><strong>ErrorLog</strong>：错误日志存放路径</li>
<li><strong>CustomLog</strong>：访问日志存放路径</li>
</ul>
</li>
<li><strong>MPM</strong>（工作模式/多处理模块）
<ul>
<li><strong>Prefork</strong>
<ul>
<li><strong>StartServers</strong>：服务器启动时默认开启的进程数</li>
<li><strong>MinSpareServers</strong>：最小的空闲进程数</li>
<li><strong>MaxSpareServers</strong>：最大的空闲进程数</li>
<li><strong>ServerLimit</strong>：在Apache的生命周期内，限制MaxClients的最大值</li>
<li><strong>MaxClients</strong>：最大的并发请求数，最大值不能超过 ServerLimit 设置的值</li>
<li><strong>MaxRequestsPerChild</strong>：一个进程可以处理的最多的请求数（进程复用），如请求超过该设置则杀死进程，0表示永不过期。</li>
</ul>
</li>
<li><strong>Worker</strong></li>
<li><strong>Event</strong></li>
</ul>
</li>
<li><strong>Order, Deny, Allow</strong>（认证，授权与访问控制）</li>
<li><strong>HostnameLookups off</strong>（避免 DNS 查询）</li>
<li><strong>Timeout</strong>（请求超时）</li>
<li><strong>Include</strong>（文件包含）</li>
<li><strong>Proxy、mod_proxy</strong>（代理）</li>
<li><strong>Cache Guide</strong>（缓存）</li>
</ul>
<h3 id="nginx-常用模块与配置指令上下文"><a class="header-anchor" href="#nginx-常用模块与配置指令上下文"></a>Nginx 常用模块与配置指令上下文</h3>
<h4 id="nginx-模块"><a class="header-anchor" href="#nginx-模块"></a>Nginx 模块</h4>
<p>Nginx 的模块从功能角度主要可以分为以下三类：</p>
<ul>
<li><strong>Handler</strong> 模块：主要负责处理客户端请求并产生待响应内容，比如 <code>ngx_http_static_module</code>模块，负责客户端的静态页面请求处理并将对应的磁盘文件准备为响应内容输出。</li>
<li><strong>Filter</strong> 模块：主要负责对输出的内容进行处理，可以对输出进行修改，如 <code>ngx_http_not_modified_filter_module</code>,<code>ngx_http_header_filter_module</code> 模块。</li>
<li><strong>Upstream</strong> 模块：实现反向代理的功能，将真正的请求转发到后端服务器上，如 <code>ngx_http_proxy_module</code>、<code>ngx_http_fastcgi_module</code> 模块。</li>
</ul>
<h4 id="nginx-配置指令"><a class="header-anchor" href="#nginx-配置指令"></a>Nginx 配置指令</h4>
<ul>
<li><strong>main</strong>（Nginx 在运行时与具体业务功能无关的一些参数，比如工作进程数，运行的身份等）
<ul>
<li><strong>user</strong></li>
<li><strong>worker_processes</strong></li>
<li><strong>error_log</strong></li>
<li><strong>events</strong></li>
<li><strong>http</strong></li>
<li><strong>mall</strong></li>
</ul>
</li>
<li><strong>events</strong>（定义 Nginx 事件工作模式与连接数上限等参数）
<ul>
<li><strong>use</strong> [ kqueue | rtsig | epoll | /dev/poll | select | poll ];</li>
<li><strong>worker_connections</strong></li>
</ul>
</li>
<li><strong>http</strong>（与提供 HTTP 服务相关的一些配置参数，如是否使用 keepalive、是否使用 gzip 进行压缩等）
<ul>
<li><strong>server</strong></li>
</ul>
</li>
<li><strong>server</strong>（http服务上支持若干虚拟主机。每个虚拟主机一个对应的server配置项，配置项里面包含该虚拟主机相关的配置。在提供mail服务的代理时，也可以建立若干server.每个server通过监听的地址来区分）
<ul>
<li><strong>listen</strong></li>
<li><strong>server_name</strong></li>
<li><strong>access_log</strong></li>
<li><strong>location</strong></li>
<li><strong>protocol</strong></li>
<li><strong>proxy</strong></li>
<li><strong>smtp_auth</strong></li>
<li><strong>xclient</strong></li>
</ul>
</li>
<li><strong>location</strong>（http服务中，某些特定的URL对应的一系列配置项。）
<ul>
<li><strong>root</strong></li>
<li><strong>index</strong></li>
</ul>
</li>
<li><strong>mail</strong>（实现email相关的SMTP/IMAP/POP3代理时，共享的一些配置项（因为可能实现多个代理，工作在多个监听地址上）
<ul>
<li><strong>server</strong></li>
<li><strong>auth_http</strong></li>
<li><strong>imap_capabilities</strong></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（九）</title>
    <url>/2016/04/04/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
    <content><![CDATA[<p>利用 <code>zizaco/entrust</code> Package 进行权限管理</p>
<h1 id="修改用户表单请求"><a class="header-anchor" href="#修改用户表单请求"></a>修改用户表单请求</h1>
<hr>
<p>打开文件<code>app/Http/Request/Form/UserForm.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Requests\Form;</span><br><span class="line"></span><br><span class="line">use App\Http\Requests\Request;</span><br><span class="line"></span><br><span class="line">class UserForm extends Request</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Determine if the user is authorized to make this request.</span><br><span class="line">     *</span><br><span class="line">     * @return bool</span><br><span class="line">     */</span><br><span class="line">    public function authorize()</span><br><span class="line">    &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Get the validation rules that apply to the request.</span><br><span class="line">     *</span><br><span class="line">     * @return array</span><br><span class="line">     */</span><br><span class="line">    public function rules()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;name&apos;                  =&gt; &apos;required|unique:users&apos;,</span><br><span class="line">            &apos;email&apos;                 =&gt; &apos;required|unique:users&apos;,</span><br><span class="line">            &apos;role_id&apos;               =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;password&apos;              =&gt; &apos;required|confirmed&apos;,</span><br><span class="line">            &apos;password_confirmation&apos; =&gt; &apos;required&apos;,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function messages()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;name.required&apos;                  =&gt; &apos;用户名称不能为空&apos;,</span><br><span class="line">            &apos;name.unique&apos;                    =&gt; &apos;用户名称已存在&apos;,</span><br><span class="line">            &apos;email.required&apos;                 =&gt; &apos;用户邮箱不能为空&apos;,</span><br><span class="line">            &apos;email.unique&apos;                   =&gt; &apos;用户邮箱已存在&apos;,</span><br><span class="line">            &apos;role_id.required&apos;               =&gt; &apos;用户角色不能为空&apos;,</span><br><span class="line">            &apos;password.required&apos;              =&gt; &apos;用户密码不能为空&apos;,</span><br><span class="line">            &apos;password.confirmed&apos;             =&gt; &apos;确认密码不一致&apos;,</span><br><span class="line">            &apos;password_confirmation.required&apos; =&gt; &apos;确认密码不能为空&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改用户表单请求的验证规则，确保用户名称、用户邮箱唯一。</p>
<h1 id="修改用户管理控制器"><a class="header-anchor" href="#修改用户管理控制器"></a>修改用户管理控制器</h1>
<hr>
<p>打开文件<code>app/Http/Controllers/Backend/UserController/php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Controllers\Backend;</span><br><span class="line"></span><br><span class="line">use App\Models\Role;</span><br><span class="line">use App\Models\User;</span><br><span class="line">use App\Http\Requests;</span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line">use App\Http\Requests\Form\UserForm;</span><br><span class="line"></span><br><span class="line">class UserController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Display a listing of the resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $users = User::paginate(25);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.user.index&apos;, compact(&apos;users&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for creating a new resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function create()</span><br><span class="line">    &#123;</span><br><span class="line">        $roles = Role::all();</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.user.create&apos;, compact(&apos;roles&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Store a newly created resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function store(UserForm $request)</span><br><span class="line">    &#123;</span><br><span class="line">        $data = [</span><br><span class="line">            &apos;name&apos;     =&gt; $request[&apos;name&apos;],</span><br><span class="line">            &apos;email&apos;    =&gt; $request[&apos;email&apos;],</span><br><span class="line">            &apos;password&apos; =&gt; bcrypt($request[&apos;password&apos;]),</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            $roles = Role::whereIn(&apos;id&apos;, $request-&gt;get(&apos;role_id&apos;))-&gt;get();</span><br><span class="line">            if (empty($roles-&gt;toArray())) &#123;</span><br><span class="line"></span><br><span class="line">                return redirect()-&gt;back()-&gt;withErrors(&quot;用户角色不存在,请刷新页面并选择其他用户角色&quot;)-&gt;withInput();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $user = User::create($data);</span><br><span class="line">            if ($user) &#123;</span><br><span class="line"></span><br><span class="line">                foreach ($roles as $role) &#123;</span><br><span class="line">                    $user-&gt;attachRole($role);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                return redirect()-&gt;route(&apos;user.index&apos;)-&gt;withSuccess(&apos;新增用户成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()))-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Display the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function show($id)</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for editing the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function edit($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $user = User::find($id);</span><br><span class="line">        $roles = Role::all();</span><br><span class="line">        $userRoles = $user-&gt;roles-&gt;toArray();</span><br><span class="line">        $displayNames = array_map(function ($value) &#123;</span><br><span class="line">            return $value[&apos;display_name&apos;];</span><br><span class="line">        &#125;, $userRoles);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.user.edit&apos;, compact(&apos;user&apos;, &apos;roles&apos;, &apos;displayNames&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Update the specified resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     * @param  int                      $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function update(UserForm $request, $id)</span><br><span class="line">    &#123;</span><br><span class="line">        $user = User::find($id);</span><br><span class="line">        $user-&gt;name = $request[&apos;name&apos;];</span><br><span class="line">        $user-&gt;email = $request[&apos;email&apos;];</span><br><span class="line">        $user-&gt;password = bcrypt($request[&apos;password&apos;]);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            $roles = Role::whereIn(&apos;id&apos;, $request-&gt;get(&apos;role_id&apos;))-&gt;get();</span><br><span class="line">            if (empty($roles-&gt;toArray())) &#123;</span><br><span class="line"></span><br><span class="line">                return redirect()-&gt;back()-&gt;withErrors(&quot;用户角色不存在,请刷新页面并选择其他用户角色&quot;)-&gt;withInput();</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                if ($user-&gt;save()) &#123;</span><br><span class="line">                    foreach ($roles as $role) &#123;</span><br><span class="line">                        $user-&gt;attachRole($role);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    return redirect()-&gt;route(&apos;user.index&apos;)-&gt;withSuccess(&apos;编辑用户成功&apos;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()))-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Remove the specified resource from storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function destroy($id)</span><br><span class="line">    &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            if (User::destroy($id)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&apos;删除用户成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改新增用户、编辑用户的业务流程，新增用户、编辑用户的时候，必须为用户指定一名角色。</p>
<h1 id="修改视图"><a class="header-anchor" href="#修改视图"></a>修改视图</h1>
<hr>
<p>打开文件夹<code>resources/views/backend/user/</code>下的</p>
<ul>
<li><code>index.blade.php</code></li>
<li><code>create.blade.php</code></li>
<li><code>edit.blade.php</code></li>
</ul>
<p>修改代码如下：</p>
<h3 id="index-blade-php"><a class="header-anchor" href="#index-blade-php"></a>index.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line"></span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-1&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;small-box&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;&#123;&#123;URL::to(&apos;user/create&apos;)&#125;&#125;&quot; class=&quot;btn btn-success&quot;&gt;新增用户&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-12&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                    &lt;h3 class=&quot;box-title&quot;&gt;用户列表&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;box-tools pull-right&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;input-group input-group-sm&quot; style=&quot;width: 150px;&quot;&gt;</span><br><span class="line">                            &lt;input type=&quot;text&quot; name=&quot;table_search&quot; class=&quot;form-control pull-right&quot; placeholder=&quot;快速查询&quot;&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;div class=&quot;input-group-btn&quot;&gt;</span><br><span class="line">                                &lt;button type=&quot;button&quot; class=&quot;btn btn-default disabled&quot;&gt;</span><br><span class="line">                                    &lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                &lt;/button&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-body table-responsive no-padding&quot;&gt;</span><br><span class="line">                    &lt;table class=&quot;table table-hover&quot;&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                            &lt;th&gt;用户编号&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;用户名称&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;用户邮箱&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;所属角色&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;管理操作&lt;/th&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                        @forelse($users as $user)</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$user-&gt;id&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$user-&gt;name&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$user-&gt;email&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;</span><br><span class="line">                                    @foreach($user-&gt;roles as $role)</span><br><span class="line">                                        &#123;&#123;$role-&gt;display_name&#125;&#125;</span><br><span class="line">                                    @endforeach</span><br><span class="line">                                &lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;</span><br><span class="line">                                    &lt;a class=&quot;btn btn-info&quot; href=&quot;&#123;&#123;URL::to(&apos;user/&apos;.$user-&gt;id.&apos;/edit&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        编辑</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                    &lt;button class=&quot;btn btn-danger&quot; data-toggle=&quot;modal&quot; data-target=&quot;#defalutModal&quot; data-url=&quot;&#123;&#123;URL::to(&apos;user/&apos;.$user-&gt;id)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        删除</span><br><span class="line">                                    &lt;/button&gt;</span><br><span class="line">                                &lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @empty</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td colspan=&quot;4&quot; class=&quot;text-center&quot;&gt;暂无数据&lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @endforelse</span><br><span class="line">                    &lt;/table&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                @if($users-&gt;render() !== &quot;&quot;)</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &#123;!! $users-&gt;render() !!&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                @endif</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    @include(&apos;backend.layout.model.default&apos;,[&apos;model_title&apos;=&gt;&apos;操作提示&apos;,&apos;model_content&apos;=&gt;&apos;你确定要删除这名用户吗?&apos;])</span><br><span class="line">@stop</span><br><span class="line">@section(&apos;script&apos;)</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        $(&apos;#defalutModal&apos;).on(&apos;show.bs.modal&apos;, function (event) &#123;</span><br><span class="line">            var button = $(event.relatedTarget);</span><br><span class="line">            var url = button.data(&apos;url&apos;);</span><br><span class="line">            var modal = $(this);</span><br><span class="line"></span><br><span class="line">            modal.find(&apos;form&apos;).attr(&apos;action&apos;, url);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h3 id="create-blade-php"><a class="header-anchor" href="#create-blade-php"></a>create.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;user&apos;)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;&#123;&#123;$page_title or &quot;page_title&quot;&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label class=&quot;col-sm-3 control-label&quot;&gt;用户角色&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;select class=&quot;form-control select2&quot; multiple=&quot;multiple&quot; name=&quot;role_id[]&quot;&gt;</span><br><span class="line">                                    @foreach($roles as $role)</span><br><span class="line">                                        &lt;option value=&quot;&#123;&#123;$role-&gt;id&#125;&#125;&quot;&gt;&#123;&#123;$role-&gt;display_name&#125;&#125;&lt;/option&gt;</span><br><span class="line">                                    @endforeach</span><br><span class="line">                                &lt;/select&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;role_id&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;用户名称&quot; value=&quot;&#123;&#123;old(&apos;name&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;email&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户邮箱&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;用户邮箱&quot; value=&quot;&#123;&#123;old(&apos;email&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;email&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;password&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户密码&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;用户密码&quot; value=&quot;&#123;&#123;old(&apos;password&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;password_confirmation&quot; class=&quot;col-sm-3 control-label&quot;&gt;确认密码&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;password_confirmation&quot; name=&quot;password_confirmation&quot; placeholder=&quot;确认密码&quot; value=&quot;&#123;&#123;old(&apos;password_confirmation&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password_confirmation&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;a class=&quot;btn btn-default&quot; href=&quot;&#123;&#123;route(&apos;user.index&apos;)&#125;&#125;&quot;&gt;返回&lt;/a&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h3 id="edit-blade-php"><a class="header-anchor" href="#edit-blade-php"></a>edit.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;user/&apos;.$user-&gt;id)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;&#123;&#123;$page_title or &quot;Page_title&quot;&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;put&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label class=&quot;col-sm-3 control-label&quot;&gt;用户角色&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;select class=&quot;form-control select2&quot; multiple=&quot;multiple&quot; name=&quot;role_id[]&quot; style=&quot;width: 100%&quot;&gt;</span><br><span class="line">                                    @foreach($roles as $role)</span><br><span class="line">                                        &lt;option value=&quot;&#123;&#123;$role-&gt;id&#125;&#125;&quot; @if(in_array($role-&gt;display_name,$displayNames)) selected @endif&gt;&#123;&#123;$role-&gt;display_name&#125;&#125;&lt;/option&gt;</span><br><span class="line">                                    @endforeach</span><br><span class="line">                                &lt;/select&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;role_id&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;用户名称&quot; value=&quot;&#123;&#123;$user-&gt;name&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;email&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户邮箱&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;用户邮箱&quot; value=&quot;&#123;&#123;$user-&gt;email&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;email&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;password&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户密码&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;用户密码&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;password_confirmation&quot; class=&quot;col-sm-3 control-label&quot;&gt;确认密码&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;password_confirmation&quot; name=&quot;password_confirmation&quot; placeholder=&quot;确认密码&quot; value=&quot;&#123;&#123;$user-&gt;password_confirmation&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password_confirmation&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(-1);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h1 id="新增模型"><a class="header-anchor" href="#新增模型"></a>新增模型</h1>
<hr>
<p>在终端运行以下命令，新增数据模型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:model Models/RoleUser</span><br><span class="line">php artisan make:model Models/PermissionRole</span><br></pre></td></tr></table></figure>
<p>分别打开文件<code>RoleUser.php</code>，<code>PermissionRole.php</code>，修改代码如下：</p>
<h3 id="roleuser-php"><a class="header-anchor" href="#roleuser-php"></a>RoleUser.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Models;</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line"></span><br><span class="line">class RoleUser extends Model</span><br><span class="line">&#123;</span><br><span class="line">    protected $fillable = [&apos;user_id&apos;, &apos;role_id&apos;];</span><br><span class="line"></span><br><span class="line">    protected $table = &quot;role_user&quot;;</span><br><span class="line"></span><br><span class="line">    public $timestamps = false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="permissionrole-php"><a class="header-anchor" href="#permissionrole-php"></a>PermissionRole.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Models;</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line"></span><br><span class="line">class PermissionRole extends Model</span><br><span class="line">&#123;</span><br><span class="line">    protected $fillable = [&apos;permission_id&apos;, &apos;role_id&apos;];</span><br><span class="line"></span><br><span class="line">    protected $table = &quot;permission_role&quot;;</span><br><span class="line"></span><br><span class="line">    public $timestamps = false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增数据填充"><a class="header-anchor" href="#新增数据填充"></a>新增数据填充</h1>
<hr>
<p>打开文件<code>database/seeds/DatabaseSeeder.php</code>，修改文件代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Seeder;</span><br><span class="line">use App\Models\Menu;</span><br><span class="line">use App\Models\Role;</span><br><span class="line">use App\Models\User;</span><br><span class="line">use App\Models\RoleUser;</span><br><span class="line">use App\Models\Permission;</span><br><span class="line">use App\Models\PermissionRole;</span><br><span class="line"></span><br><span class="line">class DatabaseSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Run the database seeds.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;call(&quot;MenusTableSeeder&quot;);</span><br><span class="line">        $this-&gt;call(&quot;UsersTableSeeder&quot;);</span><br><span class="line">        $this-&gt;call(&quot;RolesTableSeeder&quot;);</span><br><span class="line">        $this-&gt;call(&quot;RoleUserTableSeeder&quot;);</span><br><span class="line">        $this-&gt;call(&quot;PermissionTableSeeder&quot;);</span><br><span class="line">        $this-&gt;call(&quot;PermissionRoleTableSeeder&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class PermissionRoleTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;permission_role&apos;)-&gt;delete();</span><br><span class="line">        for ($i = 1; $i &lt; 3; $i++) &#123;</span><br><span class="line">            for ($j = 1; $j &lt; 15; $j++) &#123;</span><br><span class="line">                PermissionRole::create([&apos;permission_id&apos; =&gt; $j, &apos;role_id&apos; =&gt; $i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class UsersTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;users&apos;)-&gt;delete();</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;Ann&apos;, &apos;email&apos; =&gt; &apos;ann@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;Luis&apos;, &apos;email&apos; =&gt; &apos;luis@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;admin&apos;, &apos;email&apos; =&gt; &apos;admin@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class RolesTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;roles&apos;)-&gt;delete();</span><br><span class="line">        Role::create([&apos;name&apos; =&gt; &apos;admin&apos;, &apos;display_name&apos; =&gt; &apos;User Administrator&apos;, &apos;description&apos; =&gt; &apos;User is allowed to manage and edit other users&apos;]);</span><br><span class="line">        Role::create([&apos;name&apos; =&gt; &apos;owner&apos;, &apos;display_name&apos; =&gt; &apos;Project Owner&apos;, &apos;description&apos; =&gt; &apos;User is the owner of a given project&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class RoleUserTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;role_user&apos;)-&gt;delete();</span><br><span class="line">        RoleUser::create([&apos;user_id&apos; =&gt; 3, &apos;role_id&apos; =&gt; 1]);</span><br><span class="line">        RoleUser::create([&apos;user_id&apos; =&gt; 2, &apos;role_id&apos; =&gt; 2]);</span><br><span class="line">        RoleUser::create([&apos;user_id&apos; =&gt; 1, &apos;role_id&apos; =&gt; 2]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class PermissionTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;permissions&apos;)-&gt;delete();</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;首页管理&quot;, &quot;name&quot; =&gt; &quot;index.index&quot;, &apos;description&apos; =&gt; &apos;展示系统的各项基础数据&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;菜单列表&quot;, &quot;name&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;新增菜单&quot;, &quot;name&quot; =&gt; &quot;menu.create&quot;, &apos;description&apos; =&gt; &apos;新增菜单的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;编辑菜单&quot;, &quot;name&quot; =&gt; &quot;menu.edit&quot;, &apos;description&apos; =&gt; &apos;编辑菜单的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;角色列表&quot;, &quot;name&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;新增角色&quot;, &quot;name&quot; =&gt; &quot;role.create&quot;, &apos;description&apos; =&gt; &apos;新增角色的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;编辑角色&quot;, &quot;name&quot; =&gt; &quot;role.edit&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;角色赋权&quot;, &quot;name&quot; =&gt; &quot;role.show&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;权限列表&quot;, &quot;name&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;新增权限&quot;, &quot;name&quot; =&gt; &quot;permission.create&quot;, &apos;description&apos; =&gt; &apos;新增权限的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;编辑权限&quot;, &quot;name&quot; =&gt; &quot;permission.edit&quot;, &apos;description&apos; =&gt; &apos;编辑权限的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;用户列表&quot;, &quot;name&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;新增用户&quot;, &quot;name&quot; =&gt; &quot;user.create&quot;, &apos;description&apos; =&gt; &apos;新增用户的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;编辑用户&quot;, &quot;name&quot; =&gt; &quot;user.edit&quot;, &apos;description&apos; =&gt; &apos;编辑用户的页面&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MenusTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;menus&apos;)-&gt;delete();</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;首页管理&quot;, &quot;url&quot; =&gt; &quot;index.index&quot;, &apos;description&apos; =&gt; &apos;展示系统的各项基础数据&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;菜单管理&quot;, &quot;url&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;菜单列表&quot;, &quot;url&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;新增菜单&quot;, &quot;url&quot; =&gt; &quot;menu.create&quot;, &apos;description&apos; =&gt; &apos;新增菜单的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;编辑菜单&quot;, &quot;url&quot; =&gt; &quot;menu.edit&quot;, &apos;description&apos; =&gt; &apos;编辑菜单的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;角色管理&quot;, &quot;url&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;角色列表&quot;, &quot;url&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;新增角色&quot;, &quot;url&quot; =&gt; &quot;role.create&quot;, &apos;description&apos; =&gt; &apos;新增角色的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;编辑角色&quot;, &quot;url&quot; =&gt; &quot;role.edit&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;角色赋权&quot;, &quot;url&quot; =&gt; &quot;role.show&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;权限管理&quot;, &quot;url&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;权限列表&quot;, &quot;url&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;新增权限&quot;, &quot;url&quot; =&gt; &quot;permission.create&quot;, &apos;description&apos; =&gt; &apos;新增权限的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;编辑权限&quot;, &quot;url&quot; =&gt; &quot;permission.edit&quot;, &apos;description&apos; =&gt; &apos;编辑权限的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;用户管理&quot;, &quot;url&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;用户列表&quot;, &quot;url&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;新增用户&quot;, &quot;url&quot; =&gt; &quot;user.create&quot;, &apos;description&apos; =&gt; &apos;新增用户的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;编辑用户&quot;, &quot;url&quot; =&gt; &quot;user.edit&quot;, &apos;description&apos; =&gt; &apos;编辑用户的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接着在终端执行以下命令，执行数据回滚与填充</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan migrate:refresh --seed</span><br></pre></td></tr></table></figure>
<h1 id="新建中间件"><a class="header-anchor" href="#新建中间件"></a>新建中间件</h1>
<hr>
<p>在终端执行以下命令新增一个中间件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:middleware Entrust</span><br></pre></td></tr></table></figure>
<p>打开文件<code>app/Http/Middleware/Entrust</code>，修改文件代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Middleware;</span><br><span class="line"></span><br><span class="line">use Closure;</span><br><span class="line">use Illuminate\Support\Facades\Auth;</span><br><span class="line">use Illuminate\Support\Facades\Route;</span><br><span class="line"></span><br><span class="line">class Entrust</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Handle an incoming request.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     * @param  \Closure                 $next</span><br><span class="line">     *</span><br><span class="line">     * @return mixed</span><br><span class="line">     */</span><br><span class="line">    public function handle($request, Closure $next)</span><br><span class="line">    &#123;</span><br><span class="line">        if ( ! Auth::user()-&gt;hasPermission(Route::currentRouteName())) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(&quot;没有操作权限&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $next($request);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="注册中间件"><a class="header-anchor" href="#注册中间件"></a>注册中间件</h1>
<hr>
<p>打开文件<code>app/Http/Kernel.php</code>，在数组<code>$routeMiddleware</code>添加以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&apos;Entrust&apos;    =&gt; \App\Http\Middleware\Entrust::class</span><br></pre></td></tr></table></figure>
<h1 id="路由绑定中间件"><a class="header-anchor" href="#路由绑定中间件"></a>路由绑定中间件</h1>
<hr>
<p>打开文件<code>app/Http/routes.php</code>，修改文件代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Route::group([&apos;namespace&apos; =&gt; &apos;Backend&apos;, &apos;middleware&apos; =&gt; [&apos;auth&apos;,&apos;Entrust&apos;]], function () &#123;</span><br><span class="line">    Route::get(&apos;/&apos;, [&apos;as&apos; =&gt; &apos;index.index&apos;, &apos;uses&apos; =&gt; &apos;IndexController@index&apos;]);</span><br><span class="line">    Route::resource(&apos;user&apos;, &apos;UserController&apos;);</span><br><span class="line">    Route::resource(&apos;menu&apos;, &apos;MenuController&apos;);</span><br><span class="line">    Route::resource(&apos;role&apos;, &apos;RoleController&apos;);</span><br><span class="line">    Route::resource(&apos;permission&apos;, &apos;PermissionController&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::group([&apos;namespace&apos; =&gt; &apos;Auth&apos;], function () &#123;</span><br><span class="line"></span><br><span class="line">    Route::get(&apos;auth/login&apos;, &apos;AuthController@getLogin&apos;);</span><br><span class="line">    Route::post(&apos;auth/login&apos;, &apos;AuthController@postLogin&apos;);</span><br><span class="line">    Route::get(&apos;auth/logout&apos;, &apos;AuthController@getLogout&apos;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>凡是进行后台访问、操作的路由，都必须经过<code>Entrust</code>中间件进行权限验证。当前登录用户对应的角色没有权限，则无法查看页面或进行数据操作</p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（七）</title>
    <url>/2016/04/04/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E4%B8%83%EF%BC%89/</url>
    <content><![CDATA[<p>新增角色管理模块，管理角色的增删查改。</p>
<h1 id="新增请求"><a class="header-anchor" href="#新增请求"></a>新增请求</h1>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:request Form/RoleForm</span><br></pre></td></tr></table></figure>
<p>文件<code>RoleForm</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Requests;</span><br><span class="line"></span><br><span class="line">class RoleForm extends Request</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Determine if the user is authorized to make this request.</span><br><span class="line">     *</span><br><span class="line">     * @return bool</span><br><span class="line">     */</span><br><span class="line">    public function authorize()</span><br><span class="line">    &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Get the validation rules that apply to the request.</span><br><span class="line">     *</span><br><span class="line">     * @return array</span><br><span class="line">     */</span><br><span class="line">    public function rules()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;name&apos;         =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;display_name&apos; =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;description&apos;  =&gt; &apos;required&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function messages()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;name.required&apos;         =&gt; &apos;角色标识不能为空&apos;,</span><br><span class="line">            &apos;display_name.required&apos; =&gt; &apos;角色名称不能为空&apos;,</span><br><span class="line">            &apos;description.required&apos;  =&gt; &apos;角色描述不能为空&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增控制器"><a class="header-anchor" href="#新增控制器"></a>新增控制器</h1>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:controller Backend/RoleController</span><br></pre></td></tr></table></figure>
<p>文件<code>RoleController.php</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Controllers\Backend;</span><br><span class="line"></span><br><span class="line">use App\Models\Role;</span><br><span class="line">use App\Http\Requests;</span><br><span class="line">use App\Http\Requests\Form\RoleForm;</span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line"></span><br><span class="line">class RoleController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Display a listing of the resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $roles = Role::paginate(25);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.role.index&apos;, compact(&apos;roles&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for creating a new resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function create()</span><br><span class="line">    &#123;</span><br><span class="line">        return view(&apos;backend.role.create&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Store a newly created resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\RoleForm $request</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function store(RoleForm $request)</span><br><span class="line">    &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            if (Role::create($request-&gt;all())) &#123;</span><br><span class="line">                return redirect()-&gt;route(&apos;role.index&apos;)-&gt;withSuccess(&apos;新增角色成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()))-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Display the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function show($id)</span><br><span class="line">    &#123;</span><br><span class="line">        return view(&apos;backend.role.show&apos;, compact(&apos;id&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for editing the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function edit($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $role = Role::find($id);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.role.edit&apos;, compact(&apos;role&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Update the specified resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     * @param  int                      $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function update(RoleForm $request, $id)</span><br><span class="line">    &#123;</span><br><span class="line">        $data = $request-&gt;all();</span><br><span class="line">        unset($data[&apos;_token&apos;]);</span><br><span class="line">        unset($data[&apos;_method&apos;]);</span><br><span class="line">        try &#123;</span><br><span class="line">            if (Role::where(&apos;id&apos;, $id)-&gt;update($data)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&apos;编辑角色成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()))-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Remove the specified resource from storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function destroy($id)</span><br><span class="line">    &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            if (Role::destroy($id)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&apos;删除角色成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增视图"><a class="header-anchor" href="#新增视图"></a>新增视图</h1>
<hr>
<h2 id="index-blade-php"><a class="header-anchor" href="#index-blade-php"></a>index.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line"></span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-1&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;small-box&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;&#123;&#123;URL::to(&apos;role/create&apos;)&#125;&#125;&quot; class=&quot;btn btn-success&quot;&gt;新增角色&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-12&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                    &lt;h3 class=&quot;box-title&quot;&gt;角色列表&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;box-tools pull-right&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;input-group input-group-sm&quot; style=&quot;width: 150px;&quot;&gt;</span><br><span class="line">                            &lt;input type=&quot;text&quot; name=&quot;table_search&quot; class=&quot;form-control pull-right&quot; placeholder=&quot;快速查询&quot;&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;div class=&quot;input-group-btn&quot;&gt;</span><br><span class="line">                                &lt;button type=&quot;button&quot; class=&quot;btn btn-default disabled&quot;&gt;</span><br><span class="line">                                    &lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                &lt;/button&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-body table-responsive no-padding&quot;&gt;</span><br><span class="line">                    &lt;table class=&quot;table table-hover&quot;&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                            &lt;th&gt;角色编号&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;角色标识&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;角色名称&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;角色描述&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;管理操作&lt;/th&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                        @forelse($roles as $role)</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$role-&gt;id&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$role-&gt;name&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$role-&gt;display_name&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$role-&gt;description&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;</span><br><span class="line">                                    &lt;a class=&quot;btn btn-info&quot; href=&quot;&#123;&#123;URL::to(&apos;role/&apos;.$role-&gt;id.&apos;/edit&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        编辑</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                    &lt;a class=&quot;btn btn-primary&quot; href=&quot;&#123;&#123;URL::to(&apos;role/&apos;.$role-&gt;id)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        赋权</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                    &lt;a class=&quot;btn btn-danger&quot; data-toggle=&quot;modal&quot; data-target=&quot;#defalutModal&quot; data-url=&quot;&#123;&#123;URL::to(&apos;role/&apos;.$role-&gt;id)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        删除</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                &lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @empty</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td colspan=&quot;4&quot; class=&quot;text-center&quot;&gt;暂无数据&lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @endforelse</span><br><span class="line">                    &lt;/table&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                @if($roles-&gt;render() !== &quot;&quot;)</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &#123;!! $roles-&gt;render() !!&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                @endif</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    @include(&apos;backend.layout.model.default&apos;,[&apos;model_title&apos;=&gt;&apos;操作提示&apos;,&apos;model_content&apos;=&gt;&apos;你确定要删除这名角色吗?&apos;])</span><br><span class="line">@stop</span><br><span class="line">@section(&apos;script&apos;)</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        $(&apos;#defalutModal&apos;).on(&apos;show.bs.modal&apos;, function (event) &#123;</span><br><span class="line">            var button = $(event.relatedTarget);</span><br><span class="line">            var url = button.data(&apos;url&apos;);</span><br><span class="line">            var modal = $(this);</span><br><span class="line"></span><br><span class="line">            modal.find(&apos;form&apos;).attr(&apos;action&apos;, url);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h2 id="show-blade-php"><a class="header-anchor" href="#show-blade-php"></a>show.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line"></span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line"></span><br><span class="line">@stop</span><br><span class="line">@section(&apos;script&apos;)</span><br><span class="line"></span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h2 id="edit-blade-php"><a class="header-anchor" href="#edit-blade-php"></a>edit.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;role/&apos;.$role-&gt;id)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;&#123;&#123;$page_title or &quot;Page Title&quot;&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;put&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;角色标识&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;角色标识&quot; value=&quot;&#123;&#123;$role-&gt;name&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;display_name&quot; class=&quot;col-sm-3 control-label&quot;&gt;角色名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;display_name&quot; name=&quot;display_name&quot; placeholder=&quot;角色名称&quot; value=&quot;&#123;&#123;$role-&gt;display_name&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;display_name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;description&quot; class=&quot;col-sm-3 control-label&quot;&gt;角色描述&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;description&quot; name=&quot;description&quot; placeholder=&quot;角色描述&quot; value=&quot;&#123;&#123;$role-&gt;description&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;description&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(&apos;&#123;&#123;route(&apos;role.index&apos;)&#125;&#125;&apos;);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h2 id="create-blade-php"><a class="header-anchor" href="#create-blade-php"></a>create.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;role&apos;)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;&#123;&#123;$page_title or &quot;Page Title&quot;&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;角色标识&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;角色标识&quot; value=&quot;&#123;&#123;old(&apos;name&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;display_name&quot; class=&quot;col-sm-3 control-label&quot;&gt;角色名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;display_name&quot; name=&quot;display_name&quot; placeholder=&quot;角色名称&quot; value=&quot;&#123;&#123;old(&apos;display_name&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;display_name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;description&quot; class=&quot;col-sm-3 control-label&quot;&gt;角色描述&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;description&quot; name=&quot;description&quot; placeholder=&quot;角色描述&quot; value=&quot;&#123;&#123;old(&apos;description&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;description&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(-1);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h1 id="填充数据"><a class="header-anchor" href="#填充数据"></a>填充数据</h1>
<hr>
<p>打开文件<code>database/seeds/DatabaseSeeder.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Seeder;</span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line">use App\Models\User;</span><br><span class="line">use App\Models\Menu;</span><br><span class="line">use App\Models\Role;</span><br><span class="line"></span><br><span class="line">class DatabaseSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Run the database seeds.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        Model::unguard();</span><br><span class="line">        $this-&gt;call(UserTableSeeder::class);</span><br><span class="line">        $this-&gt;call(MenuTableSeeder::class);</span><br><span class="line">        $this-&gt;call(RoleTableSeeder::class);</span><br><span class="line">        Model::reguard();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class UserTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;users&apos;)-&gt;delete();</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;Ann&apos;, &apos;email&apos; =&gt; &apos;ann@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;Luis&apos;, &apos;email&apos; =&gt; &apos;luis@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;admin&apos;, &apos;email&apos; =&gt; &apos;admin@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MenuTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;menus&apos;)-&gt;delete();</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;首页管理&quot;, &quot;url&quot; =&gt; &quot;index.index&quot;, &apos;description&apos; =&gt; &apos;展示系统的各项基础数据&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;菜单管理&quot;, &quot;url&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;菜单列表&quot;, &quot;url&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;新增菜单&quot;, &quot;url&quot; =&gt; &quot;menu.create&quot;, &apos;description&apos; =&gt; &apos;新增菜单的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;编辑菜单&quot;, &quot;url&quot; =&gt; &quot;menu.edit&quot;, &apos;description&apos; =&gt; &apos;编辑菜单的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;角色管理&quot;, &quot;url&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;角色列表&quot;, &quot;url&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;新增角色&quot;, &quot;url&quot; =&gt; &quot;role.create&quot;, &apos;description&apos; =&gt; &apos;新增角色的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;编辑角色&quot;, &quot;url&quot; =&gt; &quot;role.edit&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;角色赋权&quot;, &quot;url&quot; =&gt; &quot;role.show&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;权限管理&quot;, &quot;url&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;权限列表&quot;, &quot;url&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;新增权限&quot;, &quot;url&quot; =&gt; &quot;permission.create&quot;, &apos;description&apos; =&gt; &apos;新增权限的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;编辑权限&quot;, &quot;url&quot; =&gt; &quot;permission.edit&quot;, &apos;description&apos; =&gt; &apos;编辑权限的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;用户管理&quot;, &quot;url&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;用户列表&quot;, &quot;url&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;新增用户&quot;, &quot;url&quot; =&gt; &quot;user.create&quot;, &apos;description&apos; =&gt; &apos;新增用户的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;编辑用户&quot;, &quot;url&quot; =&gt; &quot;user.edit&quot;, &apos;description&apos; =&gt; &apos;编辑用户的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class RoleTableSeeder extends Seeder&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;roles&apos;)-&gt;delete();</span><br><span class="line">        Role::create([&apos;name&apos; =&gt; &apos;admin&apos;, &apos;display_name&apos; =&gt; &apos;User Administrator&apos;, &apos;description&apos; =&gt; &apos;User is allowed to manage and edit other users&apos;]);</span><br><span class="line">        Role::create([&apos;name&apos; =&gt; &apos;owner&apos;, &apos;display_name&apos; =&gt; &apos;Project Owner&apos;, &apos;description&apos; =&gt; &apos;User is the owner of a given project&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接着在终端执行以下命令回滚并再次执行迁移，填充数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan migrate:refresh --seed</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（六）</title>
    <url>/2016/04/04/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E5%85%AD%EF%BC%89/</url>
    <content><![CDATA[<p>完成Entrust的配置</p>
<h1 id="安装zizaco-entrust-package"><a class="header-anchor" href="#安装zizaco-entrust-package"></a>安装zizaco/entrust Package</h1>
<hr>
<p>zizaco/entrust是Laravel下基于角色的权限管理方案。</p>
<p>1.修改文件<code>composer.json</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;&gt;=5.5.9&quot;,</span><br><span class="line">    &quot;laravel/framework&quot;: &quot;5.1.*&quot;,</span><br><span class="line">    &quot;gregwar/captcha&quot;: &quot;1.*&quot;,</span><br><span class="line">    &quot;zizaco/entrust&quot;: &quot;dev-laravel-5&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>2.在终端运行命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer install</span><br><span class="line"></span><br><span class="line">// or</span><br><span class="line"></span><br><span class="line">composer update</span><br></pre></td></tr></table></figure>
<p>3.在文件<code>config/app.php</code>的<code>providers</code>数组和<code>aliase</code>数组分别添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// providers</span><br><span class="line">Zizaco\Entrust\EntrustServiceProvider::class</span><br><span class="line"></span><br><span class="line">// aliase</span><br><span class="line">&apos;Entrust&apos; =&gt; Zizaco\Entrust\EntrustFacade::class,</span><br></pre></td></tr></table></figure>
<p>4.在文件<code>app/Http/Kernel.php</code>的<code>$routeMiddleware</code>添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&apos;role&apos; =&gt; Zizaco\Entrust\Middleware\EntrustRole::class,</span><br><span class="line">&apos;permission&apos; =&gt; Zizaco\Entrust\Middleware\EntrustPermission::class,</span><br><span class="line">&apos;ability&apos; =&gt; Zizaco\Entrust\Middleware\EntrustAbility::class,</span><br></pre></td></tr></table></figure>
<p>5.Entrust会根据文件<code>config/auth.php</code>的<code>model</code>来选择用户模型，如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&apos;model&apos; =&gt; App\Models\User::class</span><br></pre></td></tr></table></figure>
<p>执行以下命令生成配置文件<code>config/entrust.php</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan vendor:publish</span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>entrust.php</code>如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&apos;role&apos;=&gt;&apos;App\Models\Role&apos;</span><br><span class="line">&apos;permission&apos;=&gt;&apos;App\Models\Permission&apos;</span><br></pre></td></tr></table></figure>
<p>6.生成数据库迁移文件并执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan entrust:migration</span><br><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure>
<p>7.生成自动加载</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer dump-autoload</span><br></pre></td></tr></table></figure>
<h1 id="管理模型"><a class="header-anchor" href="#管理模型"></a>管理模型</h1>
<hr>
<p>为了使用Entrust，我们需要新建两个模型，在终端运行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 角色模型</span><br><span class="line">php artisan make:model Models/Role</span><br><span class="line"></span><br><span class="line">// 权限模型</span><br><span class="line">php artisan make:model Models/Permission</span><br></pre></td></tr></table></figure>
<h2 id="role-php"><a class="header-anchor" href="#role-php"></a>Role.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace App\Models;</span><br><span class="line"></span><br><span class="line">use Zizaco\Entrust\EntrustRole;</span><br><span class="line"></span><br><span class="line">class Role extends EntrustRole</span><br><span class="line">&#123;</span><br><span class="line">    protected $guarded = [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="permission-php"><a class="header-anchor" href="#permission-php"></a>Permission.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace App\Models;</span><br><span class="line"></span><br><span class="line">use Zizaco\Entrust\EntrustPermission;</span><br><span class="line"></span><br><span class="line">class Permission extends EntrustPermission</span><br><span class="line">&#123;</span><br><span class="line">    protected $guarded = [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了配合Entrust的使用，需要修改User.php的代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Models;</span><br><span class="line"></span><br><span class="line">use Illuminate\Auth\Authenticatable;</span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line">use Illuminate\Auth\Passwords\CanResetPassword;</span><br><span class="line">use Illuminate\Foundation\Auth\Access\Authorizable;</span><br><span class="line">use Illuminate\Contracts\Auth\Authenticatable as AuthenticatableContract;</span><br><span class="line">use Illuminate\Contracts\Auth\Access\Authorizable as AuthorizableContract;</span><br><span class="line">use Illuminate\Contracts\Auth\CanResetPassword as CanResetPasswordContract;</span><br><span class="line">use Zizaco\Entrust\Traits\EntrustUserTrait;</span><br><span class="line"></span><br><span class="line">class User extends Model implements AuthenticatableContract,</span><br><span class="line">    AuthorizableContract,</span><br><span class="line">    CanResetPasswordContract</span><br><span class="line">&#123;</span><br><span class="line">    use Authenticatable, Authorizable, CanResetPassword, EntrustUserTrait&#123;</span><br><span class="line">        Authorizable::can insteadof  EntrustUserTrait;</span><br><span class="line">        EntrustUserTrait::can as hasPermission;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * The database table used by the model.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $table = &apos;users&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * The attributes that are mass assignable.</span><br><span class="line">     *</span><br><span class="line">     * @var array</span><br><span class="line">     */</span><br><span class="line">    protected $fillable = [&apos;name&apos;, &apos;email&apos;, &apos;password&apos;];</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * The attributes excluded from the model&apos;s JSON form.</span><br><span class="line">     *</span><br><span class="line">     * @var array</span><br><span class="line">     */</span><br><span class="line">    protected $hidden = [&apos;password&apos;, &apos;remember_token&apos;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>完成上述所有操作之后，Entrust的配置就完成了。</p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（五）</title>
    <url>/2016/04/04/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E4%BA%94%EF%BC%89/</url>
    <content><![CDATA[<p>新增菜单管理模块功能，完成侧边栏菜单视图显示</p>
<h1 id="新增迁移文件与数据填充"><a class="header-anchor" href="#新增迁移文件与数据填充"></a>新增迁移文件与数据填充</h1>
<hr>
<p>在终端执行以下命令，在文件夹<code>database/migrations/</code>新增迁移文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:migration --table=menus create_menus_table</span><br></pre></td></tr></table></figure>
<p>在文件夹<code>database/migrations/</code>下打开迁移文件<code>create_menus_table.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Schema\Blueprint;</span><br><span class="line">use Illuminate\Database\Migrations\Migration;</span><br><span class="line"></span><br><span class="line">class CreateMenusTable extends Migration</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Run the migrations.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function up()</span><br><span class="line">    &#123;</span><br><span class="line">        Schema::create(&apos;menus&apos;, function (Blueprint $table) &#123;</span><br><span class="line">            $table-&gt;engine = &apos;InnoDB&apos;;</span><br><span class="line">            $table-&gt;increments(&apos;id&apos;);</span><br><span class="line">            $table-&gt;smallInteger(&apos;parent_id&apos;)-&gt;default(0);</span><br><span class="line">            $table-&gt;string(&apos;ico&apos;, 50);</span><br><span class="line">            $table-&gt;string(&apos;url&apos;, 50);</span><br><span class="line">            $table-&gt;string(&apos;name&apos;, 50);</span><br><span class="line">            $table-&gt;string(&apos;description&apos;, 50);</span><br><span class="line">            $table-&gt;tinyInteger(&apos;sort&apos;)-&gt;default(0);</span><br><span class="line">            $table-&gt;tinyInteger(&apos;is_hide&apos;)-&gt;default(0);</span><br><span class="line">            $table-&gt;timestamps();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Reverse the migrations.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function down()</span><br><span class="line">    &#123;</span><br><span class="line">        Schema::drop(&apos;menus&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打开文件<code>database/seeds/DatabaseSeeder.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Seeder;</span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line">use App\Models\User;</span><br><span class="line">use App\Models\Menu;</span><br><span class="line"></span><br><span class="line">class DatabaseSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Run the database seeds.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        Model::unguard();</span><br><span class="line">        $this-&gt;call(UserTableSeeder::class);</span><br><span class="line">        $this-&gt;call(MenuTableSeeder::class);</span><br><span class="line">        Model::reguard();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class UserTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;users&apos;)-&gt;delete();</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;Ann&apos;, &apos;email&apos; =&gt; &apos;ann@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;Luis&apos;, &apos;email&apos; =&gt; &apos;luis@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;admin&apos;, &apos;email&apos; =&gt; &apos;admin@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MenuTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;menus&apos;)-&gt;delete();</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;首页管理&quot;, &quot;url&quot; =&gt; &quot;index.index&quot;, &apos;description&apos; =&gt; &apos;展示系统的各项基础数据&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;菜单管理&quot;, &quot;url&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;菜单列表&quot;, &quot;url&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;新增菜单&quot;, &quot;url&quot; =&gt; &quot;menu.create&quot;, &apos;description&apos; =&gt; &apos;新增菜单的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;编辑菜单&quot;, &quot;url&quot; =&gt; &quot;menu.edit&quot;, &apos;description&apos; =&gt; &apos;编辑菜单的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;角色管理&quot;, &quot;url&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;角色列表&quot;, &quot;url&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;新增角色&quot;, &quot;url&quot; =&gt; &quot;role.create&quot;, &apos;description&apos; =&gt; &apos;新增角色的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;编辑角色&quot;, &quot;url&quot; =&gt; &quot;role.edit&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;角色赋权&quot;, &quot;url&quot; =&gt; &quot;role.show&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;权限管理&quot;, &quot;url&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;权限列表&quot;, &quot;url&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;新增权限&quot;, &quot;url&quot; =&gt; &quot;permission.create&quot;, &apos;description&apos; =&gt; &apos;新增权限的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;编辑权限&quot;, &quot;url&quot; =&gt; &quot;permission.edit&quot;, &apos;description&apos; =&gt; &apos;编辑权限的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;用户管理&quot;, &quot;url&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;用户列表&quot;, &quot;url&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;新增用户&quot;, &quot;url&quot; =&gt; &quot;user.create&quot;, &apos;description&apos; =&gt; &apos;新增用户的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;编辑用户&quot;, &quot;url&quot; =&gt; &quot;user.edit&quot;, &apos;description&apos; =&gt; &apos;编辑用户的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在终端运行命名如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 生成数据表</span><br><span class="line">php artisan migrate</span><br><span class="line"></span><br><span class="line">// 填充数据表</span><br><span class="line">php artisan db:seed</span><br></pre></td></tr></table></figure>
<p>进行上述操作之后，会在数据库生成menus数据表并往menus数据表里面填充数据</p>
<h1 id="新增模型"><a class="header-anchor" href="#新增模型"></a>新增模型</h1>
<hr>
<p>在终端执行以下命令，在文件夹<code>app/Models/</code>新建文件<code>Menu.php</code>、<code>Tree.php</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:model Models/Menu</span><br><span class="line">php artisan make:model Models/Tree</span><br></pre></td></tr></table></figure>
<p>打开文件<code>Menu.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Models;</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line"></span><br><span class="line">class Menu extends Model</span><br><span class="line">&#123;</span><br><span class="line">    protected $guarded = [];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取侧边栏菜单</span><br><span class="line">     * @return string</span><br><span class="line">     */</span><br><span class="line">    public static function getSidebar()</span><br><span class="line">    &#123;</span><br><span class="line">        $tree = Tree::createNodeTree(Menu::all());</span><br><span class="line">        $sidebar = self::setSidebar($tree);</span><br><span class="line"></span><br><span class="line">        return $sidebar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 设置侧边栏菜单</span><br><span class="line">     * @param $tree</span><br><span class="line">     *</span><br><span class="line">     * @return string</span><br><span class="line">     */</span><br><span class="line">    public static function setSidebar($tree)</span><br><span class="line">    &#123;</span><br><span class="line">        $html = &quot;&quot;;</span><br><span class="line">        foreach ($tree as $menu) &#123;</span><br><span class="line">            if ($menu-&gt;is_hide == 0) &#123;</span><br><span class="line">                if ($menu-&gt;child) &#123;</span><br><span class="line">                    $html .= &apos;&lt;li class=&quot;treeview&quot;&gt;&apos;</span><br><span class="line">                        . &apos;&lt;a&gt;&lt;i class=&quot;fa fa-bars&quot;&gt;&lt;/i&gt; &lt;span&gt;&apos; . $menu-&gt;name . &apos;&lt;/span&gt;&lt;i class=&quot;fa fa-angle-left pull-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;&apos;</span><br><span class="line">                        . &apos;&lt;ul class=&quot;treeview-menu&quot;&gt;&apos;</span><br><span class="line">                        . self::setSidebar($menu-&gt;child)</span><br><span class="line">                        . &apos;&lt;/ul&gt;&apos;</span><br><span class="line">                        . &apos;&lt;/li&gt;&apos;;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    $html .= &apos;&lt;li&gt;&lt;a href=&quot;&apos; . route($menu-&gt;url) . &apos;&quot;&gt;&lt;i class=&quot;fa fa-bars&quot;&gt;&lt;/i&gt;&lt;span&gt; &apos; . $menu-&gt;name . &apos;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&apos;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打开文件<code>Tree.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Models;</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Class Tree</span><br><span class="line"> * 树的创建与操作</span><br><span class="line"> *</span><br><span class="line"> * @package App\Models</span><br><span class="line"> */</span><br><span class="line">class Tree extends Model</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 生成无序层级树</span><br><span class="line">     *</span><br><span class="line">     * @param        $models</span><br><span class="line">     * @param int    $parent_id</span><br><span class="line">     * @param int    $level</span><br><span class="line">     * @param string $html</span><br><span class="line">     *</span><br><span class="line">     * @return array</span><br><span class="line">     */</span><br><span class="line">    public static function createLevelTree($models, $parent_id = 0, $level = 0, $html = &quot;-&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        $tree = [];</span><br><span class="line">        foreach ($models as $model) &#123;</span><br><span class="line">            if ($model-&gt;parent_id == $parent_id) &#123;</span><br><span class="line"></span><br><span class="line">                if ($level != 0) &#123;</span><br><span class="line">                    $model-&gt;html = str_repeat(&quot;    &quot;, $level);</span><br><span class="line">                    $model-&gt;html .= &apos;|&apos;;</span><br><span class="line">                &#125;</span><br><span class="line">                $model-&gt;html .= str_repeat($html, $level);</span><br><span class="line">                $tree[] = $model;</span><br><span class="line">                $tree = array_merge($tree, self::createLevelTree($models, $model-&gt;id, $level + 1));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $tree;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 生成无序节点树</span><br><span class="line">     *</span><br><span class="line">     * @param        $models</span><br><span class="line">     * @param int    $parent_id</span><br><span class="line">     * @param string $node</span><br><span class="line">     *</span><br><span class="line">     * @return array</span><br><span class="line">     */</span><br><span class="line">    public static function createNodeTree($models, $parent_id = 0, $node = &apos;child&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $tree = [];</span><br><span class="line"></span><br><span class="line">        foreach ($models as $model) &#123;</span><br><span class="line">            if ($model-&gt;parent_id == $parent_id) &#123;</span><br><span class="line">                $model-&gt;$node = self::createNodeTree($models, $model-&gt;id);</span><br><span class="line">                $tree[] = $model;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $tree;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增验证请求"><a class="header-anchor" href="#新增验证请求"></a>新增验证请求</h1>
<hr>
<p>在终端执行以下命令，在文件夹<code>app/Http/Requests/Form</code>下新增表单验证<code>MenuForm</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:request Form/MenuForm</span><br></pre></td></tr></table></figure>
<p>修改文件<code>MenuForm</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Requests\Form;</span><br><span class="line"></span><br><span class="line">use App\Http\Requests\Request;</span><br><span class="line"></span><br><span class="line">class MenuForm extends Request</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Determine if the user is authorized to make this request.</span><br><span class="line">     *</span><br><span class="line">     * @return bool</span><br><span class="line">     */</span><br><span class="line">    public function authorize()</span><br><span class="line">    &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Get the validation rules that apply to the request.</span><br><span class="line">     *</span><br><span class="line">     * @return array</span><br><span class="line">     */</span><br><span class="line">    public function rules()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;url&apos;       =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;name&apos;      =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;parent_id&apos; =&gt; &apos;required&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function messages()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;url.required&apos;       =&gt; &apos;菜单地址不能为空&apos;,</span><br><span class="line">            &apos;name.required&apos;      =&gt; &apos;菜单名称不能为空&apos;,</span><br><span class="line">            &apos;parent_id.required&apos; =&gt; &apos;父级分类不能为空&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增控制器menucontroller"><a class="header-anchor" href="#新增控制器menucontroller"></a>新增控制器MenuController</h1>
<hr>
<p>在终端执行以下命令，在文件夹<code>app/Http/Controllers/Backend</code>新增文件<code>MenuController.php</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:controller Backend/MenuController</span><br></pre></td></tr></table></figure>
<p>修改文件<code>MenuController.php</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Controllers\Backend;</span><br><span class="line"></span><br><span class="line">use App\Models\Menu;</span><br><span class="line">use App\Models\Tree;</span><br><span class="line">use App\Http\Requests;</span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line">use App\Http\Requests\Form\MenuForm;</span><br><span class="line"></span><br><span class="line">class MenuController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Display a listing of the resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $menus = Menu::paginate(25);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.menu.index&apos;, compact(&apos;menus&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for creating a new resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function create()</span><br><span class="line">    &#123;</span><br><span class="line">        $tree = Tree::createLevelTree(Menu::all());</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.menu.create&apos;, compact(&apos;tree&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Store a newly created resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function store(MenuForm $request)</span><br><span class="line">    &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            if (Menu::create($request-&gt;all())) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&quot;新增菜单成功&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()))-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Display the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function show($id)</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for editing the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function edit($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $menu = Menu::find($id);</span><br><span class="line">        $tree = Tree::createLevelTree(Menu::all());</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.menu.edit&apos;, compact(&apos;menu&apos;, &apos;tree&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Update the specified resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     * @param  int                      $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function update(MenuForm $request, $id)</span><br><span class="line">    &#123;</span><br><span class="line">        $data = $request-&gt;all();</span><br><span class="line">        unset($data[&apos;_method&apos;]);</span><br><span class="line">        unset($data[&apos;_token&apos;]);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            if (Menu::where(&apos;id&apos;, $id)-&gt;update($data)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&apos;编辑菜单成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()))-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Remove the specified resource from storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function destroy($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $childMenus = Menu::where(&apos;parent_id&apos;, &apos;=&apos;, $id)-&gt;get()-&gt;toArray();</span><br><span class="line"></span><br><span class="line">        if ( ! empty($childMenus)) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(&quot;请先删除其下级分类&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            if (Menu::destroy($id)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&apos;删除菜单成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增路由"><a class="header-anchor" href="#新增路由"></a>新增路由</h1>
<hr>
<p>在文件<code>app\Http\routes.php</code>修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Route::group([&apos;namespace&apos; =&gt; &apos;Backend&apos;, &apos;middleware&apos; =&gt; [&apos;auth&apos;]], function () &#123;</span><br><span class="line">    Route::get(&apos;/&apos;, [&apos;as&apos; =&gt; &apos;index.index&apos;, &apos;uses&apos; =&gt; &apos;IndexController@index&apos;]);</span><br><span class="line">    Route::resource(&apos;user&apos;, &apos;UserController&apos;);</span><br><span class="line">    Route::resource(&apos;menu&apos;, &apos;MenuController&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::group([&apos;namespace&apos; =&gt; &apos;Auth&apos;], function () &#123;</span><br><span class="line">    Route::get(&apos;auth/login&apos;, &apos;AuthController@getLogin&apos;);</span><br><span class="line">    Route::post(&apos;auth/login&apos;, &apos;AuthController@postLogin&apos;);</span><br><span class="line">    Route::get(&apos;auth/logout&apos;, &apos;AuthController@getLogout&apos;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="新增视图"><a class="header-anchor" href="#新增视图"></a>新增视图</h1>
<hr>
<p>在文件夹<code>resources/views/backend/</code>新建文件夹<code>menu</code>，并新建以下模板文件：</p>
<ul>
<li>edit.blade.php</li>
<li>index.blade.php</li>
<li>create.blade.php</li>
</ul>
<h3 id="index-blade-php"><a class="header-anchor" href="#index-blade-php"></a>index.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line"></span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-1&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;small-box&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;&#123;&#123;URL::to(&apos;menu/create&apos;)&#125;&#125;&quot; class=&quot;btn btn-success&quot;&gt;新增菜单&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-12&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-primary&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                    &lt;h3 class=&quot;box-title&quot;&gt;菜单列表&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;box-tools pull-right&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;input-group input-group-sm&quot; style=&quot;width: 150px;&quot;&gt;</span><br><span class="line">                            &lt;input type=&quot;text&quot; name=&quot;table_search&quot; class=&quot;form-control pull-right&quot; placeholder=&quot;快速查询&quot;&gt;</span><br><span class="line">                            &lt;div class=&quot;input-group-btn&quot;&gt;</span><br><span class="line">                                &lt;button type=&quot;button&quot; class=&quot;btn btn-default disabled&quot;&gt;</span><br><span class="line">                                    &lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                &lt;/button&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-body table-responsive no-padding&quot;&gt;</span><br><span class="line">                    &lt;table class=&quot;table table-hover&quot;&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                            &lt;th&gt;菜单编号&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;菜单名称&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;菜单地址&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                        @forelse($menus as $menu)</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$menu-&gt;id&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$menu-&gt;name&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$menu-&gt;url&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;</span><br><span class="line">                                    &lt;a class=&quot;btn btn-info&quot; href=&quot;&#123;&#123;URL::to(&apos;menu/&apos;.$menu-&gt;id.&apos;/edit&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        编辑</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                    &lt;button class=&quot;btn btn-danger&quot; data-toggle=&quot;modal&quot; data-target=&quot;#defalutModal&quot; data-url=&quot;&#123;&#123;URL::to(&apos;menu/&apos;.$menu-&gt;id)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        删除</span><br><span class="line">                                    &lt;/button&gt;</span><br><span class="line">                                &lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @empty</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td colspan=&quot;4&quot; class=&quot;text-center&quot;&gt;暂无数据&lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @endforelse</span><br><span class="line">                    &lt;/table&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                @if($menus-&gt;render() !== &quot;&quot;)</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &#123;!! $menus-&gt;render() !!&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                @endif</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    @include(&apos;backend.layout.model.default&apos;,[&apos;model_title&apos;=&gt;&apos;操作提示&apos;,&apos;model_content&apos;=&gt;&apos;你确定要删除这条菜单吗?&apos;])</span><br><span class="line">@stop</span><br><span class="line">@section(&apos;script&apos;)</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        $(&apos;#defalutModal&apos;).on(&apos;show.bs.modal&apos;, function (event) &#123;</span><br><span class="line">            var button = $(event.relatedTarget);</span><br><span class="line">            var url = button.data(&apos;url&apos;);</span><br><span class="line">            var modal = $(this);</span><br><span class="line"></span><br><span class="line">            modal.find(&apos;form&apos;).attr(&apos;action&apos;, url);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h3 id="create-blade-php"><a class="header-anchor" href="#create-blade-php"></a>create.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-primary&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;menu&apos;)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;&#123;&#123;$page_title or &quot;Page Title&quot;&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label class=&quot;col-sm-3 control-label&quot;&gt;父级菜单&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;select class=&quot;form-control select2&quot; name=&quot;parent_id&quot;&gt;</span><br><span class="line">                                    &lt;option value=&quot;0&quot;&gt;/&lt;/option&gt;</span><br><span class="line">                                    @foreach($tree as $menu)</span><br><span class="line">                                    &lt;option value=&quot;&#123;&#123;$menu-&gt;id&#125;&#125;&quot; @if(old(&apos;parent_id&apos;) == $menu-&gt;id) selected @endif &gt;&#123;&#123;$menu-&gt;html&#125;&#125;&#123;&#123;$menu-&gt;name&#125;&#125;&lt;/option&gt;</span><br><span class="line">                                    @endforeach</span><br><span class="line">                                &lt;/select&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;parent_id&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;菜单名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;菜单名称&quot; value=&quot;&#123;&#123;old(&apos;name&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;url&quot; class=&quot;col-sm-3 control-label&quot;&gt;菜单地址&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;url&quot; name=&quot;url&quot; placeholder=&quot;Controller.method&quot; value=&quot;&#123;&#123;old(&apos;url&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;url&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(-1);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h3 id="edit-blade-php"><a class="header-anchor" href="#edit-blade-php"></a>edit.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;menu/&apos;.$menu-&gt;id)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;编辑菜单&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;put&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label class=&quot;col-sm-3 control-label&quot;&gt;父级菜单&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;select class=&quot;form-control select2&quot; name=&quot;parent_id&quot;&gt;</span><br><span class="line">                                    &lt;option value=&quot;0&quot;&gt;/&lt;/option&gt;</span><br><span class="line">                                    @foreach($tree as $data)</span><br><span class="line">                                        &lt;option value=&quot;&#123;&#123;$data-&gt;id&#125;&#125;&quot; @if($menu-&gt;parent_id == $data-&gt;id) selected @endif &gt;&#123;&#123;$data-&gt;html&#125;&#125;&#123;&#123;$data-&gt;name&#125;&#125;&lt;/option&gt;</span><br><span class="line">                                    @endforeach</span><br><span class="line">                                &lt;/select&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;parent_id&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;菜单名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;菜单名称&quot; value=&quot;&#123;&#123;$menu-&gt;name&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;url&quot; class=&quot;col-sm-3 control-label&quot;&gt;菜单地址&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;url&quot; name=&quot;url&quot; placeholder=&quot;Controller/method&quot; value=&quot;&#123;&#123;$menu-&gt;url&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;url&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(-1);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br><span class="line">@section(&apos;script&apos;)</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        $(function()&#123;</span><br><span class="line">            $(&quot;.select2&quot;).select2();</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h1 id="视图共享数据"><a class="header-anchor" href="#视图共享数据"></a>视图共享数据</h1>
<hr>
<p>打开文件<code>resources/views/backend/layout/sidebar.blade.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;aside class=&quot;main-sidebar&quot;&gt;</span><br><span class="line">    &lt;section class=&quot;sidebar&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;user-panel&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;pull-left image&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;&#123;&#123; asset(&quot;/assets/img/user2-160x160.jpg&quot;) &#125;&#125;&quot; class=&quot;img-circle&quot; alt=&quot;User Image&quot;/&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;pull-left info&quot;&gt;</span><br><span class="line">                &lt;p&gt;Alexander Pierce&lt;/p&gt;</span><br><span class="line">                &lt;a href=&quot;#&quot;&gt;&lt;i class=&quot;fa fa-circle text-success&quot;&gt;&lt;/i&gt; Online&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;form action=&quot;#&quot; method=&quot;get&quot; class=&quot;sidebar-form&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;input-group&quot;&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; name=&quot;q&quot; class=&quot;form-control&quot; placeholder=&quot;Search...&quot;/&gt;</span><br><span class="line">                &lt;span class=&quot;input-group-btn&quot;&gt;</span><br><span class="line">                  &lt;button type=&apos;submit&apos; name=&apos;search&apos; id=&apos;search-btn&apos; class=&quot;btn btn-flat&quot;&gt;</span><br><span class="line">                      &lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">                  &lt;/button&gt;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">        &lt;ul class=&quot;sidebar-menu&quot;&gt;</span><br><span class="line">            @inject(&apos;menu&apos;,&apos;App\Models\Menu&apos;)</span><br><span class="line">            &#123;!! $menu::getSidebar() !!&#125;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">&lt;/aside&gt;</span><br></pre></td></tr></table></figure>
<p>完成上述操作后，便可以在每个视图都能看到共享的侧边栏菜单数据</p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（八）</title>
    <url>/2016/04/04/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E5%85%AB%EF%BC%89/</url>
    <content><![CDATA[<p>新增权限管理模块，管理权限的增删查改。</p>
<h1 id="新增请求"><a class="header-anchor" href="#新增请求"></a>新增请求</h1>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:request Form/PermissionForm</span><br></pre></td></tr></table></figure>
<p>文件<code>PermissionForm</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Requests\Form;</span><br><span class="line"></span><br><span class="line">use App\Http\Requests\Request;</span><br><span class="line"></span><br><span class="line">class PermissionForm extends Request</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Determine if the user is authorized to make this request.</span><br><span class="line">     *</span><br><span class="line">     * @return bool</span><br><span class="line">     */</span><br><span class="line">    public function authorize()</span><br><span class="line">    &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Get the validation rules that apply to the request.</span><br><span class="line">     *</span><br><span class="line">     * @return array</span><br><span class="line">     */</span><br><span class="line">    public function rules()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;name&apos;         =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;display_name&apos; =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;description&apos;  =&gt; &apos;required&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function messages()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;name.required&apos;         =&gt; &apos;权限标识不能为空&apos;,</span><br><span class="line">            &apos;display_name.required&apos; =&gt; &apos;权限名称不能为空&apos;,</span><br><span class="line">            &apos;description.required&apos;  =&gt; &apos;权限描述不能为空&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增控制器"><a class="header-anchor" href="#新增控制器"></a>新增控制器</h1>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:controller Backend/PermissionController</span><br></pre></td></tr></table></figure>
<p>文件<code>PermissionController.php</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Controllers\Backend;</span><br><span class="line"></span><br><span class="line">use App\Models\Permission;</span><br><span class="line">use App\Http\Requests;</span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line">use App\Http\Requests\Form\PermissionForm;</span><br><span class="line"></span><br><span class="line">class PermissionController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Display a listing of the resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $permissions = Permission::paginate(25);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.permission.index&apos;, compact(&apos;permissions&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for creating a new resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function create()</span><br><span class="line">    &#123;</span><br><span class="line">        return view(&apos;backend.permission.create&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Store a newly created resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function store(PermissionForm $request)</span><br><span class="line">    &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            if (Permission::create($request-&gt;all())) &#123;</span><br><span class="line">                return redirect()-&gt;route(&apos;permission.index&apos;)-&gt;withSuccess(&apos;新增权限成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors([&apos;error&apos; =&gt; $e-&gt;getMessage()])-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Display the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function show($id)</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for editing the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function edit($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $permission = Permission::find($id);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.permission.edit&apos;, compact(&apos;permission&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Update the specified resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     * @param  int                      $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function update(PermissionForm $request, $id)</span><br><span class="line">    &#123;</span><br><span class="line">        $data = $request-&gt;all();</span><br><span class="line"></span><br><span class="line">        unset($data[&apos;_token&apos;]);</span><br><span class="line">        unset($data[&apos;_method&apos;]);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            if (Permission::where(&apos;id&apos;, &apos;=&apos;, $id)-&gt;update($data)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&quot;新增权限成功&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors([&apos;error&apos; =&gt; $e-&gt;getMessage()])-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Remove the specified resource from storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function destroy($id)</span><br><span class="line">    &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            if (Permission::destroy($id)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&quot;删除菜单成功&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors([&apos;error&apos; =&gt; $e-&gt;getMessage()])-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增视图"><a class="header-anchor" href="#新增视图"></a>新增视图</h1>
<hr>
<p>在文件夹<code>resources/views/permission/</code>下新增文件</p>
<ul>
<li>index.blade.php</li>
<li>create.blade.php</li>
<li>edit.blade.php</li>
</ul>
<h2 id="index-blade-php"><a class="header-anchor" href="#index-blade-php"></a>index.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line"></span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-1&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;small-box&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;&#123;&#123;URL::to(&apos;permission/create&apos;)&#125;&#125;&quot; class=&quot;btn btn-success&quot;&gt;新增权限&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-12&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                    &lt;h3 class=&quot;box-title&quot;&gt;权限列表&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;box-tools pull-right&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;input-group input-group-sm&quot; style=&quot;width: 150px;&quot;&gt;</span><br><span class="line">                            &lt;input type=&quot;text&quot; name=&quot;table_search&quot; class=&quot;form-control pull-right&quot; placeholder=&quot;快速查询&quot;&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;div class=&quot;input-group-btn&quot;&gt;</span><br><span class="line">                                &lt;button type=&quot;button&quot; class=&quot;btn btn-default disabled&quot;&gt;</span><br><span class="line">                                    &lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                &lt;/button&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-body table-responsive no-padding&quot;&gt;</span><br><span class="line">                    &lt;table class=&quot;table table-hover&quot;&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                            &lt;th&gt;权限编号&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;权限标识&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;权限名称&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;权限描述&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;管理操作&lt;/th&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                        @forelse($permissions as $permission)</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$permission-&gt;id&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$permission-&gt;name&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$permission-&gt;display_name&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$permission-&gt;description&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;</span><br><span class="line">                                    &lt;a class=&quot;btn btn-info&quot; href=&quot;&#123;&#123;URL::to(&apos;permission/&apos;.$permission-&gt;id.&apos;/edit&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        编辑</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                    &lt;a class=&quot;btn btn-danger&quot; data-toggle=&quot;modal&quot; data-target=&quot;#defalutModal&quot; data-url=&quot;&#123;&#123;URL::to(&apos;permission/&apos;.$permission-&gt;id)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        删除</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                &lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @empty</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td colspan=&quot;5&quot; class=&quot;text-center&quot;&gt;暂无数据&lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @endforelse</span><br><span class="line">                    &lt;/table&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                @if($permissions-&gt;render() !== &quot;&quot;)</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &#123;!! $permissions-&gt;render() !!&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                @endif</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    @include(&apos;backend.layout.model.default&apos;,[&apos;model_title&apos;=&gt;&apos;操作提示&apos;,&apos;model_content&apos;=&gt;&apos;你确定要删除这条权限吗?&apos;])</span><br><span class="line">@stop</span><br><span class="line">@section(&apos;script&apos;)</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        $(&apos;#defalutModal&apos;).on(&apos;show.bs.modal&apos;, function (event) &#123;</span><br><span class="line">            var button = $(event.relatedTarget);</span><br><span class="line">            var url = button.data(&apos;url&apos;);</span><br><span class="line">            var modal = $(this);</span><br><span class="line"></span><br><span class="line">            modal.find(&apos;form&apos;).attr(&apos;action&apos;, url);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h2 id="edit-blade-php"><a class="header-anchor" href="#edit-blade-php"></a>edit.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;permission/&apos;.$permission-&gt;id)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;编辑菜单&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;put&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;权限名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;权限名称&quot; value=&quot;&#123;&#123;$permission-&gt;name&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;display_name&quot; class=&quot;col-sm-3 control-label&quot;&gt;权限标识&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;display_name&quot; name=&quot;display_name&quot; placeholder=&quot;权限标识&quot; value=&quot;&#123;&#123;$permission-&gt;display_name&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;display_name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;description&quot; class=&quot;col-sm-3 control-label&quot;&gt;菜单地址&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;description&quot; name=&quot;description&quot; placeholder=&quot;权限描述&quot; value=&quot;&#123;&#123;$permission-&gt;description&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;description&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(-1);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h2 id="create-blade-php"><a class="header-anchor" href="#create-blade-php"></a>create.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;permission&apos;)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;&#123;&#123;$page_title or &quot;Page Title&quot;&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;权限标识&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;权限标识&quot; value=&quot;&#123;&#123;old(&apos;name&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;display_name&quot; class=&quot;col-sm-3 control-label&quot;&gt;权限名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;display_name&quot; name=&quot;display_name&quot; placeholder=&quot;权限名称&quot; value=&quot;&#123;&#123;old(&apos;display_name&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;display_name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;description&quot; class=&quot;col-sm-3 control-label&quot;&gt;权限描述&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;description&quot; name=&quot;description&quot; placeholder=&quot;权限名称&quot; value=&quot;&#123;&#123;old(&apos;description&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;description&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(-1);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h1 id="填充数据"><a class="header-anchor" href="#填充数据"></a>填充数据</h1>
<hr>
<p>打开文件<code>database/seeds/DatabaseSeeder.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Seeder;</span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line">use App\Models\User;</span><br><span class="line">use App\Models\Menu;</span><br><span class="line">use App\Models\Role;</span><br><span class="line"></span><br><span class="line">class DatabaseSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Run the database seeds.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        Model::unguard();</span><br><span class="line">        $this-&gt;call(UserTableSeeder::class);</span><br><span class="line">        $this-&gt;call(MenuTableSeeder::class);</span><br><span class="line">        $this-&gt;call(RoleTableSeeder::class);</span><br><span class="line">        $this-&gt;call(PermissionTableSeeder::class);</span><br><span class="line">        Model::reguard();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class UserTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;users&apos;)-&gt;delete();</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;Ann&apos;, &apos;email&apos; =&gt; &apos;ann@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;Luis&apos;, &apos;email&apos; =&gt; &apos;luis@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">        User::create([&apos;name&apos; =&gt; &apos;admin&apos;, &apos;email&apos; =&gt; &apos;admin@qq.com&apos;, &apos;password&apos; =&gt; bcrypt(123456)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MenuTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;menus&apos;)-&gt;delete();</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;首页管理&quot;, &quot;url&quot; =&gt; &quot;index.index&quot;, &apos;description&apos; =&gt; &apos;展示系统的各项基础数据&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;菜单管理&quot;, &quot;url&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;菜单列表&quot;, &quot;url&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;新增菜单&quot;, &quot;url&quot; =&gt; &quot;menu.create&quot;, &apos;description&apos; =&gt; &apos;新增菜单的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;2&quot;, &quot;name&quot; =&gt; &quot;编辑菜单&quot;, &quot;url&quot; =&gt; &quot;menu.edit&quot;, &apos;description&apos; =&gt; &apos;编辑菜单的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;角色管理&quot;, &quot;url&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;角色列表&quot;, &quot;url&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;新增角色&quot;, &quot;url&quot; =&gt; &quot;role.create&quot;, &apos;description&apos; =&gt; &apos;新增角色的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;编辑角色&quot;, &quot;url&quot; =&gt; &quot;role.edit&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;6&quot;, &quot;name&quot; =&gt; &quot;角色赋权&quot;, &quot;url&quot; =&gt; &quot;role.show&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;权限管理&quot;, &quot;url&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;权限列表&quot;, &quot;url&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;新增权限&quot;, &quot;url&quot; =&gt; &quot;permission.create&quot;, &apos;description&apos; =&gt; &apos;新增权限的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;11&quot;, &quot;name&quot; =&gt; &quot;编辑权限&quot;, &quot;url&quot; =&gt; &quot;permission.edit&quot;, &apos;description&apos; =&gt; &apos;编辑权限的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;0&quot;, &quot;name&quot; =&gt; &quot;用户管理&quot;, &quot;url&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;用户列表&quot;, &quot;url&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;新增用户&quot;, &quot;url&quot; =&gt; &quot;user.create&quot;, &apos;description&apos; =&gt; &apos;新增用户的页面&apos;]);</span><br><span class="line">        Menu::create([&quot;parent_id&quot; =&gt; &quot;15&quot;, &quot;name&quot; =&gt; &quot;编辑用户&quot;, &quot;url&quot; =&gt; &quot;user.edit&quot;, &apos;description&apos; =&gt; &apos;编辑用户的页面&apos;, &apos;is_hide&apos; =&gt; 1]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class RoleTableSeeder extends Seeder&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;roles&apos;)-&gt;delete();</span><br><span class="line">        Role::create([&apos;name&apos; =&gt; &apos;admin&apos;, &apos;display_name&apos; =&gt; &apos;User Administrator&apos;, &apos;description&apos; =&gt; &apos;User is allowed to manage and edit other users&apos;]);</span><br><span class="line">        Role::create([&apos;name&apos; =&gt; &apos;owner&apos;, &apos;display_name&apos; =&gt; &apos;Project Owner&apos;, &apos;description&apos; =&gt; &apos;User is the owner of a given project&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class PermissionTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        DB::table(&apos;permissions&apos;)-&gt;delete();</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;首页管理&quot;, &quot;name&quot; =&gt; &quot;index.index&quot;, &apos;description&apos; =&gt; &apos;展示系统的各项基础数据&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;菜单列表&quot;, &quot;name&quot; =&gt; &quot;menu.index&quot;, &apos;description&apos; =&gt; &apos;管理菜单的新增、编辑、删除&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;新增菜单&quot;, &quot;name&quot; =&gt; &quot;menu.create&quot;, &apos;description&apos; =&gt; &apos;新增菜单的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;编辑菜单&quot;, &quot;name&quot; =&gt; &quot;menu.edit&quot;, &apos;description&apos; =&gt; &apos;编辑菜单的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;角色列表&quot;, &quot;name&quot; =&gt; &quot;role.index&quot;, &apos;description&apos; =&gt; &apos;管理角色的新增、编辑、删除&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;新增角色&quot;, &quot;name&quot; =&gt; &quot;role.create&quot;, &apos;description&apos; =&gt; &apos;新增角色的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;编辑角色&quot;, &quot;name&quot; =&gt; &quot;role.edit&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;角色赋权&quot;, &quot;name&quot; =&gt; &quot;role.show&quot;, &apos;description&apos; =&gt; &apos;编辑角色的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;权限列表&quot;, &quot;name&quot; =&gt; &quot;permission.index&quot;, &apos;description&apos; =&gt; &apos;管理权限的新增、编辑、删除&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;新增权限&quot;, &quot;name&quot; =&gt; &quot;permission.create&quot;, &apos;description&apos; =&gt; &apos;新增权限的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;编辑权限&quot;, &quot;name&quot; =&gt; &quot;permission.edit&quot;, &apos;description&apos; =&gt; &apos;编辑权限的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;用户列表&quot;, &quot;name&quot; =&gt; &quot;user.index&quot;, &apos;description&apos; =&gt; &apos;管理用户的新增、编辑、删除&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;新增用户&quot;, &quot;name&quot; =&gt; &quot;user.create&quot;, &apos;description&apos; =&gt; &apos;新增用户的页面&apos;]);</span><br><span class="line">        Permission::create([&quot;display_name&quot; =&gt; &quot;编辑用户&quot;, &quot;name&quot; =&gt; &quot;user.edit&quot;, &apos;description&apos; =&gt; &apos;编辑用户的页面&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接着在终端执行以下命令回滚并再次执行迁移，填充数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan migrate:refresh --seed</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（四）</title>
    <url>/2016/04/04/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    <content><![CDATA[<p>新增用户管理模块功能</p>
<h1 id="新增验证请求"><a class="header-anchor" href="#新增验证请求"></a>新增验证请求</h1>
<hr>
<p>在终端执行以下命令，在文件夹<code>app/Http/Requests/Form</code>下新增表单验证<code>UserForm</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:request Form/UserForm</span><br></pre></td></tr></table></figure>
<p>修改文件<code>UserForm</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Requests\Form;</span><br><span class="line"></span><br><span class="line">use App\Http\Requests\Request;</span><br><span class="line"></span><br><span class="line">class UserForm extends Request</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Determine if the user is authorized to make this request.</span><br><span class="line">     *</span><br><span class="line">     * @return bool</span><br><span class="line">     */</span><br><span class="line">    public function authorize()</span><br><span class="line">    &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Get the validation rules that apply to the request.</span><br><span class="line">     *</span><br><span class="line">     * @return array</span><br><span class="line">     */</span><br><span class="line">    public function rules()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;name&apos;                  =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;email&apos;                 =&gt; &apos;required&apos;,</span><br><span class="line">            &apos;password&apos;              =&gt; &apos;required|confirmed&apos;,</span><br><span class="line">            &apos;password_confirmation&apos; =&gt; &apos;required&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function messages()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            &apos;name.required&apos;                  =&gt; &apos;用户名称不能为空&apos;,</span><br><span class="line">            &apos;email.required&apos;                 =&gt; &apos;用户邮箱不能为空&apos;,</span><br><span class="line">            &apos;password.required&apos;              =&gt; &apos;用户密码不能为空&apos;,</span><br><span class="line">            &apos;password.confirmed&apos;             =&gt; &apos;确认密码不一致&apos;,</span><br><span class="line">            &apos;password_confirmation.required&apos; =&gt; &apos;确认密码不能为空&apos;</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增控制器usercontroller"><a class="header-anchor" href="#新增控制器usercontroller"></a>新增控制器UserController</h1>
<hr>
<p>在终端执行以下命令，在文件夹<code>app/Http/Controllers/Backend</code>新增文件<code>UserController.php</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:controller Backend/UserController</span><br></pre></td></tr></table></figure>
<p>修改文件<code>UserController.php</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Controllers\Backend;</span><br><span class="line"></span><br><span class="line">use App\Models\User;</span><br><span class="line">use App\Http\Requests\Form\UserForm;</span><br><span class="line">use App\Http\Requests;</span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line"></span><br><span class="line">class UserController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Display a listing of the resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $users = User::paginate(25);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.user.index&apos;, compact(&apos;users&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for creating a new resource.</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function create()</span><br><span class="line">    &#123;</span><br><span class="line">        return view(&apos;backend.user.create&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Store a newly created resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function store(UserForm $request)</span><br><span class="line">    &#123;</span><br><span class="line">        $data = [</span><br><span class="line">            &apos;name&apos;     =&gt; $request[&apos;name&apos;],</span><br><span class="line">            &apos;email&apos;    =&gt; $request[&apos;email&apos;],</span><br><span class="line">            &apos;password&apos; =&gt; bcrypt($request[&apos;password&apos;]),</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            if (User::create($data)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&apos;新增用户成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()))-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Display the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function show($id)</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Show the form for editing the specified resource.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function edit($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $user = User::find($id);</span><br><span class="line"></span><br><span class="line">        return view(&apos;backend.user.edit&apos;, compact(&apos;user&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Update the specified resource in storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Http\Request $request</span><br><span class="line">     * @param  int                      $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function update(UserForm $request, $id)</span><br><span class="line">    &#123;</span><br><span class="line">        $data = [</span><br><span class="line">            &apos;name&apos;     =&gt; $request[&apos;name&apos;],</span><br><span class="line">            &apos;email&apos;    =&gt; $request[&apos;email&apos;],</span><br><span class="line">            &apos;password&apos; =&gt; bcrypt($request[&apos;password&apos;]),</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            if (User::where(&apos;id&apos;, $id)-&gt;update($data)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&apos;编辑用户成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()))-&gt;withInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Remove the specified resource from storage.</span><br><span class="line">     *</span><br><span class="line">     * @param  int $id</span><br><span class="line">     *</span><br><span class="line">     * @return \Illuminate\Http\Response</span><br><span class="line">     */</span><br><span class="line">    public function destroy($id)</span><br><span class="line">    &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            if (User::destroy($id)) &#123;</span><br><span class="line">                return redirect()-&gt;back()-&gt;withSuccess(&apos;删除用户成功&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (\Exception $e) &#123;</span><br><span class="line">            return redirect()-&gt;back()-&gt;withErrors(array(&apos;error&apos; =&gt; $e-&gt;getMessage()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增路由"><a class="header-anchor" href="#新增路由"></a>新增路由</h1>
<hr>
<p>在文件<code>app\Http\routes.php</code>新增代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Route::group([&apos;namespace&apos; =&gt; &apos;Backend&apos;, &apos;middleware&apos; =&gt; [&apos;auth&apos;]], function () &#123;</span><br><span class="line">    Route::get(&apos;/&apos;, &apos;IndexController@index&apos;);</span><br><span class="line">    Route::resource(&apos;user&apos;, &apos;UserController&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="新增视图"><a class="header-anchor" href="#新增视图"></a>新增视图</h1>
<hr>
<p>在文件夹<code>resources/views/backend/</code>新建文件夹<code>user</code>，并新建以下模板文件：</p>
<ul>
<li>index.blade.php</li>
<li>create.blade.php</li>
<li>edit.blade.php</li>
</ul>
<h3 id="index-blade-php"><a class="header-anchor" href="#index-blade-php"></a>index.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line"></span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-1&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;small-box&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;&#123;&#123;URL::to(&apos;user/create&apos;)&#125;&#125;&quot; class=&quot;btn btn-success&quot;&gt;新增用户&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-12&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                    &lt;h3 class=&quot;box-title&quot;&gt;用户列表&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;div class=&quot;box-tools pull-right&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;input-group input-group-sm&quot; style=&quot;width: 150px;&quot;&gt;</span><br><span class="line">                            &lt;input type=&quot;text&quot; name=&quot;table_search&quot; class=&quot;form-control pull-right&quot; placeholder=&quot;快速查询&quot;&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;div class=&quot;input-group-btn&quot;&gt;</span><br><span class="line">                                &lt;button type=&quot;button&quot; class=&quot;btn btn-default disabled&quot;&gt;</span><br><span class="line">                                    &lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                &lt;/button&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                &lt;div class=&quot;box-body table-responsive no-padding&quot;&gt;</span><br><span class="line">                    &lt;table class=&quot;table table-hover&quot;&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                            &lt;th&gt;用户编号&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;用户名称&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;用户邮箱&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;所属角色&lt;/th&gt;</span><br><span class="line">                            &lt;th&gt;管理操作&lt;/th&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                        @forelse($users as $user)</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$user-&gt;id&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$user-&gt;name&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&#123;&#123;$user-&gt;email&#125;&#125;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;</span><br><span class="line">                                    &lt;a class=&quot;btn btn-info&quot; href=&quot;&#123;&#123;URL::to(&apos;user/&apos;.$user-&gt;id.&apos;/edit&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        编辑</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                    &lt;button class=&quot;btn btn-danger&quot; data-toggle=&quot;modal&quot; data-target=&quot;#defalutModal&quot; data-url=&quot;&#123;&#123;URL::to(&apos;user/&apos;.$user-&gt;id)&#125;&#125;&quot;&gt;</span><br><span class="line">                                        删除</span><br><span class="line">                                    &lt;/button&gt;</span><br><span class="line">                                &lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @empty</span><br><span class="line">                            &lt;tr&gt;</span><br><span class="line">                                &lt;td colspan=&quot;4&quot; class=&quot;text-center&quot;&gt;暂无数据&lt;/td&gt;</span><br><span class="line">                            &lt;/tr&gt;</span><br><span class="line">                        @endforelse</span><br><span class="line">                    &lt;/table&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                @if($users-&gt;render() !== &quot;&quot;)</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &#123;!! $users-&gt;render() !!&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                @endif</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    @include(&apos;backend.layout.model.default&apos;,[&apos;model_title&apos;=&gt;&apos;操作提示&apos;,&apos;model_content&apos;=&gt;&apos;你确定要删除这名用户吗?&apos;])</span><br><span class="line">@stop</span><br><span class="line">@section(&apos;script&apos;)</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        $(&apos;#defalutModal&apos;).on(&apos;show.bs.modal&apos;, function (event) &#123;</span><br><span class="line">            var button = $(event.relatedTarget);</span><br><span class="line">            var url = button.data(&apos;url&apos;);</span><br><span class="line">            var modal = $(this);</span><br><span class="line"></span><br><span class="line">            modal.find(&apos;form&apos;).attr(&apos;action&apos;, url);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h3 id="create-blade-php"><a class="header-anchor" href="#create-blade-php"></a>create.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;user&apos;)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;&#123;&#123;$page_title or &quot;page_title&quot;&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label class=&quot;col-sm-3 control-label&quot;&gt;用户角色&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;select class=&quot;form-control select2&quot; name=&quot;role_id&quot;&gt;</span><br><span class="line">                                    &lt;option value=&quot;0&quot;&gt;/&lt;/option&gt;</span><br><span class="line">                                    &#123;&#123;--@foreach($roles as $role)--&#125;&#125;</span><br><span class="line">                                        &#123;&#123;--&lt;option value=&quot;&#123;&#123;$role-&gt;id&#125;&#125;&quot;&gt;&#123;&#123;$role-&gt;display_name&#125;&#125;&lt;/option&gt;--&#125;&#125;</span><br><span class="line">                                    &#123;&#123;--@endforeach--&#125;&#125;</span><br><span class="line">                                &lt;/select&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;role_id&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;用户名称&quot; value=&quot;&#123;&#123;old(&apos;name&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;email&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户邮箱&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;用户邮箱&quot; value=&quot;&#123;&#123;old(&apos;email&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;email&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;password&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户密码&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;用户密码&quot; value=&quot;&#123;&#123;old(&apos;password&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;password_confirmation&quot; class=&quot;col-sm-3 control-label&quot;&gt;确认密码&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;password_confirmation&quot; name=&quot;password_confirmation&quot; placeholder=&quot;确认密码&quot; value=&quot;&#123;&#123;old(&apos;password_confirmation&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password_confirmation&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(-1);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h3 id="edit-blade-php"><a class="header-anchor" href="#edit-blade-php"></a>edit.blade.php</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&apos;backend.layout.main&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-info&quot;&gt;</span><br><span class="line">                &lt;form class=&quot;form-horizontal&quot; action=&quot;&#123;&#123;URL::to(&apos;user/&apos;.$user-&gt;id)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                        &lt;h3 class=&quot;box-title&quot;&gt;&#123;&#123;$page_title or &quot;Page_title&quot;&#125;&#125;&lt;/h3&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;put&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;name&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户名称&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; name=&quot;name&quot; placeholder=&quot;用户名称&quot; value=&quot;&#123;&#123;$user-&gt;name&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;name&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;email&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户邮箱&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;用户邮箱&quot; value=&quot;&#123;&#123;$user-&gt;email&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;email&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;password&quot; class=&quot;col-sm-3 control-label&quot;&gt;用户密码&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;用户密码&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                            &lt;label for=&quot;password_confirmation&quot; class=&quot;col-sm-3 control-label&quot;&gt;确认密码&lt;/label&gt;</span><br><span class="line">                            &lt;div class=&quot;col-sm-9&quot;&gt;</span><br><span class="line">                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;password_confirmation&quot; name=&quot;password_confirmation&quot; placeholder=&quot;确认密码&quot; value=&quot;&#123;&#123;$user-&gt;password_confirmation&#125;&#125;&quot;&gt;</span><br><span class="line">                                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password_confirmation&apos;])</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&quot;javascript:history.back(-1);return false;&quot;&gt;</span><br><span class="line">                            返回</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;submit&quot; class=&quot;btn btn-danger pull-right&quot;&gt;确 定&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@stop</span><br><span class="line">@section(&apos;script&apos;)</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">            $(&quot;.select2&quot;).select2();</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">@stop</span><br></pre></td></tr></table></figure>
<h2 id="新增视图组件"><a class="header-anchor" href="#新增视图组件"></a>新增视图组件</h2>
<hr>
<p>在文件夹<code>resources/views/layout/</code>新建文件夹<code>model</code>，并新建模板文件<code>default.blade.php</code>，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;modal fade&quot; id=&quot;defalutModal&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot; aria-labelledby=&quot;defaultModalLabel&quot;&gt;</span><br><span class="line">    &lt;form class=&quot;form-horizontal&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;modal-dialog&quot; role=&quot;document&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;modal-content&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;modal-header&quot;&gt;</span><br><span class="line">                    &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-label=&quot;Close&quot;&gt;</span><br><span class="line">                        &lt;span aria-hidden=&quot;true&quot;&gt;×&lt;/span&gt;&lt;/button&gt;</span><br><span class="line">                    &lt;h4 class=&quot;modal-title&quot; id=&quot;defaultModalLabel&quot;&gt;&#123;&#123;$model_title&#125;&#125;&lt;/h4&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;modal-body&quot;&gt;</span><br><span class="line">                    &#123;&#123;$model_content&#125;&#125;</span><br><span class="line">                    &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123;csrf_token()&#125;&#125;&quot;&gt;</span><br><span class="line">                    &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;delete&quot;&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;modal-footer&quot;&gt;</span><br><span class="line">                    &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; data-dismiss=&quot;modal&quot;&gt;关闭&lt;/button&gt;</span><br><span class="line">                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;确认&lt;/button&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（三）</title>
    <url>/2016/04/04/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<p>完成登录管理页面与登录验证功能</p>
<h1 id="管理用户模型"><a class="header-anchor" href="#管理用户模型"></a>管理用户模型</h1>
<hr>
<p>在文件夹<code>app</code>下新建文件夹<code>Models</code>，将文件夹<code>app</code>下的<code>User.php</code>移动到文件夹<code>app/Models</code>下<br>
修改文件<code>User.php</code>的命名空间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">namespace App\Models;</span><br></pre></td></tr></table></figure>
<p>打开文件<code>config/auth.php</code>，修改代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&apos;model&apos; =&gt; App\Models\User::class,</span><br></pre></td></tr></table></figure>
<h1 id="新增路由"><a class="header-anchor" href="#新增路由"></a>新增路由</h1>
<hr>
<p>打开文件<code>app/Http/routes.php</code>，文件代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">Route::group([&apos;namespace&apos; =&gt; &apos;Backend&apos;, &apos;middleware&apos; =&gt; [&apos;auth&apos;]], function () &#123;</span><br><span class="line">    Route::get(&apos;/&apos;, &apos;IndexController@index&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::group([&apos;namespace&apos; =&gt; &apos;Auth&apos;], function () &#123;</span><br><span class="line">    Route::get(&apos;auth/login&apos;, &apos;AuthController@getLogin&apos;);</span><br><span class="line">    Route::post(&apos;auth/login&apos;, &apos;AuthController@postLogin&apos;);</span><br><span class="line">    Route::get(&apos;auth/logout&apos;, &apos;AuthController@getLogout&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="新增登录视图"><a class="header-anchor" href="#新增登录视图"></a>新增登录视图</h1>
<hr>
<p>在文件夹<code>resources/views/</code>新建文件夹<code>auth</code>，然后新建视图文件<code>login.blade.php</code><br>
在文件夹<code>resources/views/backend/layout</code>新建文件夹<code>message</code>，然后新建视图文件如下：</p>
<ul>
<li>tips.blade.php</li>
<li>error.blade.php</li>
<li>success.blade.php</li>
</ul>
<h2 id="login-blade-php"><a class="header-anchor" href="#login-blade-php"></a>login.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;AdminLTE 2 | Log in&lt;/title&gt;</span><br><span class="line">    &lt;meta content=&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot; name=&quot;viewport&quot;&gt;</span><br><span class="line">    &lt;link href=&quot;&#123;&#123; asset(&quot;/assets/css/app.css&quot;) &#125;&#125;&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body class=&quot;hold-transition login-page&quot;&gt;</span><br><span class="line">&lt;div class=&quot;login-box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;login-logo&quot;&gt;</span><br><span class="line">        &lt;b&gt;TianMao&lt;/b&gt;CMF</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;login-box-body&quot;&gt;</span><br><span class="line">        &lt;p class=&quot;login-box-msg&quot;&gt;Happy Coding&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">        &lt;form action=&quot;&#123;&#123;URL::to(&apos;/auth/login&apos;)&#125;&#125;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">            &lt;input type=&quot;hidden&quot; name=&quot;_token&quot; value=&quot;&#123;&#123; csrf_token() &#125;&#125;&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;row form-group has-feedback&quot;&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;账号&quot; name=&quot;email&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;fa fa-user form-control-feedback&quot;&gt;&lt;/span&gt;</span><br><span class="line">                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;email&apos;])</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;row form-group has-feedback&quot;&gt;</span><br><span class="line">                &lt;input type=&quot;password&quot; class=&quot;form-control&quot; placeholder=&quot;密码&quot; name=&quot;password&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;fa fa-lock form-control-feedback&quot;&gt;&lt;/span&gt;</span><br><span class="line">                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;password&apos;])</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;row form-group has-feedback&quot;&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;验证码&quot; name=&quot;captcha&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;fa fa-image form-control-feedback&quot;&gt;&lt;/span&gt;</span><br><span class="line">                @include(&apos;backend.layout.message.tips&apos;,[&apos;field&apos;=&gt;&apos;captcha&apos;])</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;row form-group has-feedback&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;&#123;&#123;$captcha&#125;&#125;&quot; alt=&quot;图片验证码&quot; style=&quot;width: 100%;&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-8&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;checkbox icheck&quot;&gt;</span><br><span class="line">                        &lt;label&gt;</span><br><span class="line">                            &lt;input type=&quot;checkbox&quot; name=&quot;remember&quot; value=&quot;1&quot;&gt; 保持登录</span><br><span class="line">                        &lt;/label&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-4&quot;&gt;</span><br><span class="line">                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary btn-block btn-flat&quot;&gt;登 录&lt;/button&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;&#123;&#123; asset (&quot;/assets/js/app.js&quot;) &#125;&#125;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        $(&apos;input&apos;).iCheck(&#123;</span><br><span class="line">            checkboxClass: &apos;icheckbox_square-blue&apos;,</span><br><span class="line">            radioClass: &apos;iradio_square-blue&apos;,</span><br><span class="line">            increaseArea: &apos;20%&apos;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h2 id="tips-blade-php"><a class="header-anchor" href="#tips-blade-php"></a>tips.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@if($errors-&gt;has($field))</span><br><span class="line">	@foreach ($errors-&gt;get($field) as $error)</span><br><span class="line">		&lt;button class=&quot;btn btn-danger col-sm-12 btn-flat&quot; style=&quot;width: 100%;&quot;&gt;</span><br><span class="line">			&lt;i class=&quot;fa fa-times-circle-o&quot;&gt;&lt;/i&gt; &#123;&#123;$error&#125;&#125;</span><br><span class="line">		&lt;/button&gt;</span><br><span class="line">	@endforeach</span><br><span class="line">@endif</span><br></pre></td></tr></table></figure>
<h2 id="error-blade-php"><a class="header-anchor" href="#error-blade-php"></a>error.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@if(Session::has(&apos;errors&apos;))</span><br><span class="line">	&lt;div id=&quot;errors-message&quot; class=&quot;alert alert-danger alert-dismissible&quot;&gt;</span><br><span class="line">		&lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot; aria-hidden=&quot;true&quot;&gt;×&lt;/button&gt;</span><br><span class="line">		&lt;h4&gt;&lt;i class=&quot;icon fa fa-ban&quot;&gt;&lt;/i&gt; 错误提示!&lt;/h4&gt;</span><br><span class="line">		@foreach($errors-&gt;all() as $error)</span><br><span class="line">			&#123;&#123;$error&#125;&#125;</span><br><span class="line">		@endforeach</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">@endif</span><br></pre></td></tr></table></figure>
<h2 id="success-blade-php"><a class="header-anchor" href="#success-blade-php"></a>success.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@if(Session::has(&apos;success&apos;))</span><br><span class="line">	&lt;div id=&quot;success-message&quot; class=&quot;alert alert-success alert-dismissible&quot;&gt;</span><br><span class="line">		&lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot; aria-hidden=&quot;true&quot;&gt;×&lt;/button&gt;</span><br><span class="line">		&lt;h4&gt;&lt;i class=&quot;icon fa fa-check&quot;&gt;&lt;/i&gt; 成功提示!&lt;/h4&gt;</span><br><span class="line">		&#123;&#123;Session::get(&apos;success&apos;)&#125;&#125;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">@endif</span><br></pre></td></tr></table></figure>
<h1 id="新增验证码package"><a class="header-anchor" href="#新增验证码package"></a>新增验证码Package</h1>
<hr>
<p>打开<code>composer.json</code>文件,修改代码如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;&gt;=5.5.9&quot;,</span><br><span class="line">    &quot;laravel/framework&quot;: &quot;5.1.*&quot;,</span><br><span class="line">    &quot;gregwar/captcha&quot;: &quot;1.*&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p><code>gregwar/captcha</code>是验证码Package，用来生成验证码，在终端执行以下命令进行安装。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo composer install</span><br></pre></td></tr></table></figure>
<h1 id="管理登录认证控制器"><a class="header-anchor" href="#管理登录认证控制器"></a>管理登录认证控制器</h1>
<p>打开文件<code>app/Http/Auth/AuthController.php</code>，新增代码如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use Illuminate\Support\Facades\Session;</span><br><span class="line"></span><br><span class="line">public function getLogin()</span><br><span class="line">&#123;</span><br><span class="line">    if (view()-&gt;exists(&apos;auth.authenticate&apos;)) &#123;</span><br><span class="line">        return view(&apos;auth.authenticate&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $builder = new CaptchaBuilder();</span><br><span class="line">    $builder-&gt;build();</span><br><span class="line">    Session::put(&apos;phrase&apos;, $builder-&gt;getPhrase());</span><br><span class="line"></span><br><span class="line">    return view(&apos;auth.login&apos;)-&gt;with(&apos;captcha&apos;, $builder-&gt;inline());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public function postLogin(Request $request)</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;validate($request, [</span><br><span class="line">        $this-&gt;loginUsername() =&gt; &apos;required&apos;,</span><br><span class="line">        &apos;password&apos;             =&gt; &apos;required&apos;,</span><br><span class="line">        &apos;captcha&apos;              =&gt; &apos;required&apos;</span><br><span class="line">    ], [</span><br><span class="line">        $this-&gt;loginUsername() . &apos;.required&apos; =&gt; &apos;请输入邮箱或用户名称&apos;,</span><br><span class="line">        &apos;password.required&apos;                  =&gt; &apos;请输入用户密码&apos;,</span><br><span class="line">        &apos;captcha.required&apos;                   =&gt; &apos;请输入验证码&apos;</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    if (Session::get(&apos;phrase&apos;) !== $request-&gt;get(&apos;captcha&apos;)) &#123;</span><br><span class="line">        return redirect()-&gt;back()-&gt;withErrors(array(&apos;captcha&apos; =&gt; &apos;验证码不正确&apos;))-&gt;withInput();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="使用迁移文件生成数据表"><a class="header-anchor" href="#使用迁移文件生成数据表"></a>使用迁移文件生成数据表</h1>
<hr>
<p>接下来打开终端，在项目下运行以下命令，生成用户表并创建用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 生成数据表</span><br><span class="line">php artisan migrate</span><br><span class="line"></span><br><span class="line">// 生成用户数据</span><br><span class="line">php artisan tinker</span><br><span class="line">$user = new App\Models\User;</span><br><span class="line">$user-&gt;name = &quot;admin&quot;;</span><br><span class="line">$user-&gt;email = &quot;admin@qq.com&quot;;</span><br><span class="line">$user-&gt;password = bcrypt(123456);</span><br><span class="line">$user-&gt;save();</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<h1 id="管理登录认证操作跳转页面"><a class="header-anchor" href="#管理登录认证操作跳转页面"></a>管理登录认证操作跳转页面</h1>
<p>打开文件<code>app\Http\Controller\Auth\AuthController</code>，新增以下成员属性:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 设置成功登录后转向的页面：</span><br><span class="line">protected $redirectPath = &apos;/&apos;;</span><br><span class="line"></span><br><span class="line">// 设置登录失败后转向的页面：</span><br><span class="line">protected $loginPath = &apos;/auth/login&apos;;</span><br><span class="line"></span><br><span class="line">// 设置退出登录后转向的页面：</span><br><span class="line">protected $redirectAfterLogout = &apos;/&apos;;</span><br></pre></td></tr></table></figure>
<p>打开中间件<code>app\Http\Middleware\RedirectIfAuthenticated.php</code>，找到相应的地方，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> public function handle($request, Closure $next)</span><br><span class="line">&#123;</span><br><span class="line">    // 设置登录之后，输入/auth/login的跳转地址</span><br><span class="line">    if ($this-&gt;auth-&gt;check()) &#123;</span><br><span class="line">        return redirect(&apos;/&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $next($request);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（二）</title>
    <url>/2016/04/04/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<p>初步搭建好后台管理功能的界面</p>
<h1 id="新增控制器"><a class="header-anchor" href="#新增控制器"></a>新增控制器</h1>
<hr>
<p>在终端执行以下命令，在文件夹<code>app/Http/Controllers/Backend</code>下生成<code>IndexController</code>控制器。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php artisan make:controller Backend/IndexController --plain</span><br></pre></td></tr></table></figure>
<p>修改文件<code>IndexController.php</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Http\Controllers\Backend;</span><br><span class="line"></span><br><span class="line">use App\Http\Requests;</span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line"></span><br><span class="line">class IndexController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $tasks = [</span><br><span class="line">            [</span><br><span class="line">                &apos;name&apos; =&gt; &apos;Design New Dashboard&apos;,</span><br><span class="line">                &apos;progress&apos; =&gt; &apos;87&apos;,</span><br><span class="line">                &apos;color&apos; =&gt; &apos;danger&apos;</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                &apos;name&apos; =&gt; &apos;Create Home Page&apos;,</span><br><span class="line">                &apos;progress&apos; =&gt; &apos;76&apos;,</span><br><span class="line">                &apos;color&apos; =&gt; &apos;warning&apos;</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                &apos;name&apos; =&gt; &apos;Some Other Task&apos;,</span><br><span class="line">                &apos;progress&apos; =&gt; &apos;32&apos;,</span><br><span class="line">                &apos;color&apos; =&gt; &apos;success&apos;</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                &apos;name&apos; =&gt; &apos;Start Building Website&apos;,</span><br><span class="line">                &apos;progress&apos; =&gt; &apos;56&apos;,</span><br><span class="line">                &apos;color&apos; =&gt; &apos;info&apos;</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                &apos;name&apos; =&gt; &apos;Develop an Awesome Algorithm&apos;,</span><br><span class="line">                &apos;progress&apos; =&gt; &apos;10&apos;,</span><br><span class="line">                &apos;color&apos; =&gt; &apos;success&apos;</span><br><span class="line">            ]</span><br><span class="line">        ];</span><br><span class="line">        return view(&apos;backend.index.index&apos;,compact(&apos;tasks&apos;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="新增路由"><a class="header-anchor" href="#新增路由"></a>新增路由</h1>
<hr>
<p>打开文件<code>app\Http\routes.php</code>，修改代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Route::group([&apos;namespace&apos;=&gt;&apos;Backend&apos;],function()&#123;</span><br><span class="line">    Route::get(&apos;index&apos;,&apos;IndexController&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="新增视图"><a class="header-anchor" href="#新增视图"></a>新增视图</h1>
<hr>
<p>在<code>resources/views/</code>下新建文件夹<code>backend</code>，在文件夹<code>backend</code>下新建文件夹<code>index</code>和<code>layout</code>。</p>
<p>在文件夹<code>layout</code>新建文件如下：</p>
<ul>
<li>header.blade.php</li>
<li>footer.blade.php</li>
<li>main.blade.php</li>
<li>sidebar.blade.php</li>
</ul>
<p>在文件夹<code>index</code>新建文件如下：</p>
<ul>
<li>index</li>
</ul>
<h2 id="header-blade-php"><a class="header-anchor" href="#header-blade-php"></a>header.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;header class=&quot;main-header&quot;&gt;</span><br><span class="line">    &lt;a href=&quot;index2.html&quot; class=&quot;logo&quot;&gt;&lt;b&gt;Admin&lt;/b&gt;LTE&lt;/a&gt;</span><br><span class="line">    &lt;nav class=&quot;navbar navbar-static-top&quot; role=&quot;navigation&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot; class=&quot;sidebar-toggle&quot; data-toggle=&quot;offcanvas&quot; role=&quot;button&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">        &lt;div class=&quot;navbar-custom-menu&quot;&gt;</span><br><span class="line">            &lt;ul class=&quot;nav navbar-nav&quot;&gt;</span><br><span class="line">                &lt;li class=&quot;dropdown messages-menu&quot;&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;fa fa-envelope-o&quot;&gt;&lt;/i&gt;</span><br><span class="line">                        &lt;span class=&quot;label label-success&quot;&gt;4&lt;/span&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                    &lt;ul class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">                        &lt;li class=&quot;header&quot;&gt;You have 4 messages&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;</span><br><span class="line">                            &lt;ul class=&quot;menu&quot;&gt;</span><br><span class="line">                                &lt;li&gt;</span><br><span class="line">                                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                                        &lt;div class=&quot;pull-left&quot;&gt;</span><br><span class="line">                                            &lt;img src=&quot;&#123;&#123; asset(&quot;/assets/img/user2-160x160.jpg&quot;) &#125;&#125;&quot; class=&quot;img-circle&quot; alt=&quot;User Image&quot;/&gt;</span><br><span class="line">                                        &lt;/div&gt;</span><br><span class="line">                                        &lt;h4&gt;</span><br><span class="line">                                            Support Team</span><br><span class="line">                                            &lt;small&gt;&lt;i class=&quot;fa fa-clock-o&quot;&gt;&lt;/i&gt; 5 mins&lt;/small&gt;</span><br><span class="line">                                        &lt;/h4&gt;</span><br><span class="line">                                        &lt;p&gt;Why not buy a new awesome theme?&lt;/p&gt;</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                &lt;/li&gt;</span><br><span class="line">                            &lt;/ul&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li class=&quot;footer&quot;&gt;&lt;a href=&quot;#&quot;&gt;See All Messages&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li class=&quot;dropdown notifications-menu&quot;&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;fa fa-bell-o&quot;&gt;&lt;/i&gt;</span><br><span class="line">                        &lt;span class=&quot;label label-warning&quot;&gt;10&lt;/span&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                    &lt;ul class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">                        &lt;li class=&quot;header&quot;&gt;You have 10 notifications&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;</span><br><span class="line">                            &lt;ul class=&quot;menu&quot;&gt;</span><br><span class="line">                                &lt;li&gt;</span><br><span class="line">                                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                                        &lt;i class=&quot;fa fa-users text-aqua&quot;&gt;&lt;/i&gt; 5 new members joined today</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                &lt;/li&gt;</span><br><span class="line">                            &lt;/ul&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li class=&quot;footer&quot;&gt;&lt;a href=&quot;#&quot;&gt;View all&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li class=&quot;dropdown tasks-menu&quot;&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;fa fa-flag-o&quot;&gt;&lt;/i&gt;</span><br><span class="line">                        &lt;span class=&quot;label label-danger&quot;&gt;9&lt;/span&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                    &lt;ul class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">                        &lt;li class=&quot;header&quot;&gt;You have 9 tasks&lt;/li&gt;</span><br><span class="line">                        &lt;li&gt;</span><br><span class="line">                            &lt;ul class=&quot;menu&quot;&gt;</span><br><span class="line">                                &lt;li&gt;</span><br><span class="line">                                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                                        &lt;h3&gt;</span><br><span class="line">                                            Design some buttons</span><br><span class="line">                                            &lt;small class=&quot;pull-right&quot;&gt;20%&lt;/small&gt;</span><br><span class="line">                                        &lt;/h3&gt;</span><br><span class="line">                                        &lt;div class=&quot;progress xs&quot;&gt;</span><br><span class="line">                                            &lt;div class=&quot;progress-bar progress-bar-aqua&quot; style=&quot;width: 20%&quot; role=&quot;progressbar&quot; aria-valuenow=&quot;20&quot; aria-valuemin=&quot;0&quot; aria-valuemax=&quot;100&quot;&gt;</span><br><span class="line">                                                &lt;span class=&quot;sr-only&quot;&gt;20% Complete&lt;/span&gt;</span><br><span class="line">                                            &lt;/div&gt;</span><br><span class="line">                                        &lt;/div&gt;</span><br><span class="line">                                    &lt;/a&gt;</span><br><span class="line">                                &lt;/li&gt;</span><br><span class="line">                            &lt;/ul&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li class=&quot;footer&quot;&gt;</span><br><span class="line">                            &lt;a href=&quot;#&quot;&gt;View all tasks&lt;/a&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li class=&quot;dropdown user user-menu&quot;&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;</span><br><span class="line">                        &lt;img src=&quot;&#123;&#123; asset(&quot;/assets/img/user2-160x160.jpg&quot;) &#125;&#125;&quot; class=&quot;user-image&quot; alt=&quot;User Image&quot;/&gt;</span><br><span class="line">                        &lt;span class=&quot;hidden-xs&quot;&gt;Alexander Pierce&lt;/span&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                    &lt;ul class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">                        &lt;li class=&quot;user-header&quot;&gt;</span><br><span class="line">                            &lt;img src=&quot;&#123;&#123; asset(&quot;/assets/img/user2-160x160.jpg&quot;) &#125;&#125;&quot; class=&quot;img-circle&quot; alt=&quot;User Image&quot;/&gt;</span><br><span class="line">                            &lt;p&gt;</span><br><span class="line">                                Alexander Pierce - Web Developer</span><br><span class="line">                                &lt;small&gt;Member since Nov. 2012&lt;/small&gt;</span><br><span class="line">                            &lt;/p&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li class=&quot;user-body&quot;&gt;</span><br><span class="line">                            &lt;div class=&quot;col-xs-4 text-center&quot;&gt;</span><br><span class="line">                                &lt;a href=&quot;#&quot;&gt;Followers&lt;/a&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                            &lt;div class=&quot;col-xs-4 text-center&quot;&gt;</span><br><span class="line">                                &lt;a href=&quot;#&quot;&gt;Sales&lt;/a&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                            &lt;div class=&quot;col-xs-4 text-center&quot;&gt;</span><br><span class="line">                                &lt;a href=&quot;#&quot;&gt;Friends&lt;/a&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li class=&quot;user-footer&quot;&gt;</span><br><span class="line">                            &lt;div class=&quot;pull-left&quot;&gt;</span><br><span class="line">                                &lt;a href=&quot;#&quot; class=&quot;btn btn-default btn-flat&quot;&gt;Profile&lt;/a&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                            &lt;div class=&quot;pull-right&quot;&gt;</span><br><span class="line">                                &lt;a href=&quot;#&quot; class=&quot;btn btn-default btn-flat&quot;&gt;Sign out&lt;/a&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">&lt;/header&gt;</span><br></pre></td></tr></table></figure>
<h2 id="footer-blade-php"><a class="header-anchor" href="#footer-blade-php"></a>footer.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;footer class=&quot;main-footer&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;pull-right hidden-xs&quot;&gt;</span><br><span class="line">        Anything you want</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;strong&gt;Copyright © &#123;&#123;date(&apos;Y&apos;)&#125;&#125; &lt;a href=&quot;#&quot;&gt;Company&lt;/a&gt;.&lt;/strong&gt; All rights reserved.</span><br><span class="line">&lt;/footer&gt;</span><br></pre></td></tr></table></figure>
<h2 id="main-blade-php"><a class="header-anchor" href="#main-blade-php"></a>main.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta content=&apos;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&apos; name=&apos;viewport&apos;&gt;</span><br><span class="line">    &lt;title&gt;&#123;&#123; $page_title or &quot;AdminLTE Dashboard&quot; &#125;&#125;&lt;/title&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;&#123;&#123;asset(&apos;/assets/css/app.css&apos;)&#125;&#125;&quot;&gt;</span><br><span class="line">    @yield(&apos;style&apos;)</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body class=&quot;skin-blue&quot;&gt;</span><br><span class="line">&lt;div class=&quot;wrapper&quot;&gt;</span><br><span class="line">    @include(&apos;backend.layout.header&apos;)</span><br><span class="line">    @include(&apos;backend.layout.sidebar&apos;)</span><br><span class="line">    &lt;div class=&quot;content-wrapper&quot;&gt;</span><br><span class="line">        &lt;section class=&quot;content-header&quot;&gt;</span><br><span class="line">            &lt;h1&gt;</span><br><span class="line">                &#123;&#123; $page_title or &quot;Page Title&quot; &#125;&#125;</span><br><span class="line">                &lt;small&gt;&#123;&#123; $page_description or null &#125;&#125;&lt;/small&gt;</span><br><span class="line">            &lt;/h1&gt;</span><br><span class="line">            &lt;ol class=&quot;breadcrumb&quot;&gt;</span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;i class=&quot;fa fa-dashboard&quot;&gt;&lt;/i&gt; Level&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li class=&quot;active&quot;&gt;Here&lt;/li&gt;</span><br><span class="line">            &lt;/ol&gt;</span><br><span class="line">        &lt;/section&gt;</span><br><span class="line">        &lt;section class=&quot;content&quot;&gt;</span><br><span class="line">            @yield(&apos;content&apos;)</span><br><span class="line">        &lt;/section&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    @include(&apos;backend.layout.footer&apos;)</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;&#123;&#123; asset (&quot;/assets/js/app.js&quot;) &#125;&#125;&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span><br><span class="line">@yield(&apos;script&apos;)</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h2 id="sidebar-blade-php"><a class="header-anchor" href="#sidebar-blade-php"></a>sidebar.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;aside class=&quot;main-sidebar&quot;&gt;</span><br><span class="line">    &lt;section class=&quot;sidebar&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;user-panel&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;pull-left image&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;&#123;&#123; asset(&quot;/assets/img/user2-160x160.jpg&quot;) &#125;&#125;&quot; class=&quot;img-circle&quot; alt=&quot;User Image&quot;/&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;pull-left info&quot;&gt;</span><br><span class="line">                &lt;p&gt;Alexander Pierce&lt;/p&gt;</span><br><span class="line">                &lt;a href=&quot;#&quot;&gt;&lt;i class=&quot;fa fa-circle text-success&quot;&gt;&lt;/i&gt; Online&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;form action=&quot;#&quot; method=&quot;get&quot; class=&quot;sidebar-form&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;input-group&quot;&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; name=&quot;q&quot; class=&quot;form-control&quot; placeholder=&quot;Search...&quot;/&gt;</span><br><span class="line">                &lt;span class=&quot;input-group-btn&quot;&gt;</span><br><span class="line">                  &lt;button type=&apos;submit&apos; name=&apos;search&apos; id=&apos;search-btn&apos; class=&quot;btn btn-flat&quot;&gt;&lt;i class=&quot;fa fa-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">                  &lt;/button&gt;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">        &lt;ul class=&quot;sidebar-menu&quot;&gt;</span><br><span class="line">            &lt;li class=&quot;header&quot;&gt;HEADER&lt;/li&gt;</span><br><span class="line">            &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;&lt;span&gt;Link&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;span&gt;Another Link&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li class=&quot;treeview&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;#&quot;&gt;&lt;span&gt;Multilevel&lt;/span&gt; &lt;i class=&quot;fa fa-angle-left pull-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;</span><br><span class="line">                &lt;ul class=&quot;treeview-menu&quot;&gt;</span><br><span class="line">                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link in level 2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Link in level 2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">&lt;/aside&gt;</span><br></pre></td></tr></table></figure>
<h2 id="index-blade-php"><a class="header-anchor" href="#index-blade-php"></a>index.blade.php</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@extends(&quot;backend.layout.main&quot;)</span><br><span class="line"></span><br><span class="line">@section(&quot;content&quot;)</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-primary&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                    &lt;h3 class=&quot;box-title&quot;&gt;Randomly Generated Tasks&lt;/h3&gt;</span><br><span class="line">                    &lt;div class=&quot;box-tools pull-right&quot;&gt;</span><br><span class="line">                        &lt;button class=&quot;btn btn-box-tool&quot; data-widget=&quot;collapse&quot; data-toggle=&quot;tooltip&quot; title=&quot;Collapse&quot;&gt;</span><br><span class="line">                            &lt;i class=&quot;fa fa-minus&quot;&gt;&lt;/i&gt;</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button class=&quot;btn btn-box-tool&quot; data-widget=&quot;remove&quot; data-toggle=&quot;tooltip&quot; title=&quot;Remove&quot;&gt;</span><br><span class="line">                            &lt;i class=&quot;fa fa-times&quot;&gt;&lt;/i&gt;</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                    @foreach($tasks as $task)</span><br><span class="line">                        &lt;h5&gt;</span><br><span class="line">                            &#123;&#123; $task[&apos;name&apos;] &#125;&#125;</span><br><span class="line">                            &lt;small class=&quot;label label-&#123;&#123;$task[&apos;color&apos;]&#125;&#125; pull-right&quot;&gt;&#123;&#123;$task[&apos;progress&apos;]&#125;&#125;%&lt;/small&gt;</span><br><span class="line">                        &lt;/h5&gt;</span><br><span class="line">                        &lt;div class=&quot;progress progress-xxs&quot;&gt;</span><br><span class="line">                            &lt;div class=&quot;progress-bar progress-bar-&#123;&#123;$task[&apos;color&apos;]&#125;&#125;&quot; style=&quot;width: &#123;&#123;$task[&apos;progress&apos;]&#125;&#125;%&quot;&gt;&lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    @endforeach</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;box-footer&quot;&gt;</span><br><span class="line">                    &lt;form action=&quot;#&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;text&quot; placeholder=&quot;New task&quot; class=&quot;form-control input-sm&quot;/&gt;</span><br><span class="line">                    &lt;/form&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;col-md-6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;box box-primary&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;box-header with-border&quot;&gt;</span><br><span class="line">                    &lt;h3 class=&quot;box-title&quot;&gt;Second Box&lt;/h3&gt;</span><br><span class="line">                    &lt;div class=&quot;box-tools pull-right&quot;&gt;</span><br><span class="line">                        &lt;button class=&quot;btn btn-box-tool&quot; data-widget=&quot;collapse&quot; data-toggle=&quot;tooltip&quot; title=&quot;Collapse&quot;&gt;</span><br><span class="line">                            &lt;i class=&quot;fa fa-minus&quot;&gt;&lt;/i&gt;</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                        &lt;button class=&quot;btn btn-box-tool&quot; data-widget=&quot;remove&quot; data-toggle=&quot;tooltip&quot; title=&quot;Remove&quot;&gt;</span><br><span class="line">                            &lt;i class=&quot;fa fa-times&quot;&gt;&lt;/i&gt;</span><br><span class="line">                        &lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">                    A separate section to add any kind of widget. Feel free</span><br><span class="line">                    to explore all of AdminLTE widgets by visiting the demo page</span><br><span class="line">                    on &lt;a href=&quot;https://almsaeedstudio.com&quot;&gt;Almsaeed Studio&lt;/a&gt;.</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Sublime Text 3 开发 PHP 的心得</title>
    <url>/2016/03/13/%E4%BD%BF%E7%94%A8-Sublime-Text-3-%E5%BC%80%E5%8F%91-PHP-%E7%9A%84%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>PHPStorm 不卡之日，SublimeText 舍弃之时</p>
<h2 id="环境"><a class="header-anchor" href="#环境"></a>环境</h2>
<ul>
<li>系统：OSX Yosemite 10.10.5</li>
<li>版本：Sublime Text 3 Build 3103</li>
</ul>
<h2 id="安装"><a class="header-anchor" href="#安装"></a>安装</h2>
<p>使用 Homebrew 安装 Sublime Text 3</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install Caskroom/cask/sublime-text</span><br></pre></td></tr></table></figure>
<h2 id="终端配置"><a class="header-anchor" href="#终端配置"></a>终端配置</h2>
<p>执行以下代码，即可在终端使用 <code>Sublime Text 3</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 创建程序链接</span><br><span class="line">ln -s  &quot;/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl&quot; /usr/local/bin/subl</span><br><span class="line"></span><br><span class="line">// 查看使用帮助</span><br><span class="line">subl -h</span><br></pre></td></tr></table></figure>
<h2 id="快捷键"><a class="header-anchor" href="#快捷键"></a>快捷键</h2>
<h3 id="常用"><a class="header-anchor" href="#常用"></a>常用</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>⌘ + C</td>
<td>复制</td>
</tr>
<tr>
<td>⌘ + ⇧ + D</td>
<td>复制粘贴</td>
</tr>
<tr>
<td>⌘ + X</td>
<td>剪切</td>
</tr>
<tr>
<td>⌘ + V</td>
<td>粘贴</td>
</tr>
<tr>
<td>⌘ + ⇧ + V</td>
<td>保持缩进粘贴</td>
</tr>
<tr>
<td>⌘ + ⌥ + V</td>
<td>打开粘贴面板</td>
</tr>
<tr>
<td>⌘ + F</td>
<td>查找</td>
</tr>
<tr>
<td>⌘ + /</td>
<td>注释行</td>
</tr>
<tr>
<td>⌘ + ⌥ + /</td>
<td>生成注释</td>
</tr>
<tr>
<td>⌘ + ⇧ + F</td>
<td>全局查找、替换</td>
</tr>
<tr>
<td>⌘ + ↩</td>
<td>在光标下插入行</td>
</tr>
<tr>
<td>⌘ + ⇧ + ↩</td>
<td>在光标上插入行</td>
</tr>
<tr>
<td>⌘ + ⇧ + t</td>
<td>打开关闭的标签页</td>
</tr>
<tr>
<td>⌘ + [NUM]</td>
<td>选取对应数字的标签页</td>
</tr>
<tr>
<td>⌘ + ⇧ + [</td>
<td>上一个标签页</td>
</tr>
<tr>
<td>⌘ + ⇧ + ]</td>
<td>下一个标签页</td>
</tr>
<tr>
<td>⌃ + ⇧ + ↑</td>
<td>向上扩展光标</td>
</tr>
<tr>
<td>⌃ + ⇧ + ↓</td>
<td>向下扩展光标</td>
</tr>
</tbody>
</table>
<h3 id="书签"><a class="header-anchor" href="#书签"></a>书签</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>⌘ + F2</td>
<td>生成或撤销书签</td>
</tr>
<tr>
<td>⇧ + F2</td>
<td>上一个书签</td>
</tr>
<tr>
<td>F2</td>
<td>下一个书签</td>
</tr>
</tbody>
</table>
<h3 id="删除"><a class="header-anchor" href="#删除"></a>删除</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>⌃ + ⇧ + K</td>
<td>删除当前行</td>
</tr>
<tr>
<td>⌘ + K + ⌫</td>
<td>删除光标之后的内容</td>
</tr>
<tr>
<td>⌘ + K + ⌘ + K</td>
<td>删除光标之后的内容</td>
</tr>
</tbody>
</table>
<h3 id="跳转"><a class="header-anchor" href="#跳转"></a>跳转</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>⌘ + P , ⌘ + T</td>
<td>跳转到文件</td>
</tr>
<tr>
<td>⌘ + R</td>
<td>跳转到方法</td>
</tr>
<tr>
<td>⌃ + G</td>
<td>跳转到行数</td>
</tr>
<tr>
<td>⌃ + ⇧ + P</td>
<td>切换工作空间</td>
</tr>
<tr>
<td>⌘ + ⇧ + P</td>
<td>打开命令面板</td>
</tr>
<tr>
<td>⌃ + -</td>
<td>向后跳转至修改处</td>
</tr>
<tr>
<td>⌃ + ⇧ + -</td>
<td>向前跳转至修改处</td>
</tr>
</tbody>
</table>
<h3 id="光标移动"><a class="header-anchor" href="#光标移动"></a>光标移动</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>⌃ + P</td>
<td>光标向上移动</td>
</tr>
<tr>
<td>⌃ + N</td>
<td>光标向下移动</td>
</tr>
<tr>
<td>⌃ + B</td>
<td>光标向左移动</td>
</tr>
<tr>
<td>⌃ + F</td>
<td>光标向右移动</td>
</tr>
<tr>
<td>⌃ + A , ⌘ + ←</td>
<td>光标移动到行最左</td>
</tr>
<tr>
<td>⌃ + E , ⌘ + →</td>
<td>光标移动到行最右</td>
</tr>
<tr>
<td>⌃ + M</td>
<td>光标在括号里闭合跳转</td>
</tr>
<tr>
<td>⌘ + ⌃ + ↑</td>
<td>向上移动选中行</td>
</tr>
<tr>
<td>⌘ + ⌃ + ↓</td>
<td>向下移动选中行</td>
</tr>
</tbody>
</table>
<h3 id="选取"><a class="header-anchor" href="#选取"></a>选取</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>⌘ + L</td>
<td>选取行</td>
</tr>
<tr>
<td>⌘ + D</td>
<td>选取一个相同的文本</td>
</tr>
<tr>
<td>⌃ + ⇧ + G</td>
<td>选取所有相同的文本</td>
</tr>
<tr>
<td>⌘ + A</td>
<td>选取所有内容</td>
</tr>
<tr>
<td>⌘ + ⇧ + ↑</td>
<td>向上选取所有内容</td>
</tr>
<tr>
<td>⌘ + ⇧ + ↓</td>
<td>向下选取所有内容</td>
</tr>
<tr>
<td>⌘ + ⇧ + K</td>
<td>选取当前行HTML标签</td>
</tr>
<tr>
<td>⌘ + ⇧ + A</td>
<td>选取HTML标签闭合内容</td>
</tr>
<tr>
<td>⌘ + ⇧ + J</td>
<td>选取块闭合内容（可以折叠的内容为块）</td>
</tr>
<tr>
<td>⌃ + ⇧ + M</td>
<td>选取括号内容</td>
</tr>
<tr>
<td>⌃ + ⇧ + A</td>
<td>选取光标之前内容</td>
</tr>
<tr>
<td>⌃ + ⇧ + E</td>
<td>选取光标之后内容</td>
</tr>
</tbody>
</table>
<h3 id="窗口"><a class="header-anchor" href="#窗口"></a>窗口</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>⌘ + K + ⌘ + B</td>
<td>显示左侧栏</td>
</tr>
<tr>
<td>⌃ + `</td>
<td>显示控制台</td>
</tr>
<tr>
<td>⌘ + B</td>
<td>执行编译</td>
</tr>
<tr>
<td>⌃ + ⌘ + F</td>
<td>全屏模式</td>
</tr>
<tr>
<td>⌃ + ⇧ + ⌘ + F</td>
<td>无干扰全屏模式</td>
</tr>
<tr>
<td>⌃ + ⇧ + 2</td>
<td>进行左右分屏</td>
</tr>
<tr>
<td>⌃ + ⇧ + 5</td>
<td>进行上下分屏</td>
</tr>
<tr>
<td>⌃ + ⇧ + 1</td>
<td>取消所有分屏</td>
</tr>
<tr>
<td>⌃ + Num</td>
<td>根据数字跳转至对应分屏</td>
</tr>
</tbody>
</table>
<h2 id="插件"><a class="header-anchor" href="#插件"></a>插件</h2>
<h3 id="packagecontrol-插件"><a class="header-anchor" href="#packagecontrol-插件"></a>PackageControl 插件</h3>
<p>按下 <code>⌃ + ~</code> 打开控制台，复制粘贴以下代码并按下 <code>↩</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</span><br></pre></td></tr></table></figure>
<h3 id="material-theme-插件"><a class="header-anchor" href="#material-theme-插件"></a>Material Theme 插件</h3>
<p><code>Material Theme</code> 是一款编辑器主题插件</p>
<p>可以使用 <code>Package Control</code> 插件安装 <code>Material-Theme</code> 插件</p>
<p><code>Material-Theme</code> 插件可提供三种外观样式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//default</span><br><span class="line">&quot;theme&quot;: &quot;Material-Theme.sublime-theme&quot;,</span><br><span class="line">&quot;color_scheme&quot;: &quot;Packages/Material Theme/schemes/Material-Theme.tmTheme&quot;,</span><br><span class="line"></span><br><span class="line">//Darker</span><br><span class="line">&quot;theme&quot;: &quot;Material-Theme-Darker.sublime-theme&quot;,</span><br><span class="line">&quot;color_scheme&quot;: &quot;Packages/Material Theme/schemes/Material-Theme-Darker.tmTheme&quot;,</span><br><span class="line"></span><br><span class="line">//Lighter</span><br><span class="line">&quot;theme&quot;: &quot;Material-Theme-Lighter.sublime-theme&quot;,</span><br><span class="line">&quot;color_scheme&quot;: &quot;Packages/Material Theme/schemes/Material-Theme-Lighter.tmTheme&quot;,</span><br></pre></td></tr></table></figure>
<h3 id="advancenewfile-插件"><a class="header-anchor" href="#advancenewfile-插件"></a>AdvanceNewFile 插件</h3>
<p><code>AdvanceNewFile</code> 是一款快速操作文件的插件</p>
<p>可以使用 <code>Package Control</code> 安装 <code>AdvanceNewFile</code> 插件</p>
<p>安装完毕之后，可以按下 <code>⌘ + ⇧ + P</code> 调出命令面板，执行以下命令对文件进行操作</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//新增</span><br><span class="line">ANF:New File</span><br><span class="line"></span><br><span class="line">//删除</span><br><span class="line">ANF:Delete File</span><br><span class="line"></span><br><span class="line">//重命名</span><br><span class="line">ANF:Rename File</span><br><span class="line"></span><br><span class="line">//复制当前文件</span><br><span class="line">ANF:Copy Current File</span><br><span class="line"></span><br><span class="line">//删除当前文件</span><br><span class="line">ANF:Delete Current File</span><br></pre></td></tr></table></figure>
<p>亦可使用快捷键 <code>⌘ + ⌥ + N</code> 快速新建文件</p>
<h3 id="php-getters-and-setters-插件"><a class="header-anchor" href="#php-getters-and-setters-插件"></a>PHP Getters and Setters 插件</h3>
<p><code>PHP Getters and Setters</code> 是一款根据类文件的成员属性，快速生成 Getter 方法和 Setter 方法的插件</p>
<p>可以使用 <code>Package Control</code> 安装 <code>PHP Getters and Setters</code> 插件</p>
<p>执行以下命令快速生成 Getter 和 Setter 的代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 生成 Getter 方法</span><br><span class="line">PHP:Generate Getters</span><br><span class="line">// 生成 Setter 方法</span><br><span class="line">PHP:Generate Setters</span><br><span class="line"></span><br><span class="line">// 同时生成 Getter 和 Setter</span><br><span class="line">PHP:Generate Getters and Setters</span><br></pre></td></tr></table></figure>
<h3 id="php-companion-插件"><a class="header-anchor" href="#php-companion-插件"></a>PHP Companion 插件</h3>
<p><code>PHP Companion</code> 插件提供以下功能</p>
<ul>
<li>
<p><code>find_use</code><br>
生成所选类的use声明</p>
</li>
<li>
<p><code>expand_fqcn</code><br>
生成所选类的引用路径</p>
</li>
<li>
<p><code>import_namespace</code><br>
生成所选文件的命名空间</p>
</li>
<li>
<p><code>goto_definition_scope</code><br>
寻找所选代码的定义源头</p>
</li>
<li>
<p><code>insert_php_constructor_property</code><br>
生成当前类的构造方法</p>
</li>
</ul>
<p>在 <code>Preferences</code> -&gt; <code>Key Bindings - User</code> 新增以下快捷键调用上述插件命令</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">//PHP Companion</span><br><span class="line">&#123;"keys":["f9"],"command":"find_use"&#125;,</span><br><span class="line">&#123;"keys":["f10"],"command":"expand_fqcn"&#125;,</span><br><span class="line">&#123;"keys":["f11"],"command":"goto_definition_scope"&#125;,</span><br><span class="line">&#123;"keys":["f12"],"command":"insert_php_constructor_property"&#125;,</span><br></pre></td></tr></table></figure>
<h3 id="laravel-artisan-插件"><a class="header-anchor" href="#laravel-artisan-插件"></a>Laravel Artisan 插件</h3>
<p><code>Laravel Artisan</code> 是一款让开发可以不使用终端就能运行 <code>Artisan CLI</code> 的插件</p>
<p>命令与在终端使用 <code>php artisan</code> 基本一致，可以按下 <code>⌘ + ⇧ + P</code> 打开命令面板，执行以下命令：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">// 生成控制器</span><br><span class="line">Laravel Artisan5:Make:Controller</span><br><span class="line"></span><br><span class="line">// 生成请求</span><br><span class="line">Laravel Artisan5:Make:Request</span><br><span class="line"></span><br><span class="line">// 生成服务提供者</span><br><span class="line">Laravel Artisan5:Make:Provider</span><br><span class="line"></span><br><span class="line">// 生成数据迁移文件</span><br><span class="line">Laravel Artisan5:Make:Mrgiation</span><br></pre></td></tr></table></figure>
<h3 id="docblockr-插件"><a class="header-anchor" href="#docblockr-插件"></a>DocBlockr 插件</h3>
<p><code>DocBlockr</code> 是一款根据代码自动生成注释的插件</p>
<h3 id="all-autocomplete-插件"><a class="header-anchor" href="#all-autocomplete-插件"></a>All Autocomplete 插件</h3>
<p><code>All Autocomplete</code> 是一款自动补全的插件，它会查找你打开的所有文件的代码，然后进行代码补全</p>
<h3 id="sublimelinter-php-插件"><a class="header-anchor" href="#sublimelinter-php-插件"></a>SublimeLinter-php 插件</h3>
<p><code>SublimeLinter</code> 是一款检查PHP语言错误的插件</p>
<p>使用 <code>Package Control</code> 安装 <code>SublimeLinter</code> 插件<br>
使用 <code>Package Control</code> 安装 <code>SublimeLinter-php</code> 插件</p>
<p>在 <code>Preferences</code> -&gt; <code>Package Settings</code> -&gt; <code>SublimeLinter</code> -&gt; <code>Settings - User</code> 新增以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;show_errors_on_save&quot;: true,</span><br></pre></td></tr></table></figure>
<p>上述操作会让编辑器在保存文件的时候，提示错误信息</p>
<h2 id="代码片段"><a class="header-anchor" href="#代码片段"></a>代码片段</h2>
<p><code>Sublime Text</code> 可以创建自定义的代码片段</p>
<p>点击菜单栏 <code>Tools</code> -&gt; <code>New Snippet</code> ，创建文件 <code>PHP Public Method.sublime-snippet</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;snippet&gt;</span><br><span class="line">	&lt;content&gt;&lt;![CDATA[</span><br><span class="line">public function $&#123;1:function_name&#125;($&#123;2:param&#125;)&#123;</span><br><span class="line">	$&#123;3:return result&#125;</span><br><span class="line">&#125;</span><br><span class="line">]]&gt;&lt;/content&gt;</span><br><span class="line">	&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span><br><span class="line">	&lt;tabTrigger&gt;pubf&lt;/tabTrigger&gt;</span><br><span class="line">	&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span><br><span class="line">	&lt;scope&gt;source.php&lt;/scope&gt;</span><br><span class="line">&lt;/snippet&gt;</span><br></pre></td></tr></table></figure>
<p>当在PHP文件写代码时，输入 <code>pubf</code> 并按下 <code>Tab</code> 键，会生成相对应的代码片段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function function_name(param)&#123;</span><br><span class="line">	return true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="格式化代码"><a class="header-anchor" href="#格式化代码"></a>格式化代码</h2>
<p>在终端执行以下命令安装 <code>php-cs-fix</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install php-cs-fixer</span><br></pre></td></tr></table></figure>
<p>假如要对某个 PHP 文件进行格式化操作，运行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd dir</span><br><span class="line">php-cs-fixer fix fileName.php --level=&quot;psr2&quot;</span><br></pre></td></tr></table></figure>
<p>使用 <code>Sublime Text 3</code> 的 <code>Build System</code> 格式化代码<br>
点击 <code>Tools</code> -&gt; <code>Build System</code> -&gt; <code>New Bulid System ...</code>，打开代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;shell_cmd&quot;:&quot;make&quot;</span><br></pre></td></tr></table></figure>
<p>修改上述代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	&quot;shell_cmd&quot;: &quot;php-cs-fixer fix $file --level=psr2&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>保存之后，在 <code>Tools</code>-<code>Build System</code> 选择 <code>PSR-2</code>，按 <code>⌘ + B </code>对当前文件进行 <code>PSR-2</code> 格式化操作。</p>
<p>觉得格式化提示信息麻烦，可以在<code>Preferences</code>-<code>Settings - User</code>添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;show_panel_on_build&quot;:false</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tooling</category>
      </categories>
      <tags>
        <tag>Sublime Text 3</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Laravel 构建内容管理框架（一）</title>
    <url>/2016/03/09/%E4%BD%BF%E7%94%A8Laravel%E6%9E%84%E5%BB%BA%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E6%A1%86%E6%9E%B6%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p>为使用 Laravel 构建内容管理框架做好环境、代码和脚本的准备</p>
<h1 id="安装laravel"><a class="header-anchor" href="#安装laravel"></a>安装Laravel</h1>
<hr>
<p>在终端使用Composer安装Laravel</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo composer create-project laravel/laravel backend --prefer-dist 5.1.x</span><br></pre></td></tr></table></figure>
<p>执行后，会在当前目录下新建一个文件夹，里面就是新建的Laravel项目</p>
<h1 id="安装gulp-bower"><a class="header-anchor" href="#安装gulp-bower"></a>安装gulp、bower</h1>
<hr>
<p>在终端使用npm安装gulp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo npm install -g gulp  #全局安装npm</span><br><span class="line">sudo npm install -g bower #全局安装bower</span><br><span class="line"></span><br><span class="line">cd backend</span><br><span class="line">sudo npm install gulp   #在项目本地安装gulp</span><br><span class="line">sudo npm install bower  #在项目本地安装bower</span><br><span class="line">sudp npm install        #安装项目Node依赖、Laravel Elixir</span><br></pre></td></tr></table></figure>
<p>运行<code>gulp tdd</code>之后，会自动监控测试单元</p>
<h1 id="使用bower集成前端依赖库"><a class="header-anchor" href="#使用bower集成前端依赖库"></a>使用bower集成前端依赖库</h1>
<hr>
<p>在项目根目录新增文件<code>.bowerrc</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;directory&quot;: &quot;vendor/bower&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述配置告诉bower在<code>vendor/bower</code>存放下载文件<br>
执行命令<code>bower init</code>创建文件<code>bower.json</code></p>
<p>依赖安装所需前端资源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo bower install admin-lte</span><br><span class="line">sudo bower install fontawesome</span><br><span class="line">sudo bower install ionicons</span><br></pre></td></tr></table></figure>
<p>打开文件<code>gulpfile.js</code>，编辑如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;);</span><br><span class="line">var elixir = require(&apos;laravel-elixir&apos;);</span><br><span class="line"></span><br><span class="line">gulp.task(&apos;copy&apos;, function () &#123;</span><br><span class="line">    // jQuery</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/jQuery/jQuery-2.1.4.min.js&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/js/&quot;));</span><br><span class="line"></span><br><span class="line">    // bootstarp</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/bootstrap/css/bootstrap.min.css&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/css/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/bootstrap/js/bootstrap.min.js&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/js/&quot;));</span><br><span class="line"></span><br><span class="line">    // AdminLTE</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/dist/css/AdminLTE.min.css&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/css/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/dist/css/skins/skin-blue.min.css&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/css/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/dist/js/app.min.js&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/js/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/dist/img/*&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;public/assets/img/&quot;));</span><br><span class="line"></span><br><span class="line">    // Fontawesome</span><br><span class="line">    gulp.src(&quot;vendor/bower/font-awesome/css/font-awesome.min.css&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/css/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/font-awesome/fonts/*&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;public/assets/fonts/&quot;));</span><br><span class="line"></span><br><span class="line">    // Ionicons</span><br><span class="line">    gulp.src(&quot;vendor/bower/Ionicons/css/ionicons.min.css&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/css/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/Ionicons/fonts/*&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;public/assets/fonts/&quot;));</span><br><span class="line"></span><br><span class="line">    // slimScroll</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/slimScroll/jquery.slimscroll.min.js&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/js/&quot;));</span><br><span class="line"></span><br><span class="line">    // iCheck</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/iCheck/icheck.min.js&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/js/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/iCheck/square/blue.css&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/css/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/iCheck/square/blue.png&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;public/assets/css/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/iCheck/square/blue@2x.png&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;public/assets/css/&quot;));</span><br><span class="line"></span><br><span class="line">    // select2</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/select2/select2.full.min.js&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/js/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/select2/select2.min.js&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/js/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/select2/select2.min.css&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/css/&quot;));</span><br><span class="line"></span><br><span class="line">    // pace</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/pace/pace.min.css&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/css/&quot;));</span><br><span class="line">    gulp.src(&quot;vendor/bower/AdminLTE/plugins/pace/pace.min.js&quot;)</span><br><span class="line">        .pipe(gulp.dest(&quot;resources/assets/js/&quot;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">elixir(function (mix) &#123;</span><br><span class="line">    // 合并javascript脚本</span><br><span class="line">    mix.scripts(</span><br><span class="line">        [</span><br><span class="line">            &apos;jQuery-2.1.4.min.js&apos;,</span><br><span class="line">            &apos;bootstrap.min.js&apos;,</span><br><span class="line">            &apos;app.min.js&apos;,</span><br><span class="line">            &apos;pace.min.js&apos;,</span><br><span class="line">            &apos;jquery.slimscroll.min.js&apos;,</span><br><span class="line">            &apos;icheck.min.js&apos;,</span><br><span class="line">            &apos;select2.full.min.js&apos;,</span><br><span class="line">            &apos;select2.min.js&apos;</span><br><span class="line">        ],</span><br><span class="line">        &apos;public/assets/js/app.js&apos;,</span><br><span class="line">        &apos;resources/assets/js/&apos;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    // 合并css脚本</span><br><span class="line">    mix.styles(</span><br><span class="line">        [</span><br><span class="line">            &apos;bootstrap.min.css&apos;,</span><br><span class="line">            &apos;pace.min.css&apos;,</span><br><span class="line">            &apos;select2.min.css&apos;,</span><br><span class="line">            &apos;AdminLTE.min.css&apos;,</span><br><span class="line">            &apos;skin-blue.min.css&apos;,</span><br><span class="line">            &apos;font-awesome.min.css&apos;,</span><br><span class="line">            &apos;ionicons.min.css&apos;,</span><br><span class="line">            &apos;blue.css&apos;</span><br><span class="line">        ],</span><br><span class="line">        &apos;public/assets/css/app.css&apos;,</span><br><span class="line">        &apos;resources/assets/css/&apos;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    // 运行单元测试</span><br><span class="line">    mix.phpUnit();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>在终端执行命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gulp copy</span><br><span class="line">gulp</span><br></pre></td></tr></table></figure>
<p>上述操作将会在根目录文件夹<code>public/assets/</code>生成所需的前端资源，接下来就是在视图模板中使用。</p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
      </tags>
  </entry>
</search>
